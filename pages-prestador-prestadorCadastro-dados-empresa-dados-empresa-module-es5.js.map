{"version":3,"sources":["webpack:///src/app/pages/prestador/prestadorCadastro/dados-empresa/dados-empresa.page.html","webpack:///src/app/helpers/handlerError.ts","webpack:///src/app/helpers/toastCustom.ts","webpack:///src/app/pages/prestador/prestadorCadastro/dados-empresa/dados-empresa-routing.module.ts","webpack:///src/app/pages/prestador/prestadorCadastro/dados-empresa/dados-empresa.module.ts","webpack:///src/app/pages/prestador/prestadorCadastro/dados-empresa/dados-empresa.page.scss","webpack:///src/app/pages/prestador/prestadorCadastro/dados-empresa/dados-empresa.page.ts"],"names":["HandlerError","err","toastCtrl","data","message","error","console","log","errorToast","ToastCustom","msg","CustomToast","color","duration","create","then","x","present","routes","path","component","DadosEmpresaPageRoutingModule","imports","forChild","exports","DadosEmpresaPageModule","declarations","DadosEmpresaPage","usuarioService","router","ngZone","prestadorService","buscarCEPService","loadingContr","prestador","validation_messages","type","formulario","compose","required","RecuperaPrestador","RecuperaInstancia","recuperaUsuario","usuarioId","result","controls","setValue","telefone","cep","uf","cidade","bairro","logradouro","razaoSocial","handler","hideLoader","value","toString","length","showLoader","buscarCEP","erro","localidade","igrejas","valid","Mensagens","CamposObrigatorios","obj","situacaoPrestador","TipoSituacaoPrestador","CadastroLocalAtendimento","AdicionarNovoPrestador","SucessoToast","run","navigate","selector","template"],"mappings":"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","file":"pages-prestador-prestadorCadastro-dados-empresa-dados-empresa-module-es5.js","sourcesContent":["export default \"<ion-content fullscreen>\\n  <ion-header class=\\\"ion-no-border\\\">\\n    <ion-toolbar>\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-menu-button></ion-menu-button>\\n      </ion-buttons>\\n      <ion-title>\\n        Cadastro Prestador\\n      </ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n\\n  <ion-progress-bar color=\\\"secondary\\\" value=\\\"0.20\\\" buffer=\\\"0.40\\\"></ion-progress-bar>\\n\\n  <ion-card>\\n    <ion-card-header>\\n      <ion-card-title>Dados da Empresa</ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <form [formGroup]=\\\"formulario\\\">\\n\\n        <ion-item class=\\\"input-item\\\">\\n          <ion-label position=\\\"floating\\\">Razão Social <ion-text color=\\\"danger\\\">*</ion-text>\\n          </ion-label>\\n\\n          <ion-input type=\\\"text\\\" formControlName=\\\"razaoSocial\\\" clearInput autocapitalize=\\\"off\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item class=\\\"input-item\\\">\\n          <ion-label position=\\\"floating\\\">Telefone<ion-text color=\\\"danger\\\">*</ion-text>\\n          </ion-label>\\n\\n          <ion-input type=\\\"number\\\" formControlName=\\\"telefone\\\" clearInput autocapitalize=\\\"off\\\">\\n          </ion-input>\\n        </ion-item>\\n\\n\\n        <ion-item class=\\\"input-item\\\">\\n          <ion-label position=\\\"floating\\\">CEP Comercial ou residencial<ion-text color=\\\"danger\\\">*</ion-text>\\n          </ion-label>\\n          <ion-input type=\\\"number\\\" maxlength=\\\"8\\\" formControlName=\\\"cep\\\" clearInput autocapitalize=\\\"off\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-button color=\\\"primary\\\"  size=\\\"small\\\" (click)=\\\"buscarEnderecoPorCEP()\\\" >\\n          <ion-label>Buscar Endereço</ion-label>\\n          <ion-icon name=\\\"search-outline\\\"></ion-icon>\\n        </ion-button>\\n\\n\\n        <ion-item class=\\\"ion-no-border\\\">\\n          <ion-label class=\\\"ion-text-wrap\\\" *ngIf=\\\"formulario.value.logradouro\\\">\\n            <h3>{{formulario.value.logradouro}}, {{formulario.value.bairro}} - {{formulario.value.cidade}} /\\n              {{formulario.value.uf}}</h3>\\n          </ion-label>\\n        </ion-item>\\n        <div class=\\\"ion-text-end\\\" style=\\\"margin-top: 20px;\\\">\\n          <ion-button color=\\\"medium\\\" type=\\\"button\\\" (click)=\\\"voltar()\\\" style=\\\"margin-right: 20px!important;\\\" size=\\\"4\\\" clear>\\n            <ion-icon name=\\\"chevron-back-outline\\\"></ion-icon>Voltar</ion-button>\\n          <ion-button color=\\\"success\\\" type=\\\"button\\\" (click)=\\\"prosseguir()\\\" clear>Prosseguir <ion-icon name=\\\"checkmark\\\"></ion-icon>\\n          </ion-button>\\n        </div>\\n      </form>\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\";","import { ToastCustom } from './toastCustom';\nimport { ToastController } from '@ionic/angular/providers/toast-controller';\nexport class HandlerError {\n\n    public static handler(err: any, toastCtrl: ToastController) {\n        var data = err;\n        let message = data.error ? data.error.message : data;\n        \n        console.log(message);\n        ToastCustom.errorToast(message, toastCtrl);\n    }\n}","import { ToastController } from '@ionic/angular/providers/toast-controller';\n\nexport  class  ToastCustom{\n\n    public static errorToast(msg:string,  toastCtrl : ToastController){\n     \n      this.CustomToast(toastCtrl, msg,\"danger\",4000);\n    }\n\n    public static SucessoToast(toastCtrl : ToastController){\n\n      this.CustomToast(toastCtrl, \"Operação realizada com sucesso.\",\"success\",4000);\n    }\n\n    public static CustomToast(toastCtrl : ToastController, message:string, color:string, duration:any){\n      toastCtrl.create({\n        message: message,\n        duration: duration,\n        color:color\n      }).then(x=>{\n\n        x.present();\n      });\n    }\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DadosEmpresaPage } from './dados-empresa.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DadosEmpresaPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DadosEmpresaPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DadosEmpresaPageRoutingModule } from './dados-empresa-routing.module';\n\nimport { DadosEmpresaPage } from './dados-empresa.page';\nimport { ComponentsModule } from 'src/app/components/components.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ComponentsModule,\n    IonicModule,\n    DadosEmpresaPageRoutingModule\n  ],\n  declarations: [DadosEmpresaPage]\n})\nexport class DadosEmpresaPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3ByZXN0YWRvci9wcmVzdGFkb3JDYWRhc3Ryby9kYWRvcy1lbXByZXNhL2RhZG9zLWVtcHJlc2EucGFnZS5zY3NzIn0= */\";","import { Component, OnInit, NgZone } from '@angular/core';\nimport { HandlerError } from 'src/app/helpers/handlerError';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { UsuarioService } from 'src/app/providers/usuario/usuario.service';\nimport { ToastController } from '@ionic/angular';\nimport { PrestadorService } from 'src/app/providers/prestador/prestador.service';\nimport { Router } from '@angular/router';\nimport { LoadingContr } from 'src/app/helpers/loadingContr';\nimport { BuscarCEPService } from 'src/app/providers/buscaCEP/buscar-cep.service';\nimport { Config } from 'src/app/config';\nimport { Constants } from 'src/app/utils/constants';\nimport { ToastCustom } from 'src/app/helpers/toastCustom';\n\n@Component({\n  selector: 'app-dados-empresa',\n  templateUrl: './dados-empresa.page.html',\n  styleUrls: ['./dados-empresa.page.scss'],\n})\nexport class DadosEmpresaPage implements OnInit {\n\n  igrejas: any[]\n  formulario: FormGroup;\n  authRedirectResult: Subscription;\n  prestador: any = {}\n  StaMembro: boolean;\n\n  validation_messages = {\n    'telefone': [\n      { type: 'required', message: 'Campo de preenchimento obrigatório.' },\n    ],\n    'igrejaId': [\n      { type: 'required', message: 'Campo de preenchimento obrigatório.' },\n    ],\n    'cep': [\n      { type: 'required', message: 'Campo de preenchimento obrigatório.' },\n    ],\n    'razaoSocial': [\n      { type: 'required', message: 'Campo de preenchimento obrigatório.' },\n    ]\n  };\n\n  constructor(public usuarioService: UsuarioService,\n    public router: Router,\n    public toastCtrl: ToastController,\n    private ngZone: NgZone,\n    public prestadorService: PrestadorService,\n    public buscarCEPService: BuscarCEPService,\n    public loadingContr: LoadingContr\n  ) {\n\n    this.formulario = new FormGroup({\n\n      'telefone': new FormControl('', Validators.compose([\n        Validators.required\n      ])),\n      'cep': new FormControl('', Validators.compose([\n        Validators.required\n      ])), 'uf': new FormControl('', Validators.compose([\n        Validators.required\n      ])), 'cidade': new FormControl('', Validators.compose([\n        Validators.required\n      ])),\n      'bairro': new FormControl('', Validators.compose([\n        Validators.required\n      ])), 'logradouro': new FormControl('', Validators.compose([\n        Validators.required\n      ])),\n      'razaoSocial': new FormControl('', Validators.compose([\n        Validators.required\n      ]))\n    });\n\n    this.prestadorService.RecuperaPrestador(Config.RecuperaInstancia().recuperaUsuario().usuarioId)\n      .then((result) => {\n        this.prestador = result;\n        if (result) {\n          \n          this.formulario.controls['telefone'].setValue(result.telefone);\n          this.formulario.controls['cep'].setValue(result.cep);\n          this.formulario.controls['uf'].setValue(result.uf);\n          this.formulario.controls['cidade'].setValue(result.cidade);\n          this.formulario.controls['bairro'].setValue(result.bairro);\n          this.formulario.controls['logradouro'].setValue(result.logradouro);\n          this.formulario.controls['razaoSocial'].setValue(result.razaoSocial);\n        }\n      }).catch(err => {\n        HandlerError.handler(err, this.toastCtrl);\n        this.loadingContr.hideLoader();\n      });\n  }\n\n  ngOnInit() {\n\n  }\n\n  buscarEnderecoPorCEP() {\n    if (!this.formulario.value['cep'] || this.formulario.value['cep'].toString().length != \"8\") {\n      this.formulario.value.cidade = null;\n      this.formulario.value.bairro = null;\n      this.formulario.value.uf = null;\n      this.formulario.value.logradouro = null;\n\n      HandlerError.handler(\"Favor inserir CEP válido, antes de continuar.\", this.toastCtrl);\n      return false;\n    }\n\n    this.loadingContr.showLoader();\n\n    this.buscarCEPService.buscarCEP(this.formulario.value['cep']).then(x => {\n      if (x && !x.erro) {\n        this.formulario.controls[\"cidade\"].setValue(x.localidade);\n        this.formulario.controls[\"bairro\"].setValue(x.bairro);\n        this.formulario.controls[\"uf\"].setValue(x.uf);\n        this.formulario.controls[\"logradouro\"].setValue(x.logradouro);\n\n      } else {\n        HandlerError.handler(\"Favor inserir CEP válido, antes de continuar.\", this.toastCtrl);\n      }\n\n      this.loadingContr.hideLoader()\n\n    }).catch(x => {\n      this.igrejas = [];\n      this.loadingContr.hideLoader()\n      HandlerError.handler(x, this.toastCtrl);\n    })\n  }\n\n  prosseguir() {\n    if (!this.formulario.value.cidade) {\n      HandlerError.handler(\"Favor inserir CEP válido, antes de continuar.\", this.toastCtrl)\n      return false;\n    }\n\n    if (!this.formulario.valid) {\n      HandlerError.handler(Constants.Mensagens.CamposObrigatorios, this.toastCtrl)\n      return false;\n    }\n\n    this.loadingContr.showLoader()\n    let obj = this.formulario.value;\n    obj.usuarioId = Config.RecuperaInstancia().recuperaUsuario().usuarioId\n    obj.situacaoPrestador = Constants.TipoSituacaoPrestador.CadastroLocalAtendimento;\n\n    this.prestadorService.AdicionarNovoPrestador(obj)\n      .then(() => {\n        this.loadingContr.hideLoader();\n        ToastCustom.SucessoToast(this.toastCtrl);\n        this.ngZone.run(() => {\n          this.router.navigate(['prestador-local-atendimento']);\n        });\n      })\n      .catch((error) => {\n        HandlerError.handler(error, this.toastCtrl);\n        this.loadingContr.hideLoader();\n      });\n  }\n}\n"]}