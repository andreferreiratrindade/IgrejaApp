{"version":3,"sources":["webpack:///src/app/pages/prestador/prestadorCadastro/dados-empresa/dados-empresa.page.html","webpack:///src/app/pages/prestador/prestadorCadastro/dados-empresa/dados-empresa-routing.module.ts","webpack:///src/app/pages/prestador/prestadorCadastro/dados-empresa/dados-empresa.module.ts","webpack:///src/app/pages/prestador/prestadorCadastro/dados-empresa/dados-empresa.page.scss","webpack:///src/app/pages/prestador/prestadorCadastro/dados-empresa/dados-empresa.page.ts"],"names":["routes","path","component","DadosEmpresaPageRoutingModule","imports","forChild","exports","DadosEmpresaPageModule","declarations","DadosEmpresaPage","usuarioService","router","toastCtrl","ngZone","prestadorService","buscarCEPService","loadingContr","prestador","validation_messages","type","message","formulario","compose","required","value","toString","length","cidade","bairro","uf","logradouro","handler","showLoader","buscarCEP","then","x","erro","controls","setValue","localidade","hideLoader","igrejas","valid","Mensagens","CamposObrigatorios","obj","usuarioId","RecuperaInstancia","recuperaUsuario","situacaoPrestador","TipoSituacaoPrestador","CadastroLocalAtendimento","AdicionarNovoPrestador","SucessoToast","run","navigate","error","selector","template"],"mappings":"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","file":"pages-prestador-prestadorCadastro-dados-empresa-dados-empresa-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n      <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n      </ion-buttons>\\n    <ion-title>\\n      Dados da empresa \\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content fullscreen>\\n\\n  <form [formGroup]=\\\"formulario\\\" (ngSubmit)=\\\"SalvarFormulario()\\\">\\n    <ion-list  lines=\\\"full\\\" class=\\\"ion-no-margin ion-no-padding\\\">\\n      <ion-item class=\\\"input-item\\\">\\n        <ion-label position=\\\"floating\\\">Razão Social <ion-text color=\\\"danger\\\">*</ion-text></ion-label>\\n\\n        <ion-input type=\\\"text\\\"  formControlName=\\\"razaoSocial\\\" clearInput autocapitalize=\\\"off\\\"></ion-input>\\n      </ion-item>\\n     \\n      <ion-item class=\\\"input-item\\\">\\n        <ion-label position=\\\"floating\\\" >Telefone<ion-text color=\\\"danger\\\">*</ion-text></ion-label>\\n\\n        <ion-input type=\\\"number\\\"  [brmasker]=\\\"{phone: true}\\\" formControlName=\\\"telefone\\\" clearInput autocapitalize=\\\"off\\\" ></ion-input>\\n      </ion-item>\\n\\n\\n      <ion-item class=\\\"input-item\\\">\\n        <ion-label position=\\\"floating\\\">Cep<ion-text color=\\\"danger\\\">*</ion-text></ion-label>\\n        <ion-input type=\\\"number\\\" maxlength=\\\"8\\\" formControlName=\\\"cep\\\" clearInput autocapitalize=\\\"off\\\"></ion-input>\\n      </ion-item>\\n\\n       \\n        <ion-chip color=\\\"tertiary\\\" (click)=\\\"submitError='';buscarEnderecoPorCEP()\\\" size=\\\"6\\\">\\n          <ion-label>Buscar Endereço</ion-label>\\n          <ion-icon name=\\\"search-outline\\\"></ion-icon>\\n        </ion-chip>\\n        <ion-item class=\\\"input-item\\\">\\n          <ion-label class=\\\"ion-text-wrap\\\" *ngIf=\\\"formulario.value.logradouro\\\">\\n            <p>{{formulario.value.logradouro}}, {{formulario.value.bairro}} -  {{formulario.value.cidade}}  / {{formulario.value.uf}}</p>\\n          </ion-label>\\n        </ion-item>      \\n    </ion-list>\\n\\n    <ion-button class=\\\"sign-up-btn\\\" type=\\\"submit\\\" expand=\\\"block\\\" >Prosseguir</ion-button>\\n  </form>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DadosEmpresaPage } from './dados-empresa.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DadosEmpresaPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DadosEmpresaPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DadosEmpresaPageRoutingModule } from './dados-empresa-routing.module';\n\nimport { DadosEmpresaPage } from './dados-empresa.page';\nimport { ComponentsModule } from 'src/app/components/components.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ComponentsModule,\n    IonicModule,\n    DadosEmpresaPageRoutingModule\n  ],\n  declarations: [DadosEmpresaPage]\n})\nexport class DadosEmpresaPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3ByZXN0YWRvci9wcmVzdGFkb3JDYWRhc3Ryby9kYWRvcy1lbXByZXNhL2RhZG9zLWVtcHJlc2EucGFnZS5zY3NzIn0= */\";","import { Component, OnInit, NgZone } from '@angular/core';\nimport { HandlerError } from 'src/app/helpers/handlerError';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { UsuarioService } from 'src/app/providers/usuario/usuario.service';\nimport { ToastController } from '@ionic/angular';\nimport { PrestadorService } from 'src/app/providers/prestador/prestador.service';\nimport { Router } from '@angular/router';\nimport { LoadingContr } from 'src/app/helpers/loadingContr';\nimport { BuscarCEPService } from 'src/app/providers/buscaCEP/buscar-cep.service';\nimport { Config } from 'src/app/config';\nimport { Constants } from 'src/app/utils/constants';\nimport { ToastCustom } from 'src/app/helpers/toastCustom';\n\n@Component({\n  selector: 'app-dados-empresa',\n  templateUrl: './dados-empresa.page.html',\n  styleUrls: ['./dados-empresa.page.scss'],\n})\nexport class DadosEmpresaPage implements OnInit {\n\n  igrejas: any[]\n  formulario: FormGroup;\n  authRedirectResult: Subscription;\n  prestador: any = {}\n  StaMembro: boolean;\n\n  validation_messages = {\n    'telefone': [\n      { type: 'required', message: 'Campo de preenchimento obrigatório.' },\n    ],\n    'igrejaId': [\n      { type: 'required', message: 'Campo de preenchimento obrigatório.' },\n    ],\n    'cep': [\n      { type: 'required', message: 'Campo de preenchimento obrigatório.' },\n    ],\n    'razaoSocial': [\n      { type: 'required', message: 'Campo de preenchimento obrigatório.' },\n    ]\n  };\n\n  constructor(public usuarioService: UsuarioService,\n    public router: Router,\n    public toastCtrl: ToastController,\n    private ngZone: NgZone,\n    public prestadorService: PrestadorService,\n    public buscarCEPService: BuscarCEPService,\n    public loadingContr: LoadingContr\n  ) {\n\n    this.formulario = new FormGroup({\n\n      'telefone': new FormControl('', Validators.compose([\n        Validators.required\n      ])),\n      'cep': new FormControl('', Validators.compose([\n        Validators.required\n      ])), 'uf': new FormControl('', Validators.compose([\n        Validators.required\n      ])), 'cidade': new FormControl('', Validators.compose([\n        Validators.required\n      ])),\n      'bairro': new FormControl('', Validators.compose([\n        Validators.required\n      ])), 'logradouro': new FormControl('', Validators.compose([\n        Validators.required\n      ])),\n      'razaoSocial': new FormControl('', Validators.compose([\n        Validators.required\n      ]))\n    });\n  }\n\n  ngOnInit() {\n\n  }\n\n  buscarEnderecoPorCEP() {\n    if (!this.formulario.value['cep'] || this.formulario.value['cep'].toString().length != \"8\") {\n      this.formulario.value.cidade = null;\n      this.formulario.value.bairro = null;\n      this.formulario.value.uf = null;\n      this.formulario.value.logradouro = null;\n\n      HandlerError.handler(\"Favor inserir CEP válido, antes de continuar.\", this.toastCtrl);\n      return false;\n    }\n\n    this.loadingContr.showLoader();\n\n    this.buscarCEPService.buscarCEP(this.formulario.value['cep']).then(x => {\n      if (x && !x.erro) {\n        this.formulario.controls[\"cidade\"].setValue(x.localidade);\n        this.formulario.controls[\"bairro\"].setValue(x.bairro);\n        this.formulario.controls[\"uf\"].setValue(x.uf);\n        this.formulario.controls[\"logradouro\"].setValue(x.logradouro);\n\n      }else{\n        HandlerError.handler(\"Favor inserir CEP válido, antes de continuar.\", this.toastCtrl);\n      }\n\n      this.loadingContr.hideLoader()\n\n    }).catch(x => {\n      this.igrejas = [];\n      this.loadingContr.hideLoader()\n      HandlerError.handler(x, this.toastCtrl);\n    })\n  }\n\n  SalvarFormulario() {\n    if (!this.formulario.value.cidade) {\n      HandlerError.handler(\"Favor inserir CEP válido, antes de continuar.\", this.toastCtrl)\n      return false;\n    }\n\n    if (!this.formulario.valid) {\n      HandlerError.handler(Constants.Mensagens.CamposObrigatorios, this.toastCtrl)\n      return false;\n    }\n\n    this.loadingContr.showLoader()\n    let obj = this.formulario.value;\n    obj.usuarioId = Config.RecuperaInstancia().recuperaUsuario().usuarioId\n    obj.situacaoPrestador = Constants.TipoSituacaoPrestador.CadastroLocalAtendimento;\n\n    this.prestadorService.AdicionarNovoPrestador(obj)\n      .then(() => {\n        this.loadingContr.hideLoader();\n        ToastCustom.SucessoToast(this.toastCtrl);\n        this.ngZone.run(() => {\n          this.router.navigate(['prestador-local-atendimento']);\n        });\n      })\n      .catch((error) => {\n        HandlerError.handler(error, this.toastCtrl);\n        this.loadingContr.hideLoader();\n      });\n  }\n}\n"]}