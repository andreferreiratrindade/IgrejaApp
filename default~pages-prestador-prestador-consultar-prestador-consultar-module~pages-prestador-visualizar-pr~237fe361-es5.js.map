{"version":3,"sources":["webpack:///src/app/pages/prestador/visualizar-prestador/visualizar-prestador.page.html","webpack:///src/app/helpers/handlerError.ts","webpack:///src/app/helpers/toastCustom.ts","webpack:///src/app/pages/prestador/visualizar-prestador/visualizar-prestador.page.scss","webpack:///src/app/pages/prestador/visualizar-prestador/visualizar-prestador.page.ts","webpack:///src/app/providers/dominioServico/dominio-servico.service.ts","webpack:///src/app/providers/igreja/igreja.service.ts","webpack:///src/app/repository/dominioServico/dominio-servico-repository.service.ts","webpack:///src/app/repository/igreja/igreja-rep.service.ts"],"names":["HandlerError","err","toastCtrl","data","message","error","console","log","errorToast","ToastCustom","msg","CustomToast","color","duration","create","then","x","present","VisualizarPrestadorPage","prestadorService","dominioServicoService","loadingContr","ngZone","router","igrejaService","route","usuarioService","modalController","prestador","prestadorServicos","usuario","usuarioId","snapshot","queryParams","showLoader","RecuperaNomeUsuarios","resultado","RecuperaPrestador","result","nomeSituacaoPrestador","ListTipoSituacaoPrestador","RecuperaDescricaoPorValor","situacaoPrestador","RecuperaNomeIgreja","igrejaId","nomeIgreja","staMembro","hideLoader","handler","recuperaServicosPorPrestador","recuperaDominioServico","map","listItem","expanded","breveDescricao","nomeServico","filter","y","servicoId","dismiss","selector","template","DominioServicoService","dominioServico","ev","recuperaServicoAutoComplete","recuperaDominioServicoAtivo","servico","add","providedIn","IgrejaService","igrejaRepService","RecuperaIgrejaPorAdministrador","obj","cidade","RecuperaIgrejasPorCidade","uf","bairro","RecuperaIgrejasPorEndereco","igrejas","DominioServicoRepositoryService","servicoConverter","toFirestore","_collectionName","query","Promise","response","resp","endText","db","collection","orderBy","limit","where","get","lst","forEach","doc","push","id","deletado","IgrejaRepService","resolve","reject","find","elemento","tipoComparacao","comparacao"],"mappings":"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","file":"default~pages-prestador-prestador-consultar-prestador-consultar-module~pages-prestador-visualizar-pr~237fe361-es5.js","sourcesContent":["export default \"<ion-header translucent={true}>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"\\\" (click)=\\\"closeModal()\\\" text=\\\"Voltar\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Detalhes - Prestador</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <ion-card class=\\\"ion-no-border\\\">\\n    <ion-card-header>\\n\\n      <ion-card-title>\\n        <h3>Dados empresa</h3>\\n      </ion-card-title>\\n    </ion-card-header>\\n    <ion-item>\\n      <ion-label class=\\\"ion-text-wrap\\\">\\n        <p>Nome</p>\\n        <h3>{{usuario.nome}}</h3>\\n      </ion-label>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label class=\\\"ion-text-wrap\\\">\\n        <p>Email</p>\\n        <h3>{{usuario.email}}</h3>\\n      </ion-label>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label class=\\\"ion-text-wrap\\\">\\n        <p>Razão Social</p>\\n        <h3>{{prestador.razaoSocial}}</h3>\\n      </ion-label>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label class=\\\"ion-text-wrap\\\">\\n        <p>Telefone</p>\\n        <h3>{{prestador.telefone}}</h3>\\n      </ion-label>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label class=\\\"ion-text-wrap\\\">\\n        <p>Endereço</p>\\n        <h3>{{prestador.logradouro}}, {{prestador.bairro}} - {{prestador.cidade}} / {{prestador.uf}}</h3>\\n      </ion-label>\\n    </ion-item>\\n\\n  </ion-card>\\n\\n\\n  <ion-card class=\\\"ion-no-border\\\">\\n    <ion-card-header>\\n\\n      <ion-card-title>\\n        <h3>Local Atendimento</h3>\\n      </ion-card-title>\\n    </ion-card-header>\\n    <ion-item *ngFor=\\\"let item of prestador.locaisAtendimento; let i = index\\\">\\n      <ion-label class=\\\"ion-text-wrap\\\">\\n        <h2>{{i+1}}. {{item.cidade}} / {{item.uf}}</h2>\\n      </ion-label>\\n    </ion-item>\\n  </ion-card>\\n  <ion-card class=\\\"ion-no-border\\\">\\n    <ion-card-header>\\n\\n      <ion-card-title>\\n        <h3>Serviços</h3>\\n      </ion-card-title>\\n    </ion-card-header>\\n\\n    <ion-item *ngFor=\\\"let item of prestadorServicos\\\">\\n      <ion-label class=\\\"ion-text-wrap\\\">\\n        <h2>{{item.nomeServico}}</h2>\\n        <h3>{{item.breveDescricao}}</h3>\\n      </ion-label>\\n    </ion-item>\\n  </ion-card>\\n\\n  <ion-card class=\\\"ion-no-border\\\">\\n    <ion-card-header>\\n\\n      <ion-card-title>\\n        <h3>Igreja Vinculo</h3>\\n      </ion-card-title>\\n    </ion-card-header>\\n    <ion-item>\\n      <ion-label class=\\\"ion-text-wrap\\\">\\n        <h3>{{prestador.nomeIgreja}}</h3>\\n        <h3>{{prestador.staMembro}}</h3>\\n      </ion-label>\\n    </ion-item>\\n  </ion-card>\\n</ion-content>\";","import { ToastCustom } from './toastCustom';\nimport { ToastController } from '@ionic/angular/providers/toast-controller';\nexport class HandlerError {\n\n    public static handler(err: any, toastCtrl: ToastController) {\n        var data = err;\n        let message = data.error ? data.error.message : data;\n        \n        console.log(message);\n        ToastCustom.errorToast(message, toastCtrl);\n    }\n}","import { ToastController } from '@ionic/angular/providers/toast-controller';\n\nexport  class  ToastCustom{\n\n    public static errorToast(msg:string,  toastCtrl : ToastController){\n     \n      this.CustomToast(toastCtrl, msg,\"danger\",4000);\n    }\n\n    public static SucessoToast(toastCtrl : ToastController){\n\n      this.CustomToast(toastCtrl, \"Operação realizada com sucesso.\",\"success\",4000);\n    }\n\n    public static CustomToast(toastCtrl : ToastController, message:string, color:string, duration:any){\n      toastCtrl.create({\n        message: message,\n        duration: duration,\n        color:color\n      }).then(x=>{\n\n        x.present();\n      });\n    }\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3ByZXN0YWRvci92aXN1YWxpemFyLXByZXN0YWRvci92aXN1YWxpemFyLXByZXN0YWRvci5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit, NgZone } from '@angular/core';\nimport { LoadingContr } from 'src/app/helpers/loadingContr';\nimport { DominioServicoService } from 'src/app/providers/dominioServico/dominio-servico.service';\nimport { PrestadorService } from 'src/app/providers/prestador/prestador.service';\nimport { ToastController, ModalController } from '@ionic/angular';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Config } from 'src/app/config';\nimport { HandlerError } from 'src/app/helpers/handlerError';\nimport { UsuarioService } from 'src/app/providers/usuario/usuario.service';\nimport { Constants } from 'src/app/utils/constants';\nimport { IgrejaService } from 'src/app/providers/igreja/igreja.service';\n\n@Component({\n  selector: 'app-visualizar-prestador',\n  templateUrl: './visualizar-prestador.page.html',\n  styleUrls: ['./visualizar-prestador.page.scss'],\n})\nexport class VisualizarPrestadorPage implements OnInit {\n\n  prestador: any = {};\n  prestadorServicos : any[] = [];\n  usuario : any = {};\n  usuarioId: string;\n  constructor(public prestadorService: PrestadorService,\n    public dominioServicoService: DominioServicoService,\n    public loadingContr: LoadingContr,\n    public ngZone: NgZone,\n    public router: Router,\n    public toastCtrl: ToastController,\n    public igrejaService: IgrejaService,\n    private route: ActivatedRoute,\n    private usuarioService: UsuarioService,\n    public modalController: ModalController,\n\n  ) {\n\n    this.usuarioId = this.route.snapshot.queryParams['usuarioId'];\n  }\n\n  ngOnInit() {\n    this.loadingContr.showLoader();\n\n    this.usuarioService.RecuperaNomeUsuarios([this.usuarioId])\n      .then(resultado => {\n\n        this.usuario = resultado[0].data;\n      })\n\n    this.prestadorService.RecuperaPrestador(this.usuarioId)\n      .then((result) => {\n        this.prestador = result;\n        this.prestador.nomeSituacaoPrestador = Constants.ListTipoSituacaoPrestador.RecuperaDescricaoPorValor(this.prestador.situacaoPrestador);\n        this.igrejaService.RecuperaNomeIgreja([this.prestador.igrejaId]).then(result => {\n          this.prestador.nomeIgreja = result[0].data.nomeIgreja;\n          this.prestador.staMembro = result[0].data.staMembro;\n          this.loadingContr.hideLoader();\n        }).catch(err => {\n          HandlerError.handler(err, this.toastCtrl);\n          this.loadingContr.hideLoader();\n        });\n      }).catch(err => {\n        HandlerError.handler(err, this.toastCtrl);\n        this.loadingContr.hideLoader();\n      });\n\n    this.prestadorService.recuperaServicosPorPrestador(this.usuarioId)\n      .then(result => {\n        this.prestadorServicos = result;\n        this.dominioServicoService.recuperaDominioServico().then(x => {\n\n          this.prestadorServicos.map((listItem) => {\n            listItem.expanded = false;\n\n            listItem.breveDescricao = listItem.breveDescricao ?? \"\";\n            listItem.nomeServico = x.filter(y => y.servicoId == listItem.servicoId)[0].nomeServico;\n            return listItem;\n          });\n          this.loadingContr.hideLoader();\n        });\n\n      }).catch(err => {\n        HandlerError.handler(err, this.toastCtrl);\n        this.loadingContr.hideLoader();\n      });\n  }\n\n  closeModal() {\n    this.modalController.dismiss(null, 'cancel');\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { DominioServicoRepositoryService } from 'src/app/repository/dominioServico/dominio-servico-repository.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DominioServicoService {\n  recuperaServicoAutoComplete(ev: string) {\n     return this.dominioServico.recuperaServicoAutoComplete(ev);\n  }\n\n  constructor(public dominioServico: DominioServicoRepositoryService) { }\n\n  public recuperaDominioServico() : Promise<any>{\n    \n    return this.dominioServico.recuperaDominioServico();\n  }\n\n  public recuperaDominioServicoAtivo() : Promise<any>{\n    \n    return this.dominioServico.recuperaDominioServicoAtivo();\n  }\n\n  public adicionaServico(servico:any) : Promise<any>{\n  \n    return this.dominioServico.add(servico,null);\n  }\n\n  public excluirServico(servicoId:string){\n      return this.dominioServico.delete(servicoId);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { IgrejaRepService } from 'src/app/repository/igreja/igreja-rep.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IgrejaService {\n\n\n  constructor(public igrejaRepService: IgrejaRepService) { }\n\n\n  RecuperaIgrejaPorAdministrador(usuarioId:any):Promise<any[]>{\n    return  this.igrejaRepService.RecuperaIgrejaPorAdministrador(usuarioId);\n\n  }\n\n  AdicionarNovaIgreja(obj : any) : Promise<any>{\n    return  this.igrejaRepService.add(obj,null);\n  }\n\n  RecuperaIgrejasPorCidade(cidade:string) : Promise<any[]>{\n    return this.igrejaRepService.RecuperaIgrejasPorCidade(cidade);\n  }\n  \n  RecuperaIgrejasPorEndereco(uf:string, cidade:string, bairro:string) : Promise<any[]>{\n    return this.igrejaRepService.RecuperaIgrejasPorEndereco(uf,cidade,bairro);\n  }\n\n  RecuperaNomeIgreja(igrejas: string[]) {\n    return this.igrejaRepService.RecuperaNomeIgreja(igrejas);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BaseRepository } from '../repository-interface/Repository-Base';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DominioServicoRepositoryService extends BaseRepository {\n\n    /**\n     *\n     */\n    constructor() {\n        super();\n        this._collectionName = \"dominioServico\";\n    }\n\n    servicoConverter = {\n\n        toFirestore:function(servico){\n            return {servicoId : servico.servicoId,\n            nomeServico:servico.nomeServico}\n        }\n\n    }\n    recuperaServicoAutoComplete(query: string): Promise<any> {\n\n        return new Promise<any>((response, resp) => {\n            const endText = query + '\\uf8ff'; \n            this.db.collection(\"dominioServico\")\n                .orderBy(\"nomeServico\")\n                .limit(10)\n                .where(\"nomeServico\",\">=\",query)\n                .where(\"nomeServico\",\"<=\",endText)\n                // .startAt(query)\n                // .endAt(endText)\n                .get()\n                .then((result) => {\n\n                    let lst = [];\n                    result.forEach(function (doc) {\n\n                        lst.push({ nomeServico: doc.data().nomeServico, servicoId: doc.id });\n                    })\n                    response(lst);\n                })\n                .catch((err) => {\n                    resp(err);\n                });\n        });\n    }\n\n\n    recuperaDominioServico(): Promise<any> {\n        return new Promise<any>((response, resp) => {\n            this.db.collection(\"dominioServico\").get()\n            .then((result) => {\n\n                let lst = [];\n                result.forEach(function (doc) {\n\n                    lst.push({ nomeServico: doc.data().nomeServico, servicoId: doc.id, deletado:doc.data().deletado });\n                })\n                response(lst);\n            })\n        });\n    }\n\n    recuperaDominioServicoAtivo(): Promise<any> {\n        return new Promise<any>((response, resp) => {\n            this.db.collection(\"dominioServico\")\n            .where(\"deletado\",\"==\",false)\n            .get()\n            .then((result) => {\n\n                let lst = [];\n                result.forEach(function (doc) {\n\n                    lst.push({ nomeServico: doc.data().nomeServico, servicoId: doc.id, deletado:doc.data().deletado });\n                })\n                response(lst);\n            })\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BaseRepository } from '../repository-interface/Repository-Base';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IgrejaRepService extends BaseRepository {\n\n  constructor() {\n    super();\n\n    this._collectionName = \"igreja\";\n  }\n\n  RecuperaIgrejasPorEndereco(uf: string, cidade: string, bairro: string): Promise<any[]> {\n    return new Promise<any>((resolve, reject) => {\n      let query = this.db.collection('igreja')\n        .where(\"uf\", \"==\", uf);\n\n      if (cidade) {\n        query = query.where(\"cidade\", \"==\", cidade)\n      }\n\n      if (bairro) {\n        query = query.where(\"bairro\", \"==\", bairro)\n      }\n\n      query.get()\n        .then((result) => {\n\n          let lst = [];\n          result.forEach(function (doc) {\n\n            lst.push(doc.data());\n\n          });\n          resolve(lst)\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n  }\n\n\n\n  RecuperaIgrejaPorAdministrador(usuarioId): Promise<any[]> {\n    return new Promise<any>((resolve, reject) => {\n      this.db.collection('igreja')\n        .where(\"administradores\", \"array-contains\", usuarioId)\n        .get()\n        .then((result) => {\n          let lst = [];\n          result.forEach(function (doc) {\n\n            lst.push(doc.data());\n\n          });\n          resolve(lst)\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n  }\n\n  RecuperaIgrejasPorCidade(cidade: string): Promise<any[]> {\n\n    return this.find({ elemento: \"cidade\", tipoComparacao: \"==\", comparacao: cidade });\n  }\n\n  RecuperaNomeIgreja(igrejas: string[]) {\n\n    // return this.db.collection(\"igreja\").where(firebase.firestore.FieldPath.documentId(),\"array-contains\",igrejas).get()\n    return this.find({ elemento: \"id\", tipoComparacao: \"in\", comparacao: igrejas });\n  }\n}\n"]}