{"version":3,"sources":["webpack:///src/app/pages/gerenciarIgreja/criar-igreja/criar-igreja.page.html","webpack:///src/app/helpers/handlerError.ts","webpack:///src/app/pages/gerenciarIgreja/criar-igreja/criar-igreja.module.ts","webpack:///src/app/pages/gerenciarIgreja/criar-igreja/criar-igreja.page.scss","webpack:///src/app/pages/gerenciarIgreja/criar-igreja/criar-igreja.page.ts","webpack:///src/app/providers/igreja/igreja.service.ts","webpack:///src/app/repository/igreja/igreja-rep.service.ts"],"names":["HandlerError","err","toastCtrl","data","message","error","console","log","errorToast","routes","path","component","CriarIgrejaPageModule","imports","forChild","declarations","CriarIgrejaPage","buscarCEPService","igrejaService","router","loadingControll","ngZone","usuarioService","igrejaEntity","validation_messages","type","formData","compose","required","controls","setValue","value","cep","toString","length","handler","showLoader","buscarCEP","then","x","erro","localidade","bairro","uf","logradouro","hideLoader","cidade","valid","Mensagens","CamposObrigatorios","administradores","administradorUsuarioId","AdicionarNovaIgreja","AdicionaPerfilAoUsuario","PerfilUsuario","AdministradorIgreja","SucessoToast","run","navigate","RecuperaUsuarioPorEmail","emailAdministrador","result","usuarioId","email","nome","selector","template","IgrejaService","igrejaRepService","RecuperaIgrejaPorAdministrador","obj","add","RecuperaIgrejasPorCidade","RecuperaIgrejasPorEndereco","igrejas","RecuperaNomeIgreja","providedIn","IgrejaRepService","_collectionName","Promise","resolve","reject","query","db","collection","where","get","lst","forEach","doc","push","find","elemento","tipoComparacao","comparacao"],"mappings":"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","file":"pages-gerenciarIgreja-criar-igreja-criar-igreja-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Adicionar Igreja\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content fullscreen>\\n  <form [formGroup]=\\\"formData\\\" (ngSubmit)=\\\"salvarIgreja()\\\">\\n    <ion-list class=\\\"inputs-list\\\" lines=\\\"full\\\">\\n      <ion-item class=\\\"input-item\\\">\\n        <ion-label position=\\\"floating\\\">Nome Igreja <ion-text color=\\\"danger\\\">*</ion-text>\\n        </ion-label>\\n\\n        <ion-input type=\\\"text\\\" formControlName=\\\"nomeIgreja\\\" clearInput autocapitalize=\\\"off\\\"></ion-input>\\n      </ion-item>\\n      <app-mensagem-validacao [validation_messages_object]=\\\"validation_messages.nomeIgreja\\\" [form]=\\\"formData\\\"\\n        [nomeCampo]=\\\"'nomeIgreja'\\\"></app-mensagem-validacao>\\n\\n      <ion-item class=\\\"input-item\\\">\\n        <ion-label position=\\\"floating\\\">Cep <ion-text color=\\\"danger\\\">*</ion-text>\\n        </ion-label>\\n        <ion-input type=\\\"text\\\" formControlName=\\\"cep\\\" clearInput autocapitalize=\\\"off\\\"></ion-input>\\n      </ion-item>\\n\\n      <ion-chip color=\\\"tertiary\\\" (click)=\\\"submitError='';buscarEnderecoPorCEP()\\\" size=\\\"6\\\">\\n        <ion-label>Buscar Endereço</ion-label>\\n        <ion-icon name=\\\"search-outline\\\"></ion-icon>\\n      </ion-chip>\\n      <ion-item class=\\\"input-item\\\">\\n        <ion-label class=\\\"ion-text-wrap\\\" *ngIf=\\\"formData.value.logradouro\\\">\\n          <p>{{formData.value.logradouro}}, {{formData.value.bairro}} - {{formData.value.cidade}} / {{formData.value.uf}}</p>\\n        </ion-label>\\n\\n        <!-- <ion-button color=\\\"tertiary\\\" type=\\\"button\\\" (click)=\\\"submitError='';buscarEnderecoPorCEP()\\\" [submitError]=\\\"\\\">Buscar endereço</ion-button> -->\\n        <app-mensagem-validacao [validation_messages_object]=\\\"validation_messages.cep\\\" [form]=\\\"formData\\\"\\n          [nomeCampo]=\\\"'cep'\\\"></app-mensagem-validacao>\\n      </ion-item>\\n\\n      <ion-item class=\\\"input-item\\\">\\n        <ion-label position=\\\"floating\\\" class=\\\"ion-text-wrap\\\">Email do administrador da igreja <ion-text color=\\\"danger\\\">*</ion-text>\\n        </ion-label>\\n        <ion-input type=\\\"text\\\" formControlName=\\\"emailAdministrador\\\" clearInput autocapitalize=\\\"off\\\"></ion-input>\\n      </ion-item>\\n      <ion-chip color=\\\"tertiary\\\" (click)=\\\"buscarUsuarioAdministradorIgreja()\\\" size=\\\"6\\\">\\n        <ion-label>Buscar Administrador</ion-label>\\n        <ion-icon name=\\\"search-outline\\\"></ion-icon>\\n      </ion-chip>\\n      <ion-item class=\\\"input-item\\\">\\n        <ion-label class=\\\"ion-text-wrap\\\" *ngIf=\\\"formData.value.administradorUsuarioId\\\">\\n          <p>{{formData.value.emailAdministrador}}</p>\\n          <p>{{formData.value.nomeAdministrador}}</p>\\n        </ion-label>\\n      </ion-item>\\n\\n    </ion-list>\\n    <ion-button class=\\\"sign-up-btn\\\" type=\\\"submit\\\" [submitError]=\\\"\\\" expand=\\\"block\\\">\\n      Adicionar Igreja</ion-button>\\n  </form>\\n</ion-content>\";","import { ToastCustom } from './toastCustom';\nimport { ToastController } from '@ionic/angular/providers/toast-controller';\nexport class HandlerError {\n\n    public static handler(err: any, toastCtrl: ToastController) {\n        var data = err;\n        let message = data.error ? data.error.message : data;\n        \n        console.log(message);\n        ToastCustom.errorToast(message, toastCtrl);\n    }\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CriarIgrejaPageRoutingModule } from './criar-igreja-routing.module';\n\nimport { CriarIgrejaPage } from './criar-igreja.page';\nimport { ComponentsModule } from 'src/app/components/components.module';\nimport { RouterModule, Routes } from '@angular/router';\nconst routes: Routes = [\n  {\n    path: '',\n    component: CriarIgrejaPage,\n  }\n];\n@NgModule({\n\n    imports: [\n      CommonModule,\n      FormsModule,\n      ReactiveFormsModule,\n      ComponentsModule,\n      IonicModule,\n      RouterModule.forChild(routes),\n  \n  ],\n  declarations: [CriarIgrejaPage]\n})\nexport class CriarIgrejaPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2dlcmVuY2lhcklncmVqYS9jcmlhci1pZ3JlamEvY3JpYXItaWdyZWphLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit, NgZone } from '@angular/core';\nimport { BuscarCEPService } from 'src/app/providers/buscaCEP/buscar-cep.service';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\n\nimport { IgrejaService } from 'src/app/providers/igreja/igreja.service';\nimport { Config } from 'src/app/config';\nimport { Router } from '@angular/router';\nimport { UsuarioService } from 'src/app/providers/usuario/usuario.service';\nimport { HandlerError } from 'src/app/helpers/handlerError';\nimport { ToastController } from '@ionic/angular';\nimport { LoadingContr } from 'src/app/helpers/loadingContr';\nimport { ToastCustom } from 'src/app/helpers/toastCustom';\nimport { Constants } from 'src/app/utils/constants';\n\n@Component({\n  selector: 'app-criar-igreja',\n  templateUrl: './criar-igreja.page.html',\n  styleUrls: ['./criar-igreja.page.scss'],\n})\nexport class CriarIgrejaPage implements OnInit {\n\n  private igrejaEntity: any = {}\n  public formData: FormGroup;\n  public enderecoParte1: string;\n  public enderecoParte2: string;\n  validation_messages = {\n    'nomeIgreja': [\n      { type: 'required', message: 'Campo de preenchimento obrigatório.' },\n    ],\n    'cep': [\n      { type: 'required', message: 'Campo de preenchimento obrigatório.' },\n    ], 'nomeAdministrador': [\n      { type: 'required', message: 'Campo de preenchimento obrigatório.' },\n    ], 'administradorUsuarioId': [\n      { type: 'required', message: 'Campo de preenchimento obrigatório.' },\n    ]\n  };\n  constructor(public buscarCEPService: BuscarCEPService,\n    public igrejaService: IgrejaService,\n    public router: Router,\n    public toastCtrl: ToastController,\n    public loadingControll: LoadingContr,\n    public ngZone: NgZone,\n    public usuarioService: UsuarioService,\n  ) {\n\n    this.formData = new FormGroup({\n      'cep': new FormControl('', Validators.compose([\n        Validators.required\n      ])),\n      'nomeIgreja': new FormControl('', Validators.compose([\n        Validators.required\n      ])), 'logradouro': new FormControl('', Validators.compose([\n        Validators.required\n      ])), 'bairro': new FormControl('', Validators.compose([\n        Validators.required\n      ])), 'uf': new FormControl('', Validators.compose([\n        Validators.required\n      ])), 'cidade': new FormControl('', Validators.compose([\n        Validators.required\n      ])),\n      'emailAdministrador': new FormControl('', Validators.compose([\n        Validators.required\n      ])), 'nomeAdministrador': new FormControl('', Validators.compose([\n        Validators.required\n      ])), 'administradorUsuarioId': new FormControl('', Validators.compose([\n        Validators.required\n      ])),\n\n\n    });\n\n  }\n\n  ngOnInit() {\n\n  }\n\n  buscarEnderecoPorCEP() {\n\n    this.formData.controls['cidade'].setValue(null);\n    this.formData.controls['bairro'].setValue(null);\n    this.formData.controls['uf'].setValue(null);\n    this.formData.controls['logradouro'].setValue(null);\n\n    if (!this.formData.value.cep || this.formData.value.cep.toString().length != \"8\") {\n      HandlerError.handler(\"Favor inserir CEP válido, antes de continuar.\", this.toastCtrl);\n      return false;\n    }\n    this.loadingControll.showLoader();\n\n\n    this.buscarCEPService.buscarCEP(this.formData.value.cep).then(x => {\n\n      if (x && !x.erro) {\n        this.formData.controls['cidade'].setValue(x.localidade);\n        this.formData.controls['bairro'].setValue(x.bairro);\n        this.formData.controls['uf'].setValue(x.uf);\n        this.formData.controls['logradouro'].setValue(x.logradouro);\n\n        this.loadingControll.hideLoader();\n      } else {\n        this.loadingControll.hideLoader()\n        HandlerError.handler(\"Favor inserir CEP válido, antes de continuar.\", this.toastCtrl);\n      }\n\n    }).catch(x => {\n      this.loadingControll.hideLoader();\n      HandlerError.handler(x, this.toastCtrl);\n    });\n\n  }\n\n  salvarIgreja() {\n    if (!this.formData.value.cidade) {\n      HandlerError.handler(\"Favor inserir CEP válido, antes de continuar.\", this.toastCtrl);\n      return false;\n    }\n\n    if (!this.formData.valid) {\n      HandlerError.handler(Constants.Mensagens.CamposObrigatorios, this.toastCtrl)\n      return false;\n    }\n\n    this.loadingControll.showLoader()\n\n    this.igrejaEntity = this.formData.value;\n    this.igrejaEntity.administradores = [this.formData.value.administradorUsuarioId];\n    this.igrejaService.AdicionarNovaIgreja(this.igrejaEntity).then(() => {\n\n      this.usuarioService\n        .AdicionaPerfilAoUsuario(this.formData.value.administradorUsuarioId, Constants.PerfilUsuario.AdministradorIgreja)\n        .then(() => {\n          ToastCustom.SucessoToast(this.toastCtrl);\n          this.loadingControll.hideLoader();\n          this.ngZone.run(() => {\n            this.router.navigate(['home']);\n          });\n        }).catch((error) => {\n          HandlerError.handler(error, this.toastCtrl);\n          this.loadingControll.hideLoader();\n\n        });\n\n    }).catch((error) => {\n      HandlerError.handler(error, this.toastCtrl);\n      this.loadingControll.hideLoader();\n\n    });\n  }\n\n  buscarUsuarioAdministradorIgreja() {\n    this.loadingControll.showLoader();\n\n    this.usuarioService.RecuperaUsuarioPorEmail(this.formData.value.emailAdministrador).then(result => {\n      if (result.length > 0) {\n        this.formData.controls['administradorUsuarioId'].setValue(result[0].data.usuarioId);\n        this.formData.controls['emailAdministrador'].setValue(result[0].data.email);\n        this.formData.controls['nomeAdministrador'].setValue(result[0].data.nome);\n      } else {\n        HandlerError.handler(\"Nenhum usuário encontrado com este e-mail.\", this.toastCtrl);\n      }\n      this.loadingControll.hideLoader();\n\n    }).catch((error) => {\n      HandlerError.handler(error, this.toastCtrl);\n      this.loadingControll.hideLoader();\n\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { IgrejaRepService } from 'src/app/repository/igreja/igreja-rep.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IgrejaService {\n\n\n  constructor(public igrejaRepService: IgrejaRepService) { }\n\n\n  RecuperaIgrejaPorAdministrador(usuarioId:any):Promise<any[]>{\n    return  this.igrejaRepService.RecuperaIgrejaPorAdministrador(usuarioId);\n\n  }\n\n  AdicionarNovaIgreja(obj : any) : Promise<any>{\n    return  this.igrejaRepService.add(obj,null);\n  }\n\n  RecuperaIgrejasPorCidade(cidade:string) : Promise<any[]>{\n    return this.igrejaRepService.RecuperaIgrejasPorCidade(cidade);\n  }\n  \n  RecuperaIgrejasPorEndereco(uf:string, cidade:string, bairro:string) : Promise<any[]>{\n    return this.igrejaRepService.RecuperaIgrejasPorEndereco(uf,cidade,bairro);\n  }\n\n  RecuperaNomeIgreja(igrejas: string[]) {\n    return this.igrejaRepService.RecuperaNomeIgreja(igrejas);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BaseRepository } from '../repository-interface/Repository-Base';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IgrejaRepService extends BaseRepository {\n\n  constructor() {\n    super();\n\n    this._collectionName = \"igreja\";\n  }\n\n  RecuperaIgrejasPorEndereco(uf: string, cidade: string, bairro: string): Promise<any[]> {\n    return new Promise<any>((resolve, reject) => {\n      let query = this.db.collection('igreja')\n        .where(\"uf\", \"==\", uf);\n\n      if (cidade) {\n        query = query.where(\"cidade\", \"==\", cidade)\n      }\n\n      if (bairro) {\n        query = query.where(\"bairro\", \"==\", bairro)\n      }\n\n      query.get()\n        .then((result) => {\n\n          let lst = [];\n          result.forEach(function (doc) {\n\n            lst.push(doc.data());\n\n          });\n          resolve(lst)\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n  }\n\n\n\n  RecuperaIgrejaPorAdministrador(usuarioId): Promise<any[]> {\n    return new Promise<any>((resolve, reject) => {\n      this.db.collection('igreja')\n        .where(\"administradores\", \"array-contains\", {usuarioId:usuarioId})\n        .get()\n        .then((result) => {\n          let lst = [];\n          result.forEach(function (doc) {\n\n            lst.push(doc.data());\n\n          });\n          resolve(lst)\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n  }\n\n  RecuperaIgrejasPorCidade(cidade: string): Promise<any[]> {\n\n    return this.find({ elemento: \"cidade\", tipoComparacao: \"==\", comparacao: cidade });\n  }\n\n  RecuperaNomeIgreja(igrejas: string[]) {\n\n    // return this.db.collection(\"igreja\").where(firebase.firestore.FieldPath.documentId(),\"array-contains\",igrejas).get()\n    return this.find({ elemento: \"id\", tipoComparacao: \"in\", comparacao: igrejas });\n  }\n}\n"]}