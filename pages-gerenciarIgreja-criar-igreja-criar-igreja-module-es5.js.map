{"version":3,"sources":["webpack:///src/app/pages/gerenciarIgreja/criar-igreja/criar-igreja.page.html","webpack:///src/app/pages/gerenciarIgreja/criar-igreja/criar-igreja.module.ts","webpack:///src/app/pages/gerenciarIgreja/criar-igreja/criar-igreja.page.scss","webpack:///src/app/pages/gerenciarIgreja/criar-igreja/criar-igreja.page.ts"],"names":["routes","path","component","CriarIgrejaPageModule","imports","forChild","declarations","CriarIgrejaPage","buscarCEPService","igrejaService","router","toastCtrl","loadingControll","ngZone","usuarioService","igrejaEntity","validation_messages","type","message","formData","compose","required","controls","setValue","value","cep","toString","length","handler","showLoader","buscarCEP","then","x","erro","localidade","bairro","uf","logradouro","hideLoader","cidade","valid","Mensagens","CamposObrigatorios","administradores","usuarioId","administradorUsuarioId","AdicionarNovaIgreja","AdicionaPerfilAoUsuario","PerfilUsuario","AdministradorIgreja","SucessoToast","run","navigate","error","RecuperaUsuarioPorEmail","emailAdministrador","result","data","email","nome","selector","template"],"mappings":"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","file":"pages-gerenciarIgreja-criar-igreja-criar-igreja-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Adicionar Igreja\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content fullscreen>\\n  <form [formGroup]=\\\"formData\\\" (ngSubmit)=\\\"salvarIgreja()\\\">\\n    <ion-list class=\\\"inputs-list\\\" lines=\\\"full\\\">\\n      <ion-item class=\\\"input-item\\\">\\n        <ion-label position=\\\"floating\\\">Nome Igreja <ion-text color=\\\"danger\\\">*</ion-text>\\n        </ion-label>\\n\\n        <ion-input type=\\\"text\\\" formControlName=\\\"nomeIgreja\\\" clearInput autocapitalize=\\\"off\\\"></ion-input>\\n      </ion-item>\\n      <app-mensagem-validacao [validation_messages_object]=\\\"validation_messages.nomeIgreja\\\" [form]=\\\"formData\\\"\\n        [nomeCampo]=\\\"'nomeIgreja'\\\"></app-mensagem-validacao>\\n\\n      <ion-item class=\\\"input-item\\\">\\n        <ion-label position=\\\"floating\\\">Cep <ion-text color=\\\"danger\\\">*</ion-text>\\n        </ion-label>\\n        <ion-input type=\\\"text\\\" formControlName=\\\"cep\\\" clearInput autocapitalize=\\\"off\\\"></ion-input>\\n      </ion-item>\\n\\n      <ion-chip color=\\\"tertiary\\\" (click)=\\\"submitError='';buscarEnderecoPorCEP()\\\" size=\\\"6\\\">\\n        <ion-label>Buscar Endereço</ion-label>\\n        <ion-icon name=\\\"search-outline\\\"></ion-icon>\\n      </ion-chip>\\n      <ion-item class=\\\"input-item\\\">\\n        <ion-label class=\\\"ion-text-wrap\\\" *ngIf=\\\"formData.value.logradouro\\\">\\n          <p>{{formData.value.logradouro}}, {{formData.value.bairro}} - {{formData.value.cidade}} / {{formData.value.uf}}</p>\\n        </ion-label>\\n\\n        <!-- <ion-button color=\\\"tertiary\\\" type=\\\"button\\\" (click)=\\\"submitError='';buscarEnderecoPorCEP()\\\" [submitError]=\\\"\\\">Buscar endereço</ion-button> -->\\n        <app-mensagem-validacao [validation_messages_object]=\\\"validation_messages.cep\\\" [form]=\\\"formData\\\"\\n          [nomeCampo]=\\\"'cep'\\\"></app-mensagem-validacao>\\n      </ion-item>\\n\\n      <ion-item class=\\\"input-item\\\">\\n        <ion-label position=\\\"floating\\\" class=\\\"ion-text-wrap\\\">Email do administrador da igreja <ion-text color=\\\"danger\\\">*</ion-text>\\n        </ion-label>\\n        <ion-input type=\\\"text\\\" formControlName=\\\"emailAdministrador\\\" clearInput autocapitalize=\\\"off\\\"></ion-input>\\n      </ion-item>\\n      <ion-chip color=\\\"tertiary\\\" (click)=\\\"buscarUsuarioAdministradorIgreja()\\\" size=\\\"6\\\">\\n        <ion-label>Buscar Administrador</ion-label>\\n        <ion-icon name=\\\"search-outline\\\"></ion-icon>\\n      </ion-chip>\\n      <ion-item class=\\\"input-item\\\">\\n        <ion-label class=\\\"ion-text-wrap\\\" *ngIf=\\\"formData.value.administradorUsuarioId\\\">\\n          <p>{{formData.value.emailAdministrador}}</p>\\n          <p>{{formData.value.nomeAdministrador}}</p>\\n        </ion-label>\\n      </ion-item>\\n\\n    </ion-list>\\n    <ion-button class=\\\"sign-up-btn\\\" type=\\\"submit\\\" [submitError]=\\\"\\\" expand=\\\"block\\\">\\n      Adicionar Igreja</ion-button>\\n  </form>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CriarIgrejaPageRoutingModule } from './criar-igreja-routing.module';\n\nimport { CriarIgrejaPage } from './criar-igreja.page';\nimport { ComponentsModule } from 'src/app/components/components.module';\nimport { RouterModule, Routes } from '@angular/router';\nconst routes: Routes = [\n  {\n    path: '',\n    component: CriarIgrejaPage,\n  }\n];\n@NgModule({\n\n    imports: [\n      CommonModule,\n      FormsModule,\n      ReactiveFormsModule,\n      ComponentsModule,\n      IonicModule,\n      RouterModule.forChild(routes),\n  \n  ],\n  declarations: [CriarIgrejaPage]\n})\nexport class CriarIgrejaPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2dlcmVuY2lhcklncmVqYS9jcmlhci1pZ3JlamEvY3JpYXItaWdyZWphLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit, NgZone } from '@angular/core';\nimport { BuscarCEPService } from 'src/app/providers/buscaCEP/buscar-cep.service';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\n\nimport { IgrejaService } from 'src/app/providers/igreja/igreja.service';\nimport { Config } from 'src/app/config';\nimport { Router } from '@angular/router';\nimport { UsuarioService } from 'src/app/providers/usuario/usuario.service';\nimport { HandlerError } from 'src/app/helpers/handlerError';\nimport { ToastController } from '@ionic/angular';\nimport { LoadingContr } from 'src/app/helpers/loadingContr';\nimport { ToastCustom } from 'src/app/helpers/toastCustom';\nimport { Constants } from 'src/app/utils/constants';\n\n@Component({\n  selector: 'app-criar-igreja',\n  templateUrl: './criar-igreja.page.html',\n  styleUrls: ['./criar-igreja.page.scss'],\n})\nexport class CriarIgrejaPage implements OnInit {\n\n  private igrejaEntity: any = {}\n  public formData: FormGroup;\n  public enderecoParte1: string;\n  public enderecoParte2: string;\n  validation_messages = {\n    'nomeIgreja': [\n      { type: 'required', message: 'Campo de preenchimento obrigatório.' },\n    ],\n    'cep': [\n      { type: 'required', message: 'Campo de preenchimento obrigatório.' },\n    ], 'nomeAdministrador': [\n      { type: 'required', message: 'Campo de preenchimento obrigatório.' },\n    ], 'administradorUsuarioId': [\n      { type: 'required', message: 'Campo de preenchimento obrigatório.' },\n    ]\n  };\n  constructor(public buscarCEPService: BuscarCEPService,\n    public igrejaService: IgrejaService,\n    public router: Router,\n    public toastCtrl: ToastController,\n    public loadingControll: LoadingContr,\n    public ngZone: NgZone,\n    public usuarioService: UsuarioService,\n  ) {\n\n    this.formData = new FormGroup({\n      'cep': new FormControl('', Validators.compose([\n        Validators.required\n      ])),\n      'nomeIgreja': new FormControl('', Validators.compose([\n        Validators.required\n      ])), 'logradouro': new FormControl('', Validators.compose([\n        Validators.required\n      ])), 'bairro': new FormControl('', Validators.compose([\n        Validators.required\n      ])), 'uf': new FormControl('', Validators.compose([\n        Validators.required\n      ])), 'cidade': new FormControl('', Validators.compose([\n        Validators.required\n      ])),\n      'emailAdministrador': new FormControl('', Validators.compose([\n        Validators.required\n      ])), 'nomeAdministrador': new FormControl('', Validators.compose([\n        Validators.required\n      ])), 'administradorUsuarioId': new FormControl('', Validators.compose([\n        Validators.required\n      ])),\n\n\n    });\n\n  }\n\n  ngOnInit() {\n\n  }\n\n  buscarEnderecoPorCEP() {\n\n    this.formData.controls['cidade'].setValue(null);\n    this.formData.controls['bairro'].setValue(null);\n    this.formData.controls['uf'].setValue(null);\n    this.formData.controls['logradouro'].setValue(null);\n\n    if (!this.formData.value.cep || this.formData.value.cep.toString().length != \"8\") {\n      HandlerError.handler(\"Favor inserir CEP válido, antes de continuar.\", this.toastCtrl);\n      return false;\n    }\n    this.loadingControll.showLoader();\n\n\n    this.buscarCEPService.buscarCEP(this.formData.value.cep).then(x => {\n\n      if (x && !x.erro) {\n        this.formData.controls['cidade'].setValue(x.localidade);\n        this.formData.controls['bairro'].setValue(x.bairro);\n        this.formData.controls['uf'].setValue(x.uf);\n        this.formData.controls['logradouro'].setValue(x.logradouro);\n\n        this.loadingControll.hideLoader();\n      } else {\n        this.loadingControll.hideLoader()\n        HandlerError.handler(\"Favor inserir CEP válido, antes de continuar.\", this.toastCtrl);\n      }\n\n    }).catch(x => {\n      this.loadingControll.hideLoader();\n      HandlerError.handler(x, this.toastCtrl);\n    });\n\n  }\n\n  salvarIgreja() {\n    if (!this.formData.value.cidade) {\n      HandlerError.handler(\"Favor inserir CEP válido, antes de continuar.\", this.toastCtrl);\n      return false;\n    }\n\n    if (!this.formData.valid) {\n      HandlerError.handler(Constants.Mensagens.CamposObrigatorios, this.toastCtrl)\n      return false;\n    }\n\n    this.loadingControll.showLoader()\n\n    this.igrejaEntity = this.formData.value;\n    this.igrejaEntity.administradores = [{ usuarioId: this.formData.value.administradorUsuarioId }];\n    this.igrejaService.AdicionarNovaIgreja(this.igrejaEntity).then(() => {\n\n      this.usuarioService\n        .AdicionaPerfilAoUsuario(this.formData.value.administradorUsuarioId, Constants.PerfilUsuario.AdministradorIgreja)\n        .then(() => {\n          ToastCustom.SucessoToast(this.toastCtrl);\n          this.loadingControll.hideLoader();\n          this.ngZone.run(() => {\n            this.router.navigate(['home']);\n          });\n        }).catch((error) => {\n          HandlerError.handler(error, this.toastCtrl);\n          this.loadingControll.hideLoader();\n\n        });\n\n    }).catch((error) => {\n      HandlerError.handler(error, this.toastCtrl);\n      this.loadingControll.hideLoader();\n\n    });\n  }\n\n  buscarUsuarioAdministradorIgreja() {\n    this.loadingControll.showLoader();\n\n    this.usuarioService.RecuperaUsuarioPorEmail(this.formData.value.emailAdministrador).then(result => {\n      if (result.length > 0) {\n        this.formData.controls['administradorUsuarioId'].setValue(result[0].data.usuarioId);\n        this.formData.controls['emailAdministrador'].setValue(result[0].data.email);\n        this.formData.controls['nomeAdministrador'].setValue(result[0].data.nome);\n      } else {\n        HandlerError.handler(\"Nenhum usuário encontrado com este e-mail.\", this.toastCtrl);\n      }\n      this.loadingControll.hideLoader();\n\n    }).catch((error) => {\n      HandlerError.handler(error, this.toastCtrl);\n      this.loadingControll.hideLoader();\n\n    });\n  }\n}\n"]}