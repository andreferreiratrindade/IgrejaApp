{"version":3,"sources":["webpack:///src/app/helpers/toastCustom.ts","webpack:///src/app/pages/servico/modal-servicos/modal-servicos-routing.module.ts","webpack:///src/app/pages/servico/modal-servicos/modal-servicos.module.ts","webpack:///src/app/providers/dominioServico/dominio-servico.service.ts","webpack:///src/app/repository/dominioServico/dominio-servico-repository.service.ts"],"names":["ToastCustom","msg","toastCtrl","CustomToast","message","color","duration","create","then","x","present","routes","path","component","ModalServicosPageRoutingModule","imports","forChild","exports","ModalServicosPageModule","declarations","DominioServicoService","dominioServico","ev","recuperaServicoAutoComplete","recuperaDominioServico","recuperaDominioServicoAtivo","servico","nomeServico_insensitive","nomeServico","toLowerCase","add","servicoId","providedIn","DominioServicoRepositoryService","servicoConverter","toFirestore","_collectionName","query","Promise","response","resp","endText","db","collection","orderBy","limit","startAt","endAt","get","result","lst","forEach","doc","push","data","id","err","deletado","where"],"mappings":"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","file":"pages-servico-modal-servicos-modal-servicos-module-es5.js","sourcesContent":["import { ToastController } from '@ionic/angular/providers/toast-controller';\n\nexport  class  ToastCustom{\n\n    public static errorToast(msg:string,  toastCtrl : ToastController){\n     \n      this.CustomToast(toastCtrl, msg,\"danger\",4000);\n    }\n\n    public static SucessoToast(toastCtrl : ToastController){\n\n      this.CustomToast(toastCtrl, \"Operação realizada com sucesso.\",\"success\",4000);\n    }\n\n    public static CustomToast(toastCtrl : ToastController, message:string, color:string, duration:any){\n      toastCtrl.create({\n        message: message,\n        duration: duration,\n        color:color\n      }).then(x=>{\n\n        x.present();\n      });\n    }\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ModalServicosPage } from './modal-servicos.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ModalServicosPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ModalServicosPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ModalServicosPageRoutingModule } from './modal-servicos-routing.module';\n\nimport { ModalServicosPage } from './modal-servicos.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ModalServicosPageRoutingModule\n  ],\n  declarations: [ModalServicosPage]\n})\nexport class ModalServicosPageModule {}\n","import { Injectable } from '@angular/core';\nimport { DominioServicoRepositoryService } from 'src/app/repository/dominioServico/dominio-servico-repository.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DominioServicoService {\n  recuperaServicoAutoComplete(ev: string) {\n     return this.dominioServico.recuperaServicoAutoComplete(ev);\n  }\n\n  constructor(public dominioServico: DominioServicoRepositoryService) { }\n\n  public recuperaDominioServico() : Promise<any>{\n    \n    return this.dominioServico.recuperaDominioServico();\n  }\n\n  public recuperaDominioServicoAtivo() : Promise<any>{\n    \n    return this.dominioServico.recuperaDominioServicoAtivo();\n  }\n\n  public adicionaServico(servico:any) : Promise<any>{\n  \n    servico.nomeServico_insensitive = servico.nomeServico.toLowerCase();\n    return this.dominioServico.add(servico,null);\n  }\n\n  public excluirServico(servicoId:string){\n      return this.dominioServico.delete(servicoId);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BaseRepository } from '../repository-interface/Repository-Base';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DominioServicoRepositoryService extends BaseRepository {\n\n    /**\n     *\n     */\n    constructor() {\n        super();\n        this._collectionName = \"dominioServico\";\n    }\n\n    servicoConverter = {\n\n        toFirestore:function(servico){\n            return {servicoId : servico.servicoId,\n            nomeServico:servico.nomeServico}\n        }\n\n    }\n    recuperaServicoAutoComplete(query: string): Promise<any> {\n\n        return new Promise<any>((response, resp) => {\n            query = query.toLowerCase()\n            const endText = query + '\\uf8ff'; \n            this.db.collection(\"dominioServico\")\n                .orderBy(\"nomeServico_insensitive\")\n                .limit(10)\n                .startAt(query)\n                .endAt(endText)\n         \n                // .where(\"nomeServico\",\">=\",query)\n                // .where(\"nomeServico\",\"<=\",endText)\n                // .startAt(query)\n                // .endAt(endText)\n                .get()\n                .then((result) => {\n                    let lst = [];\n                    result.forEach(function (doc) {\n\n                        lst.push({ nomeServico: doc.data().nomeServico, servicoId: doc.id });\n                    })\n                    response(lst);\n                })\n                .catch((err) => {\n                    resp(err);\n                });\n        });\n    }\n\n\n    recuperaDominioServico(): Promise<any> {\n        return new Promise<any>((response, resp) => {\n            this.db.collection(\"dominioServico\").orderBy(\"nomeServico\").get()\n            .then((result) => {\n\n                let lst = [];\n                result.forEach(function (doc) {\n\n                    lst.push({ nomeServico: doc.data().nomeServico, servicoId: doc.id, deletado:doc.data().deletado });\n                })\n                response(lst);\n            })\n        });\n    }\n\n    recuperaDominioServicoAtivo(): Promise<any> {\n        return new Promise<any>((response, resp) => {\n            this.db.collection(\"dominioServico\")\n            .where(\"deletado\",\"==\",false)\n            .orderBy(\"nomeServico\")\n            .get()\n            .then((result) => {\n\n                let lst = [];\n                result.forEach(function (doc) {\n\n                    lst.push({ nomeServico: doc.data().nomeServico, servicoId: doc.id, deletado:doc.data().deletado });\n                })\n                response(lst);\n            })\n        });\n    }\n}\n"]}