{"version":3,"sources":["webpack:///src/app/pages/prestador/prestadorCadastro/prestador-cadastro-finalizar/prestador-cadastro-finalizar.page.html","webpack:///src/app/helpers/handlerError.ts","webpack:///src/app/helpers/toastCustom.ts","webpack:///src/app/pages/prestador/prestadorCadastro/prestador-cadastro-finalizar/prestador-cadastro-finalizar-routing.module.ts","webpack:///src/app/pages/prestador/prestadorCadastro/prestador-cadastro-finalizar/prestador-cadastro-finalizar.module.ts","webpack:///src/app/pages/prestador/prestadorCadastro/prestador-cadastro-finalizar/prestador-cadastro-finalizar.page.scss","webpack:///src/app/pages/prestador/prestadorCadastro/prestador-cadastro-finalizar/prestador-cadastro-finalizar.page.ts","webpack:///src/app/providers/dominioServico/dominio-servico.service.ts","webpack:///src/app/providers/igreja/igreja.service.ts","webpack:///src/app/repository/dominioServico/dominio-servico-repository.service.ts","webpack:///src/app/repository/igreja/igreja-rep.service.ts"],"names":["HandlerError","err","toastCtrl","data","message","error","console","log","errorToast","ToastCustom","msg","CustomToast","color","duration","create","then","x","present","routes","path","component","PrestadorCadastroFinalizarPageRoutingModule","imports","forChild","exports","PrestadorCadastroFinalizarPageModule","declarations","PrestadorCadastroFinalizarPage","prestadorService","dominioServicoService","loadingContr","ngZone","router","usuarioService","igrejaService","prestador","prestadorUsuario","prestadorServicos","usuario","showLoader","RecuperaInstancia","recuperaUsuario","RecuperaPrestador","usuarioId","result","RecuperaNomeIgreja","igrejaId","nomeIgreja","hideLoader","handler","recuperaServicosPorPrestador","recuperaDominioServico","map","listItem","expanded","breveDescricao","nomeServico","filter","y","servicoId","obj","situacaoPrestador","TipoSituacaoPrestador","PendenteAutorizacao","AdicionaPerfilAoUsuario","PerfilUsuario","Prestador","AtualizaPrestador","run","navigate","url","selector","template","DominioServicoService","dominioServico","ev","recuperaServicoAutoComplete","servico","add","providedIn","IgrejaService","igrejaRepService","RecuperaIgrejaPorAdministrador","cidade","RecuperaIgrejasPorCidade","uf","bairro","RecuperaIgrejasPorEndereco","igrejas","DominioServicoRepositoryService","servicoConverter","toFirestore","_collectionName","query","Promise","response","resp","endText","db","collection","orderBy","limit","where","get","lst","forEach","doc","push","id","IgrejaRepService","resolve","reject","find","elemento","tipoComparacao","comparacao"],"mappings":"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","file":"pages-prestador-prestadorCadastro-prestador-cadastro-finalizar-prestador-cadastro-finalizar-module-es5.js","sourcesContent":["export default \"<ion-content fullscreen>\\n  <ion-header class=\\\"ion-no-border\\\">\\n    <ion-toolbar>\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-menu-button></ion-menu-button>\\n      </ion-buttons>\\n      <ion-title>\\n        Cadastro Prestador\\n      </ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n\\n  <ion-progress-bar color=\\\"success\\\" value=\\\"1\\\" ></ion-progress-bar>\\n\\n\\n  <ion-card class=\\\"ion-no-border\\\">\\n    <ion-card-header>\\n\\n      <ion-card-title>\\n        <h3>Dados Empresa</h3>\\n\\n\\n      </ion-card-title>\\n    </ion-card-header>\\n\\n    <ion-item>\\n      <ion-label class=\\\"ion-text-wrap\\\">\\n        <p>Nome</p>\\n        <h3>{{usuario.nome}}</h3>\\n      </ion-label>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label class=\\\"ion-text-wrap\\\">\\n        <p>Email</p>\\n        <h3>{{usuario.email}}</h3>\\n      </ion-label>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label class=\\\"ion-text-wrap\\\">\\n        <p>Razão Social</p>\\n        <h3>{{prestador.razaoSocial}}</h3>\\n      </ion-label>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label class=\\\"ion-text-wrap\\\">\\n        <p>Telefone</p>\\n        <h3>{{prestador.telefone}}</h3>\\n      </ion-label>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label class=\\\"ion-text-wrap\\\">\\n        <p>Endereço</p>\\n        <h3>{{prestador.logradouro}}, {{prestador.bairro}} - {{prestador.cidade}} / {{prestador.uf}}</h3>\\n      </ion-label>\\n    </ion-item>\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col size=\\\"4\\\">\\n          <ion-button size=\\\"small\\\" (click)=\\\"redirect('dados-empresa')\\\">Editar</ion-button>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </ion-card>\\n\\n\\n  <ion-card class=\\\"ion-no-border\\\">\\n    <ion-card-header>\\n\\n      <ion-card-title>\\n        <h3>Local Atendimento</h3>\\n      </ion-card-title>\\n    </ion-card-header>\\n    <ion-item *ngFor=\\\"let item of prestador.locaisAtendimento; let i = index\\\">\\n      <ion-label class=\\\"ion-text-wrap\\\">\\n        <h2>{{item.cidade}} / {{item.uf}}</h2>\\n      </ion-label>\\n    </ion-item>\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col size=\\\"4\\\">\\n          <ion-button size=\\\"small\\\" (click)=\\\"redirect('prestador-local-atendimento')\\\">Editar</ion-button>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </ion-card>\\n  <ion-card class=\\\"ion-no-border\\\">\\n    <ion-card-header>\\n\\n      <ion-card-title>\\n        <h3>Serviços</h3>\\n      </ion-card-title>\\n    </ion-card-header>\\n\\n    <ion-item *ngFor=\\\"let item of prestadorServicos\\\">\\n      <ion-label class=\\\"ion-text-wrap\\\">\\n        <h2>{{item.nomeServico}}</h2>\\n        <h3>{{item.breveDescricao}}</h3>\\n      </ion-label>\\n    </ion-item>\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col size=\\\"4\\\">\\n          <ion-button size=\\\"small\\\" (click)=\\\"redirect('prestador-cadastro-servico')\\\">Editar</ion-button>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </ion-card>\\n\\n  <ion-card class=\\\"ion-no-border\\\">\\n    <ion-card-header>\\n\\n      <ion-card-title>\\n        <h3>Igreja Vinculo</h3>\\n      </ion-card-title>\\n    </ion-card-header>\\n    <ion-item>\\n      <ion-label class=\\\"ion-text-wrap\\\">\\n        <h3>{{prestador.nomeIgreja}}</h3>\\n        <h3>Membro: {{prestador.staMembro?\\\"Sim\\\":\\\"Não\\\"}}</h3>\\n      </ion-label>\\n    </ion-item>\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col size=\\\"4\\\">\\n          <ion-button size=\\\"small\\\" (click)=\\\"redirect('prestador-cadastro-igreja-vinculo')\\\">Editar</ion-button>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </ion-card>\\n\\n  <div class=\\\"ion-text-end\\\" style=\\\"margin-top: 20px;\\\">\\n    <ion-button color=\\\"medium\\\" type=\\\"button\\\" (click)=\\\"voltar()\\\" style=\\\"margin-right: 20px!important;\\\" size=\\\"4\\\"\\n      clear>\\n      <ion-icon name=\\\"chevron-back-outline\\\"></ion-icon>Voltar\\n    </ion-button>\\n\\n    <ion-button color=\\\"success\\\" type=\\\"button\\\" (click)=\\\"finalizar()\\\" clear>Finalizar <ion-icon name=\\\"checkmark\\\">\\n      </ion-icon>\\n    </ion-button>\\n  </div>\\n</ion-content>\\n\";","import { ToastCustom } from './toastCustom';\nimport { ToastController } from '@ionic/angular/providers/toast-controller';\nexport class HandlerError {\n\n    public static handler(err: any, toastCtrl: ToastController) {\n        var data = err;\n        let message = data.error ? data.error.message : data;\n        \n        console.log(message);\n        ToastCustom.errorToast(message, toastCtrl);\n    }\n}","import { ToastController } from '@ionic/angular/providers/toast-controller';\n\nexport  class  ToastCustom{\n\n    public static errorToast(msg:string,  toastCtrl : ToastController){\n     \n      this.CustomToast(toastCtrl, msg,\"danger\",4000);\n    }\n\n    public static SucessoToast(toastCtrl : ToastController){\n\n      this.CustomToast(toastCtrl, \"Operação realizada com sucesso.\",\"success\",4000);\n    }\n\n    public static CustomToast(toastCtrl : ToastController, message:string, color:string, duration:any){\n      toastCtrl.create({\n        message: message,\n        duration: duration,\n        color:color\n      }).then(x=>{\n\n        x.present();\n      });\n    }\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PrestadorCadastroFinalizarPage } from './prestador-cadastro-finalizar.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PrestadorCadastroFinalizarPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PrestadorCadastroFinalizarPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PrestadorCadastroFinalizarPageRoutingModule } from './prestador-cadastro-finalizar-routing.module';\n\nimport { PrestadorCadastroFinalizarPage } from './prestador-cadastro-finalizar.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    PrestadorCadastroFinalizarPageRoutingModule\n  ],\n  declarations: [PrestadorCadastroFinalizarPage]\n})\nexport class PrestadorCadastroFinalizarPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3ByZXN0YWRvci9wcmVzdGFkb3JDYWRhc3Ryby9wcmVzdGFkb3ItY2FkYXN0cm8tZmluYWxpemFyL3ByZXN0YWRvci1jYWRhc3Ryby1maW5hbGl6YXIucGFnZS5zY3NzIn0= */\";","import { Component, OnInit, NgZone } from '@angular/core';\nimport { Constants } from 'src/app/utils/constants';\nimport { Config } from 'src/app/config';\nimport { ToastCustom } from 'src/app/helpers/toastCustom';\nimport { HandlerError } from 'src/app/helpers/handlerError';\nimport { IgrejaService } from 'src/app/providers/igreja/igreja.service';\nimport { ToastController } from '@ionic/angular';\nimport { UsuarioService } from 'src/app/providers/usuario/usuario.service';\nimport { Router } from '@angular/router';\nimport { LoadingContr } from 'src/app/helpers/loadingContr';\nimport { DominioServicoService } from 'src/app/providers/dominioServico/dominio-servico.service';\nimport { PrestadorService } from 'src/app/providers/prestador/prestador.service';\n\n@Component({\n  selector: 'app-prestador-cadastro-finalizar',\n  templateUrl: './prestador-cadastro-finalizar.page.html',\n  styleUrls: ['./prestador-cadastro-finalizar.page.scss'],\n})\nexport class PrestadorCadastroFinalizarPage implements OnInit {\n\n  prestador: any = {};\n  prestadorUsuario :any= {};\n  prestadorServicos :any[]= [];\n  usuario : any = {};\n  constructor(public prestadorService: PrestadorService,\n    public dominioServicoService: DominioServicoService,\n    public loadingContr: LoadingContr,\n    public ngZone: NgZone,\n    public router: Router,\n    public usuarioService: UsuarioService,\n    public toastCtrl: ToastController,\n    public igrejaService: IgrejaService) { }\n\n  ngOnInit() {\n    this.loadingContr.showLoader();\n\n    this.usuario = Config.RecuperaInstancia().recuperaUsuario();\n\n    this.prestadorService.RecuperaPrestador(Config.RecuperaInstancia().recuperaUsuario().usuarioId)\n      .then((result) => {\n        this.prestador = result;\n        this.igrejaService.RecuperaNomeIgreja([this.prestador.igrejaId]).then(result => {\n          this.prestador.nomeIgreja = result[0].data.nomeIgreja;\n          this.loadingContr.hideLoader();\n        }).catch(err => {\n          HandlerError.handler(err, this.toastCtrl);\n          this.loadingContr.hideLoader();\n        });\n\n      }).catch(err => {\n        HandlerError.handler(err, this.toastCtrl);\n        this.loadingContr.hideLoader();\n      });\n\n\n    this.prestadorService.recuperaServicosPorPrestador(Config.RecuperaInstancia().recuperaUsuario().usuarioId)\n      .then(result => {\n        this.prestadorServicos = result;\n        this.dominioServicoService.recuperaDominioServico().then(x => {\n\n          this.prestadorServicos.map((listItem) => {\n            listItem.expanded = false;\n\n            listItem.breveDescricao = listItem.breveDescricao ?? \"\";\n            listItem.nomeServico = x.filter(y => y.servicoId == listItem.servicoId)[0].nomeServico;\n            return listItem;\n          });\n          this.loadingContr.hideLoader();\n        }).catch(err => {\n          HandlerError.handler(err, this.toastCtrl);\n          this.loadingContr.hideLoader();\n        });\n\n      }).catch(err => {\n        HandlerError.handler(err, this.toastCtrl);\n        this.loadingContr.hideLoader();\n      });\n  }\n\n  finalizar() {\n    this.loadingContr.showLoader();\n    let obj = { situacaoPrestador: Constants.TipoSituacaoPrestador.PendenteAutorizacao };\n\n    this.usuarioService\n      .AdicionaPerfilAoUsuario(Config.RecuperaInstancia().recuperaUsuario().usuarioId, Constants.PerfilUsuario.Prestador)\n      .then(() => {\n\n      }).catch((error) => {\n        HandlerError.handler(error, this.toastCtrl);\n        this.loadingContr.hideLoader();\n\n      });\n\n    this.prestadorService\n      .AtualizaPrestador(Config.RecuperaInstancia().recuperaUsuario().usuarioId, obj).then(() => {\n\n        this.loadingContr.hideLoader();\n        ToastCustom.CustomToast(this.toastCtrl, \"Operação realizadao com sucesso. Sua solicitação foi encaminhada para o administrador da igreja.\", \"success\", 5000);\n\n        this.ngZone.run(() => {\n          this.router.navigate(['home']);\n        });\n      }).catch(err => {\n        HandlerError.handler(err, this.toastCtrl);\n        this.loadingContr.hideLoader();\n      });\n  }\n\n  public voltar(){\n    this.router.navigate(['prestador-cadastro-igreja-vinculo']);\n  }\n  public redirect(url){\n    this.router.navigate([url]);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { DominioServicoRepositoryService } from 'src/app/repository/dominioServico/dominio-servico-repository.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DominioServicoService {\n  recuperaServicoAutoComplete(ev: string) {\n     return this.dominioServico.recuperaServicoAutoComplete(ev);\n  }\n\n  constructor(public dominioServico: DominioServicoRepositoryService) { }\n\n  public recuperaDominioServico() : Promise<any>{\n    \n    return this.dominioServico.recuperaDominioServico();\n  }\n\n  public adicionaServico(servico:any){\n    return this.dominioServico.add(servico,null);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { IgrejaRepService } from 'src/app/repository/igreja/igreja-rep.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IgrejaService {\n\n\n  constructor(public igrejaRepService: IgrejaRepService) { }\n\n\n  RecuperaIgrejaPorAdministrador(usuarioId:any):Promise<any[]>{\n    return  this.igrejaRepService.RecuperaIgrejaPorAdministrador(usuarioId);\n\n  }\n\n  AdicionarNovaIgreja(obj : any) : Promise<any>{\n    return  this.igrejaRepService.add(obj,null);\n  }\n\n  RecuperaIgrejasPorCidade(cidade:string) : Promise<any[]>{\n    return this.igrejaRepService.RecuperaIgrejasPorCidade(cidade);\n  }\n  \n  RecuperaIgrejasPorEndereco(uf:string, cidade:string, bairro:string) : Promise<any[]>{\n    return this.igrejaRepService.RecuperaIgrejasPorEndereco(uf,cidade,bairro);\n  }\n\n  RecuperaNomeIgreja(igrejas: string[]) {\n    return this.igrejaRepService.RecuperaNomeIgreja(igrejas);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BaseRepository } from '../repository-interface/Repository-Base';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DominioServicoRepositoryService extends BaseRepository {\n\n    /**\n     *\n     */\n    constructor() {\n        super();\n        this._collectionName = \"dominioServico\";\n    }\n\n    servicoConverter = {\n\n        toFirestore:function(servico){\n            return {servicoId : servico.servicoId,\n            nomeServico:servico.nomeServico}\n        }\n\n    }\n    recuperaServicoAutoComplete(query: string): Promise<any> {\n\n        return new Promise<any>((response, resp) => {\n            const endText = query + '\\uf8ff'; \n            this.db.collection(\"dominioServico\")\n                .orderBy(\"nomeServico\")\n                .limit(10)\n                .where(\"nomeServico\",\">=\",query)\n                .where(\"nomeServico\",\"<=\",endText)\n                // .startAt(query)\n                // .endAt(endText)\n                .get()\n                .then((result) => {\n\n                    let lst = [];\n                    result.forEach(function (doc) {\n\n                        lst.push({ nomeServico: doc.data().nomeServico, servicoId: doc.id });\n                    })\n                    response(lst);\n                })\n                .catch((err) => {\n                    resp(err);\n                });\n        });\n    }\n\n\n    recuperaDominioServico(): Promise<any> {\n        return new Promise<any>((response, resp) => {\n            this.db.collection(\"dominioServico\").get()\n            .then((result) => {\n\n                let lst = [];\n                result.forEach(function (doc) {\n\n                    lst.push({ nomeServico: doc.data().nomeServico, servicoId: doc.id });\n                })\n                response(lst);\n            })\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BaseRepository } from '../repository-interface/Repository-Base';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IgrejaRepService extends BaseRepository {\n\n  constructor() {\n    super();\n\n    this._collectionName = \"igreja\";\n  }\n\n  RecuperaIgrejasPorEndereco(uf: string, cidade: string, bairro: string): Promise<any[]> {\n    return new Promise<any>((resolve, reject) => {\n      let query = this.db.collection('igreja')\n        .where(\"uf\", \"==\", uf);\n\n      if (cidade) {\n        query = query.where(\"cidade\", \"==\", cidade)\n      }\n\n      if (bairro) {\n        query = query.where(\"bairro\", \"==\", bairro)\n      }\n\n      query.get()\n        .then((result) => {\n\n          let lst = [];\n          result.forEach(function (doc) {\n\n            lst.push(doc.data());\n\n          });\n          resolve(lst)\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n  }\n\n\n\n  RecuperaIgrejaPorAdministrador(usuarioId): Promise<any[]> {\n    return new Promise<any>((resolve, reject) => {\n      this.db.collection('igreja')\n        .where(\"administradores\", \"array-contains\", {usuarioId:usuarioId})\n        .get()\n        .then((result) => {\n          let lst = [];\n          result.forEach(function (doc) {\n\n            lst.push(doc.data());\n\n          });\n          resolve(lst)\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n  }\n\n  RecuperaIgrejasPorCidade(cidade: string): Promise<any[]> {\n\n    return this.find({ elemento: \"cidade\", tipoComparacao: \"==\", comparacao: cidade });\n  }\n\n  RecuperaNomeIgreja(igrejas: string[]) {\n\n    // return this.db.collection(\"igreja\").where(firebase.firestore.FieldPath.documentId(),\"array-contains\",igrejas).get()\n    return this.find({ elemento: \"id\", tipoComparacao: \"in\", comparacao: igrejas });\n  }\n}\n"]}