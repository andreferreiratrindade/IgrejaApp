{"version":3,"sources":["webpack:///src/app/pages/igreja/modal-igreja/modal-igreja-routing.module.ts","webpack:///src/app/pages/igreja/modal-igreja/modal-igreja.module.ts","webpack:///src/app/providers/igreja/igreja.service.ts","webpack:///src/app/repository/igreja/igreja-rep.service.ts"],"names":["routes","path","component","ModalIgrejaPageRoutingModule","imports","forChild","exports","ModalIgrejaPageModule","declarations","IgrejaService","igrejaRepService","RecuperaTodasAsIgrejas","igrejaId","RecuperaIgrejaPorIgrejaId","usuarioId","RecuperaIgrejaPorAdministrador","obj","AdicionaNovaIgreja","cidade","RecuperaIgrejasPorCidade","uf","bairro","RecuperaIgrejasPorEndereco","igrejas","RecuperaNomeIgreja","providedIn","IgrejaRepService","_collectionName","Promise","resolve","reject","query","db","collection","where","get","then","result","lst","forEach","doc","push","data","err","item","id","idTemp","set","merge","error","find","elemento","tipoComparacao","comparacao"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,QAAMA,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AAEEC,eAAS,EAAE;AAFb,KADqB,CAAvB;;AAWA,QAAaC,4BAA4B;AAAA;AAAA,KAAzC;;AAAaA,gCAA4B,6DAJxC,+DAAS;AACRC,aAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,aAAO,EAAE,CAAC,4DAAD;AAFD,KAAT,CAIwC,GAA5BH,4BAA4B,CAA5B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACGb,QAAaI,qBAAqB;AAAA;AAAA,KAAlC;;AAAaA,yBAAqB,6DATjC,+DAAS;AACRH,aAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,yFAJO,CADD;AAORI,kBAAY,EAAE,CAAC,kEAAD;AAPN,KAAT,CASiC,GAArBD,qBAAqB,CAArB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbb,QAAaE,aAAa;AAUxB,6BAAmBC,gBAAnB,EAAuD;AAAA;;AAApC,aAAAA,gBAAA,GAAAA,gBAAA;AAAuC;;AAVlC;AAAA;AAAA,iDACC;AACvB,iBAAO,KAAKA,gBAAL,CAAsBC,sBAAtB,EAAP;AACD;AAHuB;AAAA;AAAA,kDAKEC,QALF,EAKmB;AACzC,iBAAO,KAAKF,gBAAL,CAAsBG,yBAAtB,CAAgDD,QAAhD,CAAP;AACD;AAPuB;AAAA;AAAA,uDAaOE,SAbP,EAaoB;AAC1C,iBAAQ,KAAKJ,gBAAL,CAAsBK,8BAAtB,CAAqDD,SAArD,CAAR;AAED;AAhBuB;AAAA;AAAA,4CAkBJE,GAlBI,EAkBO;AAC7B,iBAAQ,KAAKN,gBAAL,CAAsBO,kBAAtB,CAAyCD,GAAzC,EAA8CA,GAAG,CAACJ,QAAlD,CAAR;AACD;AApBuB;AAAA;AAAA,iDAsBCM,MAtBD,EAsBgB;AACtC,iBAAO,KAAKR,gBAAL,CAAsBS,wBAAtB,CAA+CD,MAA/C,CAAP;AACD;AAxBuB;AAAA;AAAA,mDA0BGE,EA1BH,EA0BcF,MA1Bd,EA0B6BG,MA1B7B,EA0B4C;AAClE,iBAAO,KAAKX,gBAAL,CAAsBY,0BAAtB,CAAiDF,EAAjD,EAAoDF,MAApD,EAA2DG,MAA3D,CAAP;AACD;AA5BuB;AAAA;AAAA,2CA8BLE,OA9BK,EA8Bc;AACpC,iBAAO,KAAKb,gBAAL,CAAsBc,kBAAtB,CAAyCD,OAAzC,CAAP;AACD;AAhCuB;;AAAA;AAAA,OAA1B;;;;cAUuC;;;;AAV1Bd,iBAAa,6DAHzB,iEAAW;AACVgB,gBAAU,EAAE;AADF,KAAX,CAGyB,GAAbhB,aAAa,CAAb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAb,QAAaiB,gBAAgB;AAAA;;AAAA;;AAE3B,kCAAc;AAAA;;AAAA;;AACZ;AAEA,cAAKC,eAAL,GAAuB,QAAvB;AAHY;AAIb;;AAN0B;AAAA;AAAA,mDAQAP,EARA,EAQYF,MARZ,EAQ4BG,MAR5B,EAQ0C;AAAA;;AACnE,iBAAO,IAAIO,OAAJ,CAAiB,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC3C,gBAAIC,KAAK,GAAG,MAAI,CAACC,EAAL,CAAQC,UAAR,CAAmB,QAAnB,EACTC,KADS,CACH,IADG,EACG,IADH,EACSd,EADT,CAAZ;;AAGA,gBAAIF,MAAJ,EAAY;AACVa,mBAAK,GAAGA,KAAK,CAACG,KAAN,CAAY,QAAZ,EAAsB,IAAtB,EAA4BhB,MAA5B,CAAR;AACD;;AAED,gBAAIG,MAAJ,EAAY;AACVU,mBAAK,GAAGA,KAAK,CAACG,KAAN,CAAY,QAAZ,EAAsB,IAAtB,EAA4Bb,MAA5B,CAAR;AACD;;AAEDU,iBAAK,CAACI,GAAN,GACGC,IADH,CACQ,UAACC,MAAD,EAAY;AAEhB,kBAAIC,GAAG,GAAG,EAAV;AACAD,oBAAM,CAACE,OAAP,CAAe,UAAUC,GAAV,EAAe;AAE5BF,mBAAG,CAACG,IAAJ,CAASD,GAAG,CAACE,IAAJ,EAAT;AAED,eAJD;AAKAb,qBAAO,CAACS,GAAD,CAAP;AACD,aAVH,WAWS,UAACK,GAAD,EAAS;AACdb,oBAAM,CAACa,GAAD,CAAN;AACD,aAbH;AAcD,WA1BM,CAAP;AA4BD;AArC0B;AAAA;AAAA,2CAuCRC,IAvCQ,EAuCGC,EAvCH,EAuCa;AAAA;;AAExC,cAAIC,MAAM,GAAGD,EAAE,GAAGA,EAAH,GAAQ,KAAKb,EAAL,CAAQC,UAAR,CAAmB,KAAKN,eAAxB,EAAyCa,GAAzC,GAA+CK,EAAtE;AACED,cAAI,CAACC,EAAL,GAAUC,MAAV;AACAF,cAAI,CAAChC,QAAL,GAAgBkC,MAAhB;AACF,iBAAO,IAAIlB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACvC,kBAAI,CAACE,EAAL,CAAQC,UAAR,CAAmB,MAAI,CAACN,eAAxB,EACEa,GADF,CACMM,MADN,EAEEC,GAFF,CAEM,MAAD,OAAC,CAAD,EAAC,EAAKH,IAAL,CAFN,EAEmB;AAACI,mBAAK,EAAE;AAAR,aAFnB,EAGEZ,IAHF,CAGO,UAACpB,GAAD,EAAc;AACnBa,qBAAO,CAACb,GAAD,CAAP;AACA,aALF,WAMQ,UAACiC,KAAD,EAAgB;AACtBnB,oBAAM,CAACmB,KAAD,CAAN;AACA,aARF;AASA,WAVM,CAAP;AAWA;AAvD2B;AAAA;AAAA,uDA0DInC,SA1DJ,EA0Da;AAAA;;AACtC,iBAAO,IAAIc,OAAJ,CAAiB,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC3C,kBAAI,CAACE,EAAL,CAAQC,UAAR,CAAmB,QAAnB,EACGC,KADH,CACS,iBADT,EAC4B,gBAD5B,EAC8CpB,SAD9C,EAEGqB,GAFH,GAGGC,IAHH,CAGQ,UAACC,MAAD,EAAY;AAChB,kBAAIC,GAAG,GAAG,EAAV;AACAD,oBAAM,CAACE,OAAP,CAAe,UAAUC,GAAV,EAAe;AAE5BF,mBAAG,CAACG,IAAJ,CAASD,GAAG,CAACE,IAAJ,EAAT;AAED,eAJD;AAKAb,qBAAO,CAACS,GAAD,CAAP;AACD,aAXH,WAYS,UAACK,GAAD,EAAS;AACdb,oBAAM,CAACa,GAAD,CAAN;AACD,aAdH;AAeD,WAhBM,CAAP;AAkBD;AA7E0B;AAAA;AAAA,iDA+EFzB,MA/EE,EA+EY;AAErC,iBAAO,KAAKgC,IAAL,CAAU;AAAEC,oBAAQ,EAAE,QAAZ;AAAsBC,0BAAc,EAAE,IAAtC;AAA4CC,sBAAU,EAAEnC;AAAxD,WAAV,CAAP;AACD;AAlF0B;AAAA;AAAA,2CAoFRK,OApFQ,EAoFS;AAElC;AACA,iBAAO,KAAK2B,IAAL,CAAU;AAAEC,oBAAQ,EAAE,IAAZ;AAAkBC,0BAAc,EAAE,IAAlC;AAAwCC,sBAAU,EAAE9B;AAApD,WAAV,CAAP;AACD;AAxF0B;AAAA;AAAA,iDA0FL;AAAA;;AACpB,iBAAO,IAAIK,OAAJ,CAAiB,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC3C,kBAAI,CAACE,EAAL,CAAQC,UAAR,CAAmB,MAAI,CAACN,eAAxB,EACGQ,GADH,GAEGC,IAFH,CAEQ,UAACC,MAAD,EAAY;AAChB,kBAAIC,GAAG,GAAG,EAAV;AACAD,oBAAM,CAACE,OAAP,CAAe,UAAUC,GAAV,EAAe;AAC5BF,mBAAG,CAACG,IAAJ,CAASD,GAAG,CAACE,IAAJ,EAAT;AACD,eAFD;AAGAb,qBAAO,CAACS,GAAD,CAAP;AACD,aARH,WASS,UAACK,GAAD,EAAS;AACdb,oBAAM,CAACa,GAAD,CAAN;AACD,aAXH;AAYD,WAbM,CAAP;AAcD;AAzG0B;AAAA;AAAA,kDA2GD/B,QA3GC,EA2GgB;AAAA;;AACzC,iBAAO,IAAIgB,OAAJ,CAAiB,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC3C,kBAAI,CAACE,EAAL,CAAQC,UAAR,CAAmB,MAAI,CAACN,eAAxB,EAAyCa,GAAzC,CAA6C5B,QAA7C,EACGuB,GADH,GAEGC,IAFH,CAEQ,UAACC,MAAD,EAAY;AAEhBR,qBAAO,CAACQ,MAAM,CAACK,IAAP,EAAD,CAAP;AACD,aALH,WAMS,UAACC,GAAD,EAAS;AACdb,oBAAM,CAACa,GAAD,CAAN;AACD,aARH;AASD,WAVM,CAAP;AAWD;AAvH0B;;AAAA;AAAA,MAAS,oFAAT,CAA7B;;AAAajB,oBAAgB,6DAH5B,iEAAW;AACVD,gBAAU,EAAE;AADF,KAAX,CAG4B,GAAhBC,gBAAgB,CAAhB","file":"pages-igreja-modal-igreja-modal-igreja-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ModalIgrejaPage } from './modal-igreja.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ModalIgrejaPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ModalIgrejaPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ModalIgrejaPageRoutingModule } from './modal-igreja-routing.module';\n\nimport { ModalIgrejaPage } from './modal-igreja.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ModalIgrejaPageRoutingModule\n  ],\n  declarations: [ModalIgrejaPage]\n})\nexport class ModalIgrejaPageModule {}\n","import { Injectable } from '@angular/core';\nimport { IgrejaRepService } from 'src/app/repository/igreja/igreja-rep.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IgrejaService {\n  RecuperaTodasAsIgrejas() : Promise<any[]>{\n    return this.igrejaRepService.RecuperaTodasAsIgrejas();\n  }\n\n  RecuperaIgrejaPorIgrejaId(igrejaId : string): Promise<any>{\n    return this.igrejaRepService.RecuperaIgrejaPorIgrejaId(igrejaId);\n  }\n\n\n  constructor(public igrejaRepService: IgrejaRepService) { }\n\n\n  RecuperaIgrejaPorAdministrador(usuarioId:any):Promise<any[]>{\n    return  this.igrejaRepService.RecuperaIgrejaPorAdministrador(usuarioId);\n\n  }\n\n  AdicionarNovaIgreja(obj : any) : Promise<any>{\n    return  this.igrejaRepService.AdicionaNovaIgreja(obj, obj.igrejaId);\n  }\n\n  RecuperaIgrejasPorCidade(cidade:string) : Promise<any[]>{\n    return this.igrejaRepService.RecuperaIgrejasPorCidade(cidade);\n  }\n  \n  RecuperaIgrejasPorEndereco(uf:string, cidade:string, bairro:string) : Promise<any[]>{\n    return this.igrejaRepService.RecuperaIgrejasPorEndereco(uf,cidade,bairro);\n  }\n\n  RecuperaNomeIgreja(igrejas: string[]) {\n    return this.igrejaRepService.RecuperaNomeIgreja(igrejas);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BaseRepository } from '../repository-interface/Repository-Base';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IgrejaRepService extends BaseRepository {\n\n  constructor() {\n    super();\n\n    this._collectionName = \"igreja\";\n  }\n\n  RecuperaIgrejasPorEndereco(uf: string, cidade: string, bairro: string): Promise<any[]> {\n    return new Promise<any>((resolve, reject) => {\n      let query = this.db.collection('igreja')\n        .where(\"uf\", \"==\", uf);\n\n      if (cidade) {\n        query = query.where(\"cidade\", \"==\", cidade)\n      }\n\n      if (bairro) {\n        query = query.where(\"bairro\", \"==\", bairro)\n      }\n\n      query.get()\n        .then((result) => {\n\n          let lst = [];\n          result.forEach(function (doc) {\n\n            lst.push(doc.data());\n\n          });\n          resolve(lst)\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n  }\n\n  AdicionaNovaIgreja(item: any, id: string): Promise<any> {\n\n\t\tlet idTemp = id ? id : this.db.collection(this._collectionName).doc().id;\n    item.id = idTemp;\n    item.igrejaId = idTemp;\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.db.collection(this._collectionName)\n\t\t\t\t.doc(idTemp)\n\t\t\t\t.set({ ...item }, {merge: true})\n\t\t\t\t.then((obj: any) => {\n\t\t\t\t\tresolve(obj);\n\t\t\t\t})\n\t\t\t\t.catch((error: any) => {\n\t\t\t\t\treject(error);\n\t\t\t\t});\n\t\t});\n\t}\n\n\n  RecuperaIgrejaPorAdministrador(usuarioId): Promise<any[]> {\n    return new Promise<any>((resolve, reject) => {\n      this.db.collection('igreja')\n        .where(\"administradores\", \"array-contains\", usuarioId)\n        .get()\n        .then((result) => {\n          let lst = [];\n          result.forEach(function (doc) {\n\n            lst.push(doc.data());\n\n          });\n          resolve(lst)\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n  }\n\n  RecuperaIgrejasPorCidade(cidade: string): Promise<any[]> {\n\n    return this.find({ elemento: \"cidade\", tipoComparacao: \"==\", comparacao: cidade });\n  }\n\n  RecuperaNomeIgreja(igrejas: string[]): Promise<any[]> {\n\n    // return this.db.collection(\"igreja\").where(firebase.firestore.FieldPath.documentId(),\"array-contains\",igrejas).get()\n    return this.find({ elemento: \"id\", tipoComparacao: \"in\", comparacao: igrejas });\n  }\n\n  RecuperaTodasAsIgrejas(): Promise<any[]> {\n    return new Promise<any>((resolve, reject) => {\n      this.db.collection(this._collectionName)\n        .get()\n        .then((result) => {\n          let lst = [];\n          result.forEach(function (doc) {\n            lst.push(doc.data());\n          });\n          resolve(lst)\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n\n  RecuperaIgrejaPorIgrejaId(igrejaId : string): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      this.db.collection(this._collectionName).doc(igrejaId)\n        .get()\n        .then((result) => {\n\n          resolve(result.data());\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n}\n"]}