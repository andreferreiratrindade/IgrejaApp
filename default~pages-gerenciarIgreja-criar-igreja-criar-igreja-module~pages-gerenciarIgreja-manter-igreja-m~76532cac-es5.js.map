{"version":3,"sources":["webpack:///src/app/pages/gerenciarIgreja/criar-igreja/criar-igreja.page.html","webpack:///src/app/helpers/handlerError.ts","webpack:///src/app/helpers/toastCustom.ts","webpack:///src/app/pages/gerenciarIgreja/criar-igreja/criar-igreja.page.scss","webpack:///src/app/pages/gerenciarIgreja/criar-igreja/criar-igreja.page.ts","webpack:///src/app/providers/igreja/igreja.service.ts","webpack:///src/app/repository/igreja/igreja-rep.service.ts"],"names":["HandlerError","err","toastCtrl","data","message","error","errorToast","ToastCustom","msg","CustomToast","color","duration","create","then","x","present","CriarIgrejaPage","buscarCEPService","igrejaService","router","loadingControll","ngZone","usuarioService","modalController","navParams","igrejaEntity","validation_messages","type","formData","compose","required","igrejaId","RecuperaIgrejaPorIgrejaId","result","controls","setValue","administradorUsuarioId","bairro","cep","cidade","emailAdministrador","logradouro","uf","nomeAdministrador","nomeIgreja","handler","hideLoader","value","toString","length","showLoader","buscarCEP","erro","localidade","valid","Mensagens","CamposObrigatorios","administradores","AdicionarNovaIgreja","AdicionaPerfilAoUsuario","PerfilUsuario","AdministradorIgreja","SucessoToast","closeModal","RecuperaUsuarioPorEmail","usuarioId","email","nome","dismiss","selector","template","IgrejaService","igrejaRepService","RecuperaTodasAsIgrejas","RecuperaIgrejaPorAdministrador","obj","AdicionaNovaIgreja","RecuperaIgrejasPorCidade","RecuperaIgrejasPorEndereco","igrejas","RecuperaNomeIgreja","providedIn","IgrejaRepService","_collectionName","Promise","resolve","reject","query","db","collection","where","get","lst","forEach","doc","push","item","id","idTemp","set","merge","find","elemento","tipoComparacao","comparacao"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAEaA,Y;;;;;;;gCAEaC,G,EAAUC,S,EAA4B;AACxD,cAAIC,IAAI,GAAGF,GAAX;AACA,cAAIG,OAAO,GAAGD,IAAI,CAACE,KAAL,GAAaF,IAAI,CAACE,KAAL,CAAWD,OAAxB,GAAkCD,IAAhD;;AAEA,mEAAYG,UAAZ,CAAuBF,OAAvB,EAAgCF,SAAhC;AACH;;;;;;;;;;;;;;;;;;;;;ACPL;AAAA;;;AAAA;AAAA;AAAA;;QAAeK,W;;;;;;;mCAEcC,G,EAAaN,S,EAA2B;AAE/D,eAAKO,WAAL,CAAiBP,SAAjB,EAA4BM,GAA5B,EAAgC,QAAhC,EAAyC,IAAzC;AACD;;;qCAE0BN,S,EAA2B;AAEpD,eAAKO,WAAL,CAAiBP,SAAjB,EAA4B,iCAA5B,EAA8D,SAA9D,EAAwE,IAAxE;AACD;;;oCAEyBA,S,EAA6BE,O,EAAgBM,K,EAAcC,Q,EAAY;AAC/FT,mBAAS,CAACU,MAAV,CAAiB;AACfR,mBAAO,EAAEA,OADM;AAEfO,oBAAQ,EAAEA,QAFK;AAGfD,iBAAK,EAACA;AAHS,WAAjB,EAIGG,IAJH,CAIQ,UAAAC,CAAC,EAAE;AAETA,aAAC,CAACC,OAAF;AACD,WAPD;AAQD;;;;;;;;;;;;;;;;;;;;;ACvBL;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACmBf,QAAaC,eAAe;AAmB1B,+BAAmBC,gBAAnB,EACSC,aADT,EAESC,MAFT,EAGSjB,SAHT,EAISkB,eAJT,EAKSC,MALT,EAMSC,cANT,EAOSC,eAPT,EAQUC,SARV,EAQ8B;AAAA;;AARX,aAAAP,gBAAA,GAAAA,gBAAA;AACV,aAAAC,aAAA,GAAAA,aAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AACA,aAAAjB,SAAA,GAAAA,SAAA;AACA,aAAAkB,eAAA,GAAAA,eAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AACA,aAAAC,cAAA,GAAAA,cAAA;AACA,aAAAC,eAAA,GAAAA,eAAA;AACC,aAAAC,SAAA,GAAAA,SAAA;AAzBF,aAAAC,YAAA,GAAoB,EAApB;AAKR,aAAAC,mBAAA,GAAsB;AACpB,wBAAc,CACZ;AAAEC,gBAAI,EAAE,UAAR;AAAoBvB,mBAAO,EAAE;AAA7B,WADY,CADM;AAIpB,iBAAO,CACL;AAAEuB,gBAAI,EAAE,UAAR;AAAoBvB,mBAAO,EAAE;AAA7B,WADK,CAJa;AAMjB,+BAAqB,CACtB;AAAEuB,gBAAI,EAAE,UAAR;AAAoBvB,mBAAO,EAAE;AAA7B,WADsB,CANJ;AAQjB,oCAA0B,CAC3B;AAAEuB,gBAAI,EAAE,UAAR;AAAoBvB,mBAAO,EAAE;AAA7B,WAD2B;AART,SAAtB;AAwBE,aAAKwB,QAAL,GAAgB,IAAI,wDAAJ,CAAc;AAC5B,iBAAO,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWC,OAAX,CAAmB,CAC5C,0DAAWC,QADiC,CAAnB,CAApB,CADqB;AAI5B,wBAAc,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWD,OAAX,CAAmB,CACnD,0DAAWC,QADwC,CAAnB,CAApB,CAJc;AAMvB,wBAAc,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWD,OAAX,CAAmB,CACxD,0DAAWC,QAD6C,CAAnB,CAApB,CANS;AAQvB,oBAAU,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWD,OAAX,CAAmB,CACpD,0DAAWC,QADyC,CAAnB,CAApB,CARa;AAUvB,gBAAM,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWD,OAAX,CAAmB,CAChD,0DAAWC,QADqC,CAAnB,CAApB,CAViB;AAYvB,oBAAU,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWD,OAAX,CAAmB,CACpD,0DAAWC,QADyC,CAAnB,CAApB,CAZa;AAe5B,gCAAsB,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWD,OAAX,CAAmB,CAC3D,0DAAWC,QADgD,CAAnB,CAApB,CAfM;AAiBvB,+BAAqB,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWD,OAAX,CAAmB,CAC/D,0DAAWC,QADoD,CAAnB,CAApB,CAjBE;AAmBvB,oCAA0B,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWD,OAAX,CAAmB,CACpE,0DAAWC,QADyD,CAAnB,CAApB;AAnBH,SAAd,CAAhB;AAuBC,aAAKC,QAAL,GAAgB,KAAKP,SAAL,CAAerB,IAAf,CAAoB4B,QAApC;AACF;;AAvDyB;AAAA;AAAA,mCAyDf;AAAA;;AAEP,cAAG,KAAKA,QAAR,EAAiB;AACf,iBAAKb,aAAL,CAAmBc,yBAAnB,CAA6C,KAAKD,QAAlD,EAA4DlB,IAA5D,CAAiE,UAACoB,MAAD,EAAW;AAC1E,mBAAI,CAACL,QAAL,CAAcM,QAAd,CAAuB,wBAAvB,EAAiDC,QAAjD,CAA0DF,MAAM,CAACG,sBAAjE;;AACA,mBAAI,CAACR,QAAL,CAAcM,QAAd,CAAuB,QAAvB,EAAiCC,QAAjC,CAA0CF,MAAM,CAACI,MAAjD;;AACA,mBAAI,CAACT,QAAL,CAAcM,QAAd,CAAuB,KAAvB,EAA8BC,QAA9B,CAAuCF,MAAM,CAACK,GAA9C;;AACA,mBAAI,CAACV,QAAL,CAAcM,QAAd,CAAuB,QAAvB,EAAiCC,QAAjC,CAA0CF,MAAM,CAACM,MAAjD;;AACA,mBAAI,CAACX,QAAL,CAAcM,QAAd,CAAuB,oBAAvB,EAA6CC,QAA7C,CAAsDF,MAAM,CAACO,kBAA7D;;AACA,mBAAI,CAACZ,QAAL,CAAcM,QAAd,CAAuB,YAAvB,EAAqCC,QAArC,CAA8CF,MAAM,CAACQ,UAArD;;AACA,mBAAI,CAACb,QAAL,CAAcM,QAAd,CAAuB,IAAvB,EAA6BC,QAA7B,CAAsCF,MAAM,CAACS,EAA7C;;AACA,mBAAI,CAACd,QAAL,CAAcM,QAAd,CAAuB,mBAAvB,EAA4CC,QAA5C,CAAqDF,MAAM,CAACU,iBAA5D;;AACA,mBAAI,CAACf,QAAL,CAAcM,QAAd,CAAuB,YAAvB,EAAqCC,QAArC,CAA8CF,MAAM,CAACW,UAArD;AACD,aAVD,WAUS,UAACvC,KAAD,EAAW;AAClB,wFAAawC,OAAb,CAAqBxC,KAArB,EAA4B,KAAI,CAACH,SAAjC;;AACA,mBAAI,CAACkB,eAAL,CAAqB0B,UAArB;AACD,aAbD;AAcD;AACJ;AA3EyB;AAAA;AAAA,+CA6EH;AAAA;;AACrB,eAAKlB,QAAL,CAAcM,QAAd,CAAuB,QAAvB,EAAiCC,QAAjC,CAA0C,IAA1C;AACA,eAAKP,QAAL,CAAcM,QAAd,CAAuB,QAAvB,EAAiCC,QAAjC,CAA0C,IAA1C;AACA,eAAKP,QAAL,CAAcM,QAAd,CAAuB,IAAvB,EAA6BC,QAA7B,CAAsC,IAAtC;AACA,eAAKP,QAAL,CAAcM,QAAd,CAAuB,YAAvB,EAAqCC,QAArC,CAA8C,IAA9C;;AAEA,cAAI,CAAC,KAAKP,QAAL,CAAcmB,KAAd,CAAoBT,GAArB,IAA4B,KAAKV,QAAL,CAAcmB,KAAd,CAAoBT,GAApB,CAAwBU,QAAxB,GAAmCC,MAAnC,IAA6C,GAA7E,EAAkF;AAChF,sFAAaJ,OAAb,CAAqB,+CAArB,EAAsE,KAAK3C,SAA3E;AACA,mBAAO,KAAP;AACD;;AACD,eAAKkB,eAAL,CAAqB8B,UAArB;AAGA,eAAKjC,gBAAL,CAAsBkC,SAAtB,CAAgC,KAAKvB,QAAL,CAAcmB,KAAd,CAAoBT,GAApD,EAAyDzB,IAAzD,CAA8D,UAAAC,CAAC,EAAI;AAEjE,gBAAIA,CAAC,IAAI,CAACA,CAAC,CAACsC,IAAZ,EAAkB;AAChB,oBAAI,CAACxB,QAAL,CAAcM,QAAd,CAAuB,QAAvB,EAAiCC,QAAjC,CAA0CrB,CAAC,CAACuC,UAA5C;;AACA,oBAAI,CAACzB,QAAL,CAAcM,QAAd,CAAuB,QAAvB,EAAiCC,QAAjC,CAA0CrB,CAAC,CAACuB,MAA5C;;AACA,oBAAI,CAACT,QAAL,CAAcM,QAAd,CAAuB,IAAvB,EAA6BC,QAA7B,CAAsCrB,CAAC,CAAC4B,EAAxC;;AACA,oBAAI,CAACd,QAAL,CAAcM,QAAd,CAAuB,YAAvB,EAAqCC,QAArC,CAA8CrB,CAAC,CAAC2B,UAAhD;;AAEA,oBAAI,CAACrB,eAAL,CAAqB0B,UAArB;AACD,aAPD,MAOO;AACL,oBAAI,CAAC1B,eAAL,CAAqB0B,UAArB;;AACA,wFAAaD,OAAb,CAAqB,+CAArB,EAAsE,MAAI,CAAC3C,SAA3E;AACD;AAEF,WAdD,WAcS,UAAAY,CAAC,EAAI;AACZ,kBAAI,CAACM,eAAL,CAAqB0B,UAArB;;AACA,sFAAaD,OAAb,CAAqB/B,CAArB,EAAwB,MAAI,CAACZ,SAA7B;AACD,WAjBD;AAmBD;AA7GyB;AAAA;AAAA,uCA+GX;AAAA;;AACb,cAAI,CAAC,KAAK0B,QAAL,CAAcmB,KAAd,CAAoBR,MAAzB,EAAiC;AAC/B,sFAAaM,OAAb,CAAqB,+CAArB,EAAsE,KAAK3C,SAA3E;AACA,mBAAO,KAAP;AACD;;AAED,cAAI,CAAC,KAAK0B,QAAL,CAAc0B,KAAnB,EAA0B;AACxB,sFAAaT,OAAb,CAAqB,mEAAUU,SAAV,CAAoBC,kBAAzC,EAA6D,KAAKtD,SAAlE;AACA,mBAAO,KAAP;AACD;;AAED,eAAKkB,eAAL,CAAqB8B,UAArB;AAEA,eAAKzB,YAAL,GAAoB,KAAKG,QAAL,CAAcmB,KAAlC;AACA,eAAKtB,YAAL,CAAkBgC,eAAlB,GAAoC,CAAC,KAAK7B,QAAL,CAAcmB,KAAd,CAAoBX,sBAArB,CAApC;AACA,eAAKlB,aAAL,CAAmBwC,mBAAnB,CAAuC,KAAKjC,YAA5C,EAA0DZ,IAA1D,CAA+D,YAAM;AAEnE,kBAAI,CAACS,cAAL,CACGqC,uBADH,CAC2B,MAAI,CAAC/B,QAAL,CAAcmB,KAAd,CAAoBX,sBAD/C,EACuE,mEAAUwB,aAAV,CAAwBC,mBAD/F,EAEGhD,IAFH,CAEQ,YAAM;AACV,uFAAYiD,YAAZ,CAAyB,MAAI,CAAC5D,SAA9B;;AACA,oBAAI,CAACkB,eAAL,CAAqB0B,UAArB;;AACA,oBAAI,CAACiB,UAAL;AAED,aAPH,WAOW,UAAC1D,KAAD,EAAW;AAClB,wFAAawC,OAAb,CAAqBxC,KAArB,EAA4B,MAAI,CAACH,SAAjC;;AACA,oBAAI,CAACkB,eAAL,CAAqB0B,UAArB;AAED,aAXH;AAaD,WAfD,WAeS,UAACzC,KAAD,EAAW;AAClB,sFAAawC,OAAb,CAAqBxC,KAArB,EAA4B,MAAI,CAACH,SAAjC;;AACA,kBAAI,CAACkB,eAAL,CAAqB0B,UAArB;AAED,WAnBD;AAoBD;AAlJyB;AAAA;AAAA,2DAoJS;AAAA;;AACjC,eAAK1B,eAAL,CAAqB8B,UAArB;AAEA,eAAK5B,cAAL,CAAoB0C,uBAApB,CAA4C,KAAKpC,QAAL,CAAcmB,KAAd,CAAoBP,kBAAhE,EAAoF3B,IAApF,CAAyF,UAAAoB,MAAM,EAAI;AACjG,gBAAIA,MAAM,CAACgB,MAAP,GAAgB,CAApB,EAAuB;AACrB,oBAAI,CAACrB,QAAL,CAAcM,QAAd,CAAuB,wBAAvB,EAAiDC,QAAjD,CAA0DF,MAAM,CAAC,CAAD,CAAN,CAAU9B,IAAV,CAAe8D,SAAzE;;AACA,oBAAI,CAACrC,QAAL,CAAcM,QAAd,CAAuB,oBAAvB,EAA6CC,QAA7C,CAAsDF,MAAM,CAAC,CAAD,CAAN,CAAU9B,IAAV,CAAe+D,KAArE;;AACA,oBAAI,CAACtC,QAAL,CAAcM,QAAd,CAAuB,mBAAvB,EAA4CC,QAA5C,CAAqDF,MAAM,CAAC,CAAD,CAAN,CAAU9B,IAAV,CAAegE,IAApE;AACD,aAJD,MAIO;AACL,wFAAatB,OAAb,CAAqB,4CAArB,EAAmE,MAAI,CAAC3C,SAAxE;AACD;;AACD,kBAAI,CAACkB,eAAL,CAAqB0B,UAArB;AAED,WAVD,WAUS,UAACzC,KAAD,EAAW;AAClB,sFAAawC,OAAb,CAAqBxC,KAArB,EAA4B,MAAI,CAACH,SAAjC;;AACA,kBAAI,CAACkB,eAAL,CAAqB0B,UAArB;AAED,WAdD;AAeD;AAtKyB;AAAA;AAAA,qCAuKb;AACX,eAAKvB,eAAL,CAAqB6C,OAArB,CAA6B,IAA7B,EAAmC,QAAnC;AACD;AAzKyB;;AAAA;AAAA,OAA5B;;;;cAmBuC;;cACb;;cACP;;cACG;;cACM;;cACT;;cACQ;;cACA;;cACJ;;;;AA3BVpD,mBAAe,6DAL3B,gEAAU;AACTqD,cAAQ,EAAE,kBADD;AAETC,cAAQ,EAAR;AAAA;AAAA,8HAFS;;;;AAAA,KAAV,CAK2B,GAAftD,eAAe,CAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbb,QAAauD,aAAa;AAUxB,6BAAmBC,gBAAnB,EAAuD;AAAA;;AAApC,aAAAA,gBAAA,GAAAA,gBAAA;AAAuC;;AAVlC;AAAA;AAAA,iDACC;AACvB,iBAAO,KAAKA,gBAAL,CAAsBC,sBAAtB,EAAP;AACD;AAHuB;AAAA;AAAA,kDAKE1C,QALF,EAKmB;AACzC,iBAAO,KAAKyC,gBAAL,CAAsBxC,yBAAtB,CAAgDD,QAAhD,CAAP;AACD;AAPuB;AAAA;AAAA,uDAaOkC,SAbP,EAaoB;AAC1C,iBAAQ,KAAKO,gBAAL,CAAsBE,8BAAtB,CAAqDT,SAArD,CAAR;AAED;AAhBuB;AAAA;AAAA,4CAkBJU,GAlBI,EAkBO;AAC7B,iBAAQ,KAAKH,gBAAL,CAAsBI,kBAAtB,CAAyCD,GAAzC,EAA8CA,GAAG,CAAC5C,QAAlD,CAAR;AACD;AApBuB;AAAA;AAAA,iDAsBCQ,MAtBD,EAsBgB;AACtC,iBAAO,KAAKiC,gBAAL,CAAsBK,wBAAtB,CAA+CtC,MAA/C,CAAP;AACD;AAxBuB;AAAA;AAAA,mDA0BGG,EA1BH,EA0BcH,MA1Bd,EA0B6BF,MA1B7B,EA0B4C;AAClE,iBAAO,KAAKmC,gBAAL,CAAsBM,0BAAtB,CAAiDpC,EAAjD,EAAoDH,MAApD,EAA2DF,MAA3D,CAAP;AACD;AA5BuB;AAAA;AAAA,2CA8BL0C,OA9BK,EA8Bc;AACpC,iBAAO,KAAKP,gBAAL,CAAsBQ,kBAAtB,CAAyCD,OAAzC,CAAP;AACD;AAhCuB;;AAAA;AAAA,OAA1B;;;;cAUuC;;;;AAV1BR,iBAAa,6DAHzB,iEAAW;AACVU,gBAAU,EAAE;AADF,KAAX,CAGyB,GAAbV,aAAa,CAAb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAb,QAAaW,gBAAgB;AAAA;;AAAA;;AAE3B,kCAAc;AAAA;;AAAA;;AACZ;AAEA,eAAKC,eAAL,GAAuB,QAAvB;AAHY;AAIb;;AAN0B;AAAA;AAAA,mDAQAzC,EARA,EAQYH,MARZ,EAQ4BF,MAR5B,EAQ0C;AAAA;;AACnE,iBAAO,IAAI+C,OAAJ,CAAiB,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC3C,gBAAIC,KAAK,GAAG,MAAI,CAACC,EAAL,CAAQC,UAAR,CAAmB,QAAnB,EACTC,KADS,CACH,IADG,EACG,IADH,EACShD,EADT,CAAZ;;AAGA,gBAAIH,MAAJ,EAAY;AACVgD,mBAAK,GAAGA,KAAK,CAACG,KAAN,CAAY,QAAZ,EAAsB,IAAtB,EAA4BnD,MAA5B,CAAR;AACD;;AAED,gBAAIF,MAAJ,EAAY;AACVkD,mBAAK,GAAGA,KAAK,CAACG,KAAN,CAAY,QAAZ,EAAsB,IAAtB,EAA4BrD,MAA5B,CAAR;AACD;;AAEDkD,iBAAK,CAACI,GAAN,GACG9E,IADH,CACQ,UAACoB,MAAD,EAAY;AAEhB,kBAAI2D,GAAG,GAAG,EAAV;AACA3D,oBAAM,CAAC4D,OAAP,CAAe,UAAUC,GAAV,EAAe;AAE5BF,mBAAG,CAACG,IAAJ,CAASD,GAAG,CAAC3F,IAAJ,EAAT;AAED,eAJD;AAKAkF,qBAAO,CAACO,GAAD,CAAP;AACD,aAVH,WAWS,UAAC3F,GAAD,EAAS;AACdqF,oBAAM,CAACrF,GAAD,CAAN;AACD,aAbH;AAcD,WA1BM,CAAP;AA4BD;AArC0B;AAAA;AAAA,2CAuCR+F,IAvCQ,EAuCGC,EAvCH,EAuCa;AAAA;;AAExC,cAAIC,MAAM,GAAGD,EAAE,GAAGA,EAAH,GAAQ,KAAKT,EAAL,CAAQC,UAAR,CAAmB,KAAKN,eAAxB,EAAyCW,GAAzC,GAA+CG,EAAtE;AACED,cAAI,CAACC,EAAL,GAAUC,MAAV;AACAF,cAAI,CAACjE,QAAL,GAAgBmE,MAAhB;AACF,iBAAO,IAAId,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACvC,kBAAI,CAACE,EAAL,CAAQC,UAAR,CAAmB,MAAI,CAACN,eAAxB,EACEW,GADF,CACMI,MADN,EAEEC,GAFF,CAEM,MAAD,OAAC,CAAD,EAAC,EAAKH,IAAL,CAFN,EAEmB;AAACI,mBAAK,EAAE;AAAR,aAFnB,EAGEvF,IAHF,CAGO,UAAC8D,GAAD,EAAc;AACnBU,qBAAO,CAACV,GAAD,CAAP;AACA,aALF,WAMQ,UAACtE,KAAD,EAAgB;AACtBiF,oBAAM,CAACjF,KAAD,CAAN;AACA,aARF;AASA,WAVM,CAAP;AAWA;AAvD2B;AAAA;AAAA,uDA0DI4D,SA1DJ,EA0Da;AAAA;;AACtC,iBAAO,IAAImB,OAAJ,CAAiB,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC3C,kBAAI,CAACE,EAAL,CAAQC,UAAR,CAAmB,QAAnB,EACGC,KADH,CACS,iBADT,EAC4B,gBAD5B,EAC8CzB,SAD9C,EAEG0B,GAFH,GAGG9E,IAHH,CAGQ,UAACoB,MAAD,EAAY;AAChB,kBAAI2D,GAAG,GAAG,EAAV;AACA3D,oBAAM,CAAC4D,OAAP,CAAe,UAAUC,GAAV,EAAe;AAE5BF,mBAAG,CAACG,IAAJ,CAASD,GAAG,CAAC3F,IAAJ,EAAT;AAED,eAJD;AAKAkF,qBAAO,CAACO,GAAD,CAAP;AACD,aAXH,WAYS,UAAC3F,GAAD,EAAS;AACdqF,oBAAM,CAACrF,GAAD,CAAN;AACD,aAdH;AAeD,WAhBM,CAAP;AAkBD;AA7E0B;AAAA;AAAA,iDA+EFsC,MA/EE,EA+EY;AAErC,iBAAO,KAAK8D,IAAL,CAAU;AAAEC,oBAAQ,EAAE,QAAZ;AAAsBC,0BAAc,EAAE,IAAtC;AAA4CC,sBAAU,EAAEjE;AAAxD,WAAV,CAAP;AACD;AAlF0B;AAAA;AAAA,2CAoFRwC,OApFQ,EAoFS;AAElC;AACA,iBAAO,KAAKsB,IAAL,CAAU;AAAEC,oBAAQ,EAAE,IAAZ;AAAkBC,0BAAc,EAAE,IAAlC;AAAwCC,sBAAU,EAAEzB;AAApD,WAAV,CAAP;AACD;AAxF0B;AAAA;AAAA,iDA0FL;AAAA;;AACpB,iBAAO,IAAIK,OAAJ,CAAiB,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC3C,kBAAI,CAACE,EAAL,CAAQC,UAAR,CAAmB,MAAI,CAACN,eAAxB,EACGQ,GADH,GAEG9E,IAFH,CAEQ,UAACoB,MAAD,EAAY;AAChB,kBAAI2D,GAAG,GAAG,EAAV;AACA3D,oBAAM,CAAC4D,OAAP,CAAe,UAAUC,GAAV,EAAe;AAC5BF,mBAAG,CAACG,IAAJ,CAASD,GAAG,CAAC3F,IAAJ,EAAT;AACD,eAFD;AAGAkF,qBAAO,CAACO,GAAD,CAAP;AACD,aARH,WASS,UAAC3F,GAAD,EAAS;AACdqF,oBAAM,CAACrF,GAAD,CAAN;AACD,aAXH;AAYD,WAbM,CAAP;AAcD;AAzG0B;AAAA;AAAA,kDA2GD8B,QA3GC,EA2GgB;AAAA;;AACzC,iBAAO,IAAIqD,OAAJ,CAAiB,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC3C,mBAAI,CAACE,EAAL,CAAQC,UAAR,CAAmB,OAAI,CAACN,eAAxB,EAAyCW,GAAzC,CAA6C/D,QAA7C,EACG4D,GADH,GAEG9E,IAFH,CAEQ,UAACoB,MAAD,EAAY;AAEhBoD,qBAAO,CAACpD,MAAM,CAAC9B,IAAP,EAAD,CAAP;AACD,aALH,WAMS,UAACF,GAAD,EAAS;AACdqF,oBAAM,CAACrF,GAAD,CAAN;AACD,aARH;AASD,WAVM,CAAP;AAWD;AAvH0B;;AAAA;AAAA,MAAS,oFAAT,CAA7B;;AAAaiF,oBAAgB,6DAH5B,iEAAW;AACVD,gBAAU,EAAE;AADF,KAAX,CAG4B,GAAhBC,gBAAgB,CAAhB","file":"default~pages-gerenciarIgreja-criar-igreja-criar-igreja-module~pages-gerenciarIgreja-manter-igreja-m~76532cac-es5.js","sourcesContent":["export default \"<ion-header translucent={true}>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"\\\" (click)=\\\"closeModal()\\\" text=\\\"Voltar\\\"></ion-back-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n  <ion-card>\\n    <ion-card-header>\\n      <ion-card-title *ngIf=\\\"igrejaId\\\">Mantem Igreja</ion-card-title>\\n      <ion-card-title *ngIf=\\\"!igrejaId\\\">Adicionar Igreja</ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <form [formGroup]=\\\"formData\\\" (ngSubmit)=\\\"salvarIgreja()\\\">\\n        <ion-item class=\\\"input-item\\\">\\n          <ion-label position=\\\"floating\\\">Nome Igreja <ion-text color=\\\"danger\\\">*</ion-text>\\n          </ion-label>\\n\\n          <ion-input type=\\\"text\\\" formControlName=\\\"nomeIgreja\\\" clearInput autocapitalize=\\\"off\\\"></ion-input>\\n        </ion-item>\\n        <app-mensagem-validacao [validation_messages_object]=\\\"validation_messages.nomeIgreja\\\" [form]=\\\"formData\\\"\\n          [nomeCampo]=\\\"'nomeIgreja'\\\"></app-mensagem-validacao>\\n\\n        <ion-item class=\\\"input-item\\\">\\n          <ion-label position=\\\"floating\\\">Cep <ion-text color=\\\"danger\\\">*</ion-text>\\n          </ion-label>\\n          <ion-input type=\\\"text\\\" formControlName=\\\"cep\\\" clearInput autocapitalize=\\\"off\\\"></ion-input>\\n        </ion-item>\\n        <div class=\\\"ion-text-center\\\">\\n          <ion-button color=\\\"primary\\\" size=\\\"small\\\" (click)=\\\"buscarEnderecoPorCEP()\\\">\\n            <ion-icon name=\\\"search-outline\\\" style=\\\"margin-right: 10px;\\\"></ion-icon>\\n            <ion-label>Buscar Endereço</ion-label>\\n          </ion-button>\\n        </div>\\n\\n        <ion-item class=\\\"input-item\\\">\\n          <ion-label class=\\\"ion-text-wrap\\\" *ngIf=\\\"formData.value.logradouro\\\">\\n            <p>{{formData.value.logradouro}}, {{formData.value.bairro}} - {{formData.value.cidade}} /\\n              {{formData.value.uf}}</p>\\n          </ion-label>\\n\\n          <app-mensagem-validacao [validation_messages_object]=\\\"validation_messages.cep\\\" [form]=\\\"formData\\\"\\n            [nomeCampo]=\\\"'cep'\\\"></app-mensagem-validacao>\\n        </ion-item>\\n\\n        <ion-item class=\\\"input-item\\\">\\n          <ion-label position=\\\"floating\\\" class=\\\"ion-text-wrap\\\">Email do administrador da igreja <ion-text\\n              color=\\\"danger\\\">*</ion-text>\\n          </ion-label>\\n          <ion-input type=\\\"text\\\" formControlName=\\\"emailAdministrador\\\" clearInput autocapitalize=\\\"off\\\"></ion-input>\\n        </ion-item>\\n        <div class=\\\"ion-text-center\\\">\\n          <ion-button color=\\\"primary\\\" size=\\\"small\\\" (click)=\\\"buscarUsuarioAdministradorIgreja()\\\">\\n            <ion-icon name=\\\"search-outline\\\" style=\\\"margin-right: 10px;\\\"></ion-icon>\\n            <ion-label>Buscar Administrador</ion-label>\\n          </ion-button>\\n        </div>\\n        <ion-item class=\\\"input-item\\\">\\n          <ion-label class=\\\"ion-text-wrap\\\" *ngIf=\\\"formData.value.administradorUsuarioId\\\">\\n            <p>{{formData.value.emailAdministrador}}</p>\\n            <p>{{formData.value.nomeAdministrador}}</p>\\n          </ion-label>\\n        </ion-item>\\n        <div class=\\\"ion-text-end\\\" style=\\\"margin-top: 20px;\\\">\\n          <ion-button color=\\\"success\\\" type=\\\"submit\\\" clear>\\n            <ion-icon name=\\\"checkmark\\\" style=\\\"margin-right:10px;\\\">\\n            </ion-icon>\\n            Salvar\\n          </ion-button>\\n        </div>\\n      </form>\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\";","import { ToastCustom } from './toastCustom';\nimport { ToastController } from '@ionic/angular/providers/toast-controller';\nexport class HandlerError {\n\n    public static handler(err: any, toastCtrl: ToastController) {\n        var data = err;\n        let message = data.error ? data.error.message : data;\n        \n        ToastCustom.errorToast(message, toastCtrl);\n    }\n}","import { ToastController } from '@ionic/angular/providers/toast-controller';\n\nexport  class  ToastCustom{\n\n    public static errorToast(msg:string,  toastCtrl : ToastController){\n     \n      this.CustomToast(toastCtrl, msg,\"danger\",4000);\n    }\n\n    public static SucessoToast(toastCtrl : ToastController){\n\n      this.CustomToast(toastCtrl, \"Operação realizada com sucesso.\",\"success\",4000);\n    }\n\n    public static CustomToast(toastCtrl : ToastController, message:string, color:string, duration:any){\n      toastCtrl.create({\n        message: message,\n        duration: duration,\n        color:color\n      }).then(x=>{\n\n        x.present();\n      });\n    }\n}","export default \"ion-card-content {\\n  padding-left: 0px !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3RyYXZpcy9idWlsZC9hbmRyZWZlcnJlaXJhdHJpbmRhZGUvSWdyZWphQXBwL3NyYy9hcHAvcGFnZXMvZ2VyZW5jaWFySWdyZWphL2NyaWFyLWlncmVqYS9jcmlhci1pZ3JlamEucGFnZS5zY3NzIiwic3JjL2FwcC9wYWdlcy9nZXJlbmNpYXJJZ3JlamEvY3JpYXItaWdyZWphL2NyaWFyLWlncmVqYS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSw0QkFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvZ2VyZW5jaWFySWdyZWphL2NyaWFyLWlncmVqYS9jcmlhci1pZ3JlamEucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWNhcmQtY29udGVudHtcbiAgICBwYWRkaW5nLWxlZnQ6IDBweCAhaW1wb3J0YW50O1xuICB9XG4gICIsImlvbi1jYXJkLWNvbnRlbnQge1xuICBwYWRkaW5nLWxlZnQ6IDBweCAhaW1wb3J0YW50O1xufSJdfQ== */\";","import { Component, OnInit, NgZone } from '@angular/core';\nimport { BuscarCEPService } from 'src/app/providers/buscaCEP/buscar-cep.service';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\n\nimport { IgrejaService } from 'src/app/providers/igreja/igreja.service';\nimport { Config } from 'src/app/config';\nimport { Router } from '@angular/router';\nimport { UsuarioService } from 'src/app/providers/usuario/usuario.service';\nimport { HandlerError } from 'src/app/helpers/handlerError';\nimport { ToastController, ModalController, NavParams } from '@ionic/angular';\nimport { LoadingContr } from 'src/app/helpers/loadingContr';\nimport { ToastCustom } from 'src/app/helpers/toastCustom';\nimport { Constants } from 'src/app/utils/constants';\n\n@Component({\n  selector: 'app-criar-igreja',\n  templateUrl: './criar-igreja.page.html',\n  styleUrls: ['./criar-igreja.page.scss'],\n})\nexport class CriarIgrejaPage implements OnInit {\n\n  private igrejaEntity: any = {}\n  public formData: FormGroup;\n  public enderecoParte1: string;\n  public enderecoParte2: string;\n  public igrejaId : string;\n  validation_messages = {\n    'nomeIgreja': [\n      { type: 'required', message: 'Campo de preenchimento obrigatório.' },\n    ],\n    'cep': [\n      { type: 'required', message: 'Campo de preenchimento obrigatório.' },\n    ], 'nomeAdministrador': [\n      { type: 'required', message: 'Campo de preenchimento obrigatório.' },\n    ], 'administradorUsuarioId': [\n      { type: 'required', message: 'Campo de preenchimento obrigatório.' },\n    ]\n  };\n  constructor(public buscarCEPService: BuscarCEPService,\n    public igrejaService: IgrejaService,\n    public router: Router,\n    public toastCtrl: ToastController,\n    public loadingControll: LoadingContr,\n    public ngZone: NgZone,\n    public usuarioService: UsuarioService,\n    public modalController:ModalController,\n    private navParams :NavParams\n  ) {\n    \n\n    this.formData = new FormGroup({\n      'cep': new FormControl('', Validators.compose([\n        Validators.required\n      ])),\n      'nomeIgreja': new FormControl('', Validators.compose([\n        Validators.required\n      ])), 'logradouro': new FormControl('', Validators.compose([\n        Validators.required\n      ])), 'bairro': new FormControl('', Validators.compose([\n        Validators.required\n      ])), 'uf': new FormControl('', Validators.compose([\n        Validators.required\n      ])), 'cidade': new FormControl('', Validators.compose([\n        Validators.required\n      ])),\n      'emailAdministrador': new FormControl('', Validators.compose([\n        Validators.required\n      ])), 'nomeAdministrador': new FormControl('', Validators.compose([\n        Validators.required\n      ])), 'administradorUsuarioId': new FormControl('', Validators.compose([\n        Validators.required\n      ])),\n    });\n     this.igrejaId = this.navParams.data.igrejaId;\n  }\n\n  ngOnInit() {\n    \n      if(this.igrejaId){\n        this.igrejaService.RecuperaIgrejaPorIgrejaId(this.igrejaId).then((result) =>{\n          this.formData.controls['administradorUsuarioId'].setValue(result.administradorUsuarioId);\n          this.formData.controls['bairro'].setValue(result.bairro);\n          this.formData.controls['cep'].setValue(result.cep);\n          this.formData.controls['cidade'].setValue(result.cidade);\n          this.formData.controls['emailAdministrador'].setValue(result.emailAdministrador);\n          this.formData.controls['logradouro'].setValue(result.logradouro);\n          this.formData.controls['uf'].setValue(result.uf);\n          this.formData.controls['nomeAdministrador'].setValue(result.nomeAdministrador);\n          this.formData.controls['nomeIgreja'].setValue(result.nomeIgreja);\n        }).catch((error) => {\n          HandlerError.handler(error, this.toastCtrl);\n          this.loadingControll.hideLoader();\n        });\n      }\n  }\n\n  buscarEnderecoPorCEP() {\n    this.formData.controls['cidade'].setValue(null);\n    this.formData.controls['bairro'].setValue(null);\n    this.formData.controls['uf'].setValue(null);\n    this.formData.controls['logradouro'].setValue(null);\n\n    if (!this.formData.value.cep || this.formData.value.cep.toString().length != \"8\") {\n      HandlerError.handler(\"Favor inserir CEP válido, antes de continuar.\", this.toastCtrl);\n      return false;\n    }\n    this.loadingControll.showLoader();\n\n\n    this.buscarCEPService.buscarCEP(this.formData.value.cep).then(x => {\n\n      if (x && !x.erro) {\n        this.formData.controls['cidade'].setValue(x.localidade);\n        this.formData.controls['bairro'].setValue(x.bairro);\n        this.formData.controls['uf'].setValue(x.uf);\n        this.formData.controls['logradouro'].setValue(x.logradouro);\n\n        this.loadingControll.hideLoader();\n      } else {\n        this.loadingControll.hideLoader()\n        HandlerError.handler(\"Favor inserir CEP válido, antes de continuar.\", this.toastCtrl);\n      }\n\n    }).catch(x => {\n      this.loadingControll.hideLoader();\n      HandlerError.handler(x, this.toastCtrl);\n    });\n\n  }\n\n  salvarIgreja() {\n    if (!this.formData.value.cidade) {\n      HandlerError.handler(\"Favor inserir CEP válido, antes de continuar.\", this.toastCtrl);\n      return false;\n    }\n\n    if (!this.formData.valid) {\n      HandlerError.handler(Constants.Mensagens.CamposObrigatorios, this.toastCtrl)\n      return false;\n    }\n\n    this.loadingControll.showLoader()\n\n    this.igrejaEntity = this.formData.value;\n    this.igrejaEntity.administradores = [this.formData.value.administradorUsuarioId];\n    this.igrejaService.AdicionarNovaIgreja(this.igrejaEntity).then(() => {\n\n      this.usuarioService\n        .AdicionaPerfilAoUsuario(this.formData.value.administradorUsuarioId, Constants.PerfilUsuario.AdministradorIgreja)\n        .then(() => {\n          ToastCustom.SucessoToast(this.toastCtrl);\n          this.loadingControll.hideLoader();\n          this.closeModal();\n\n        }).catch((error) => {\n          HandlerError.handler(error, this.toastCtrl);\n          this.loadingControll.hideLoader();\n\n        });\n\n    }).catch((error) => {\n      HandlerError.handler(error, this.toastCtrl);\n      this.loadingControll.hideLoader();\n\n    });\n  }\n\n  buscarUsuarioAdministradorIgreja() {\n    this.loadingControll.showLoader();\n\n    this.usuarioService.RecuperaUsuarioPorEmail(this.formData.value.emailAdministrador).then(result => {\n      if (result.length > 0) {\n        this.formData.controls['administradorUsuarioId'].setValue(result[0].data.usuarioId);\n        this.formData.controls['emailAdministrador'].setValue(result[0].data.email);\n        this.formData.controls['nomeAdministrador'].setValue(result[0].data.nome);\n      } else {\n        HandlerError.handler(\"Nenhum usuário encontrado com este e-mail.\", this.toastCtrl);\n      }\n      this.loadingControll.hideLoader();\n\n    }).catch((error) => {\n      HandlerError.handler(error, this.toastCtrl);\n      this.loadingControll.hideLoader();\n\n    });\n  }\n  closeModal() {\n    this.modalController.dismiss(null, 'cancel');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { IgrejaRepService } from 'src/app/repository/igreja/igreja-rep.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IgrejaService {\n  RecuperaTodasAsIgrejas() : Promise<any[]>{\n    return this.igrejaRepService.RecuperaTodasAsIgrejas();\n  }\n\n  RecuperaIgrejaPorIgrejaId(igrejaId : string): Promise<any>{\n    return this.igrejaRepService.RecuperaIgrejaPorIgrejaId(igrejaId);\n  }\n\n\n  constructor(public igrejaRepService: IgrejaRepService) { }\n\n\n  RecuperaIgrejaPorAdministrador(usuarioId:any):Promise<any[]>{\n    return  this.igrejaRepService.RecuperaIgrejaPorAdministrador(usuarioId);\n\n  }\n\n  AdicionarNovaIgreja(obj : any) : Promise<any>{\n    return  this.igrejaRepService.AdicionaNovaIgreja(obj, obj.igrejaId);\n  }\n\n  RecuperaIgrejasPorCidade(cidade:string) : Promise<any[]>{\n    return this.igrejaRepService.RecuperaIgrejasPorCidade(cidade);\n  }\n  \n  RecuperaIgrejasPorEndereco(uf:string, cidade:string, bairro:string) : Promise<any[]>{\n    return this.igrejaRepService.RecuperaIgrejasPorEndereco(uf,cidade,bairro);\n  }\n\n  RecuperaNomeIgreja(igrejas: string[]) {\n    return this.igrejaRepService.RecuperaNomeIgreja(igrejas);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BaseRepository } from '../repository-interface/Repository-Base';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IgrejaRepService extends BaseRepository {\n\n  constructor() {\n    super();\n\n    this._collectionName = \"igreja\";\n  }\n\n  RecuperaIgrejasPorEndereco(uf: string, cidade: string, bairro: string): Promise<any[]> {\n    return new Promise<any>((resolve, reject) => {\n      let query = this.db.collection('igreja')\n        .where(\"uf\", \"==\", uf);\n\n      if (cidade) {\n        query = query.where(\"cidade\", \"==\", cidade)\n      }\n\n      if (bairro) {\n        query = query.where(\"bairro\", \"==\", bairro)\n      }\n\n      query.get()\n        .then((result) => {\n\n          let lst = [];\n          result.forEach(function (doc) {\n\n            lst.push(doc.data());\n\n          });\n          resolve(lst)\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n  }\n\n  AdicionaNovaIgreja(item: any, id: string): Promise<any> {\n\n\t\tlet idTemp = id ? id : this.db.collection(this._collectionName).doc().id;\n    item.id = idTemp;\n    item.igrejaId = idTemp;\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.db.collection(this._collectionName)\n\t\t\t\t.doc(idTemp)\n\t\t\t\t.set({ ...item }, {merge: true})\n\t\t\t\t.then((obj: any) => {\n\t\t\t\t\tresolve(obj);\n\t\t\t\t})\n\t\t\t\t.catch((error: any) => {\n\t\t\t\t\treject(error);\n\t\t\t\t});\n\t\t});\n\t}\n\n\n  RecuperaIgrejaPorAdministrador(usuarioId): Promise<any[]> {\n    return new Promise<any>((resolve, reject) => {\n      this.db.collection('igreja')\n        .where(\"administradores\", \"array-contains\", usuarioId)\n        .get()\n        .then((result) => {\n          let lst = [];\n          result.forEach(function (doc) {\n\n            lst.push(doc.data());\n\n          });\n          resolve(lst)\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n  }\n\n  RecuperaIgrejasPorCidade(cidade: string): Promise<any[]> {\n\n    return this.find({ elemento: \"cidade\", tipoComparacao: \"==\", comparacao: cidade });\n  }\n\n  RecuperaNomeIgreja(igrejas: string[]): Promise<any[]> {\n\n    // return this.db.collection(\"igreja\").where(firebase.firestore.FieldPath.documentId(),\"array-contains\",igrejas).get()\n    return this.find({ elemento: \"id\", tipoComparacao: \"in\", comparacao: igrejas });\n  }\n\n  RecuperaTodasAsIgrejas(): Promise<any[]> {\n    return new Promise<any>((resolve, reject) => {\n      this.db.collection(this._collectionName)\n        .get()\n        .then((result) => {\n          let lst = [];\n          result.forEach(function (doc) {\n            lst.push(doc.data());\n          });\n          resolve(lst)\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n\n  RecuperaIgrejaPorIgrejaId(igrejaId : string): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      this.db.collection(this._collectionName).doc(igrejaId)\n        .get()\n        .then((result) => {\n\n          resolve(result.data());\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n}\n"]}