{"version":3,"sources":["webpack:///src/app/pages/prestador/prestadorCadastro/prestador-cadastro-form3/prestador-cadastro-form3.page.html","webpack:///src/app/helpers/handlerError.ts","webpack:///src/app/pages/prestador/prestadorCadastro/prestador-cadastro-form3/prestador-cadastro-form3-routing.module.ts","webpack:///src/app/pages/prestador/prestadorCadastro/prestador-cadastro-form3/prestador-cadastro-form3.module.ts","webpack:///src/app/pages/prestador/prestadorCadastro/prestador-cadastro-form3/prestador-cadastro-form3.page.scss","webpack:///src/app/pages/prestador/prestadorCadastro/prestador-cadastro-form3/prestador-cadastro-form3.page.ts","webpack:///src/app/providers/dominioServico/dominio-servico.service.ts","webpack:///src/app/providers/igreja/igreja.service.ts","webpack:///src/app/repository/dominioServico/dominio-servico-repository.service.ts","webpack:///src/app/repository/igreja/igreja-rep.service.ts"],"names":["HandlerError","err","toastCtrl","data","message","error","console","log","errorToast","routes","path","component","PrestadorCadastroForm3PageRoutingModule","imports","forChild","exports","PrestadorCadastroForm3PageModule","declarations","PrestadorCadastroForm3Page","prestadorService","dominioServicoService","loadingContr","ngZone","router","usuarioService","igrejaService","prestador","prestadorUsuario","prestadorServicos","usuario","showLoader","RecuperaInstancia","recuperaUsuario","RecuperaPrestador","usuarioId","then","result","nomeSituacaoPrestador","ListTipoSituacaoPrestador","RecuperaDescricaoPorValor","situacaoPrestador","RecuperaNomeIgreja","igrejas","igrejaId","nomeIgreja","staMembro","hideLoader","handler","recuperaServicosPorPrestador","recuperaDominioServico","x","map","listItem","expanded","breveDescricao","nomeServico","filter","y","servicoId","obj","TipoSituacaoPrestador","PendenteAutorizacao","AtualizaPrestador","CustomToast","run","navigate","selector","template","DominioServicoService","dominioServico","ev","recuperaServicoAutoComplete","providedIn","IgrejaService","igrejaRepService","RecuperaIgrejaPorAdministrador","add","cidade","RecuperaIgrejasPorCidade","uf","bairro","RecuperaIgrejasPorEndereco","DominioServicoRepositoryService","servicoConverter","toFirestore","servico","_collectionName","query","Promise","response","resp","endText","db","collection","orderBy","limit","where","get","lst","forEach","doc","push","id","IgrejaRepService","resolve","reject","find","elemento","tipoComparacao","comparacao"],"mappings":"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","file":"pages-prestador-prestadorCadastro-prestador-cadastro-form3-prestador-cadastro-form3-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Prestador - Finalizar\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list>\\n    <ion-list-header>\\n      Dados Iniciais\\n    </ion-list-header>\\n    <ion-item>\\n      <ion-label class=\\\"ion-text-wrap\\\">\\n        <p>Nome</p>\\n        <h3>{{usuario.nome}}</h3>\\n      </ion-label>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label class=\\\"ion-text-wrap\\\">\\n        <p>Email</p>\\n        <h3>{{usuario.email}}</h3>\\n      </ion-label>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label class=\\\"ion-text-wrap\\\">\\n        <p>Razão Social</p>\\n        <h3>{{prestador.razaoSocial}}</h3>\\n      </ion-label>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label class=\\\"ion-text-wrap\\\">\\n        <p>Telefone</p>\\n        <h3>{{prestador.telefone}}</h3>\\n      </ion-label>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label class=\\\"ion-text-wrap\\\">\\n        <p>Endereço</p>\\n        <h3>{{prestador.logradouro}}, {{prestador.bairro}} - {{prestador.cidade}} / {{prestador.uf}}</h3>\\n      </ion-label>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label class=\\\"ion-text-wrap\\\">\\n        <p>Igreja Vinculo</p>\\n        <h3>{{prestador.nomeIgreja}}</h3>\\n        <h3>{{prestador.staMembro}}</h3>\\n      </ion-label>\\n    </ion-item>\\n  </ion-list>\\n  <ion-list>\\n    <ion-list-header>\\n      Serviços\\n    </ion-list-header>\\n    <ion-item *ngFor=\\\"let item of prestadorServicos\\\">\\n      <ion-label class=\\\"ion-text-wrap\\\">\\n        <h1>{{item.nomeServico}}</h1>\\n        <h3>{{item.breveDescricao}}</h3>\\n      </ion-label>\\n    </ion-item>\\n  </ion-list>\\n\\n  <ion-button class=\\\"btn-success\\\" type=\\\"button\\\" expand=\\\"block\\\" (click)=\\\"finalizar()\\\">Finalizar</ion-button>\\n</ion-content>\";","import { ToastCustom } from './toastCustom';\nimport { ToastController } from '@ionic/angular/providers/toast-controller';\nexport class HandlerError {\n\n    public static handler(err: any, toastCtrl: ToastController) {\n        var data = err;\n        let message = data.error ? data.error.message : data;\n        \n        console.log(message);\n        ToastCustom.errorToast(message, toastCtrl);\n    }\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PrestadorCadastroForm3Page } from './prestador-cadastro-form3.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PrestadorCadastroForm3Page\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PrestadorCadastroForm3PageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PrestadorCadastroForm3PageRoutingModule } from './prestador-cadastro-form3-routing.module';\n\nimport { PrestadorCadastroForm3Page } from './prestador-cadastro-form3.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    PrestadorCadastroForm3PageRoutingModule\n  ],\n  declarations: [PrestadorCadastroForm3Page]\n})\nexport class PrestadorCadastroForm3PageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3ByZXN0YWRvci9wcmVzdGFkb3JDYWRhc3Ryby9wcmVzdGFkb3ItY2FkYXN0cm8tZm9ybTMvcHJlc3RhZG9yLWNhZGFzdHJvLWZvcm0zLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit, NgZone } from '@angular/core';\nimport { PrestadorService } from 'src/app/providers/prestador/prestador.service';\nimport { Config } from 'src/app/config';\nimport { DominioServicoService } from 'src/app/providers/dominioServico/dominio-servico.service';\nimport { LoadingContr } from 'src/app/helpers/loadingContr';\nimport { HandlerError } from 'src/app/helpers/handlerError';\nimport { ToastController } from '@ionic/angular';\n\nimport { ToastCustom } from 'src/app/helpers/toastCustom';\nimport { Constants } from 'src/app/utils/constants';\nimport { Router } from '@angular/router';\nimport { UsuarioService } from 'src/app/providers/usuario/usuario.service';\nimport { IgrejaService } from 'src/app/providers/igreja/igreja.service';\n\n@Component({\n  selector: 'app-prestador-cadastro-form3',\n  templateUrl: './prestador-cadastro-form3.page.html',\n  styleUrls: ['./prestador-cadastro-form3.page.scss'],\n})\nexport class PrestadorCadastroForm3Page implements OnInit {\n\n  prestador: any = {};\n  prestadorUsuario = {};\n  prestadorServicos = [];\n  usuario = {};\n  constructor(public prestadorService: PrestadorService,\n    public dominioServicoService: DominioServicoService,\n    public loadingContr: LoadingContr,\n    public ngZone: NgZone,\n    public router: Router,\n    public usuarioService: UsuarioService,\n    public toastCtrl: ToastController,\n    public igrejaService: IgrejaService) { }\n\n  ngOnInit() {\n    this.loadingContr.showLoader();\n\n    this.usuario = Config.RecuperaInstancia().recuperaUsuario();\n\n    this.prestadorService.RecuperaPrestador(Config.RecuperaInstancia().recuperaUsuario().usuarioId)\n      .then((result) => {\n        this.prestador = result;\n        this.prestador.nomeSituacaoPrestador = Constants.ListTipoSituacaoPrestador.RecuperaDescricaoPorValor(this.prestador.situacaoPrestador);\n        this.igrejaService.RecuperaNomeIgreja([this.prestador.igrejas[0].igrejaId]).then(result => {\n          this.prestador.nomeIgreja = result[0].data.nomeIgreja;\n          this.prestador.staMembro = result[0].data.staMembro;\n          this.loadingContr.hideLoader();\n        }).catch(err => {\n          HandlerError.handler(err, this.toastCtrl);\n          this.loadingContr.hideLoader();\n        });\n\n      }).catch(err => {\n        HandlerError.handler(err, this.toastCtrl);\n        this.loadingContr.hideLoader();\n      });\n\n\n    this.prestadorService.recuperaServicosPorPrestador(Config.RecuperaInstancia().recuperaUsuario().usuarioId)\n      .then(result => {\n        this.prestadorServicos = result;\n        this.dominioServicoService.recuperaDominioServico().then(x => {\n\n          this.prestadorServicos.map((listItem) => {\n            listItem.expanded = false;\n\n            listItem.breveDescricao = listItem.breveDescricao ?? \"\";\n            listItem.nomeServico = x.filter(y => y.servicoId == listItem.servicoId)[0].nomeServico;\n            return listItem;\n          });\n          this.loadingContr.hideLoader();\n        }).catch(err => {\n          HandlerError.handler(err, this.toastCtrl);\n          this.loadingContr.hideLoader();\n        });\n\n      }).catch(err => {\n        HandlerError.handler(err, this.toastCtrl);\n        this.loadingContr.hideLoader();\n      });\n  }\n\n  finalizar() {\n    this.loadingContr.showLoader();\n    let obj = { situacaoPrestador: Constants.TipoSituacaoPrestador.PendenteAutorizacao };\n\n    this.prestadorService\n      .AtualizaPrestador(Config.RecuperaInstancia().recuperaUsuario().usuarioId, obj).then(() => {\n\n        this.loadingContr.hideLoader();\n        ToastCustom.CustomToast(this.toastCtrl, \"Operação realizadao com sucesso. Sua solicitação foi encaminhada para o administrador da igreja.\", \"success\", 5000);\n\n        this.ngZone.run(() => {\n          this.router.navigate(['home']);\n        });\n      }).catch(err => {\n        HandlerError.handler(err, this.toastCtrl);\n        this.loadingContr.hideLoader();\n      });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { DominioServicoRepositoryService } from 'src/app/repository/dominioServico/dominio-servico-repository.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DominioServicoService {\n  recuperaServicoAutoComplete(ev: string) {\n     return this.dominioServico.recuperaServicoAutoComplete(ev);\n  }\n\n  constructor(public dominioServico: DominioServicoRepositoryService) { }\n\n  recuperaDominioServico() : Promise<any>{\n    \n    return this.dominioServico.recuperaDominioServico();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { IgrejaRepService } from 'src/app/repository/igreja/igreja-rep.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IgrejaService {\n\n\n  constructor(public igrejaRepService: IgrejaRepService) { }\n\n\n  RecuperaIgrejaPorAdministrador(usuarioId:any):Promise<any[]>{\n    return  this.igrejaRepService.RecuperaIgrejaPorAdministrador(usuarioId);\n\n  }\n\n  AdicionarNovaIgreja(obj : any) : Promise<any>{\n    return  this.igrejaRepService.add(obj,null);\n  }\n\n  RecuperaIgrejasPorCidade(cidade:string) : Promise<any[]>{\n    return this.igrejaRepService.RecuperaIgrejasPorCidade(cidade);\n  }\n  \n  RecuperaIgrejasPorEndereco(uf:string, cidade:string, bairro:string) : Promise<any[]>{\n    return this.igrejaRepService.RecuperaIgrejasPorEndereco(uf,cidade,bairro);\n  }\n\n  RecuperaNomeIgreja(igrejas: string[]) {\n    return this.igrejaRepService.RecuperaNomeIgreja(igrejas);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BaseRepository } from '../repository-interface/Repository-Base';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DominioServicoRepositoryService extends BaseRepository {\n\n    /**\n     *\n     */\n    constructor() {\n        super();\n        this._collectionName = \"dominioServico\";\n    }\n\n    servicoConverter = {\n\n        toFirestore:function(servico){\n            return {servicoId : servico.servicoId,\n            nomeServico:servico.nomeServico}\n        }\n\n    }\n    recuperaServicoAutoComplete(query: string): Promise<any> {\n\n        return new Promise<any>((response, resp) => {\n            const endText = query + '\\uf8ff'; \n            this.db.collection(\"dominioServico\")\n                .orderBy(\"nomeServico\")\n                .limit(10)\n                .where(\"nomeServico\",\">=\",query)\n                .where(\"nomeServico\",\"<=\",endText)\n                // .startAt(query)\n                // .endAt(endText)\n                .get()\n                .then((result) => {\n\n                    let lst = [];\n                    result.forEach(function (doc) {\n\n                        lst.push({ nomeServico: doc.data().nomeServico, servicoId: doc.id });\n                    })\n                    response(lst);\n                })\n                .catch((err) => {\n                    resp(err);\n                });\n        });\n    }\n\n\n    recuperaDominioServico(): Promise<any> {\n        return new Promise<any>((response, resp) => {\n            this.db.collection(\"dominioServico\").get()\n            .then((result) => {\n\n                let lst = [];\n                result.forEach(function (doc) {\n\n                    lst.push({ nomeServico: doc.data().nomeServico, servicoId: doc.id });\n                })\n                response(lst);\n            })\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BaseRepository } from '../repository-interface/Repository-Base';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IgrejaRepService extends BaseRepository {\n\n  constructor() {\n    super();\n\n    this._collectionName = \"igreja\";\n  }\n\n  RecuperaIgrejasPorEndereco(uf: string, cidade: string, bairro: string): Promise<any[]> {\n    return new Promise<any>((resolve, reject) => {\n      let query = this.db.collection('igreja')\n        .where(\"uf\", \"==\", uf);\n\n      if (cidade) {\n        query = query.where(\"cidade\", \"==\", cidade)\n      }\n\n      if (bairro) {\n        query = query.where(\"bairro\", \"==\", bairro)\n      }\n\n      query.get()\n        .then((result) => {\n\n          let lst = [];\n          result.forEach(function (doc) {\n\n            lst.push(doc.data());\n\n          });\n          resolve(lst)\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n  }\n\n\n\n  RecuperaIgrejaPorAdministrador(usuarioId): Promise<any[]> {\n    return new Promise<any>((resolve, reject) => {\n      this.db.collection('igreja')\n        .where(\"administradores\", \"array-contains\", {usuarioId:usuarioId})\n        .get()\n        .then((result) => {\n          let lst = [];\n          result.forEach(function (doc) {\n\n            lst.push(doc.data());\n\n          });\n          resolve(lst)\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n  }\n\n  RecuperaIgrejasPorCidade(cidade: string): Promise<any[]> {\n\n    return this.find({ elemento: \"cidade\", tipoComparacao: \"==\", comparacao: cidade });\n  }\n\n  RecuperaNomeIgreja(igrejas: string[]) {\n\n    // return this.db.collection(\"igreja\").where(firebase.firestore.FieldPath.documentId(),\"array-contains\",igrejas).get()\n    return this.find({ elemento: \"id\", tipoComparacao: \"in\", comparacao: igrejas });\n  }\n}\n"]}