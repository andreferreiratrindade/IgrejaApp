{"version":3,"sources":["webpack:///src/app/pages/gerenciarIgreja/manterServicos/mantem-servico/mantem-servico.page.html","webpack:///src/app/helpers/handlerError.ts","webpack:///src/app/helpers/toastCustom.ts","webpack:///src/app/pages/gerenciarIgreja/manterServicos/mantem-servico/mantem-servico-routing.module.ts","webpack:///src/app/pages/gerenciarIgreja/manterServicos/mantem-servico/mantem-servico.module.ts","webpack:///src/app/pages/gerenciarIgreja/manterServicos/mantem-servico/mantem-servico.page.scss","webpack:///src/app/pages/gerenciarIgreja/manterServicos/mantem-servico/mantem-servico.page.ts","webpack:///src/app/providers/dominioServico/dominio-servico.service.ts","webpack:///src/app/repository/dominioServico/dominio-servico-repository.service.ts"],"names":["HandlerError","err","toastCtrl","data","message","error","console","log","errorToast","ToastCustom","msg","CustomToast","color","duration","create","then","x","present","routes","path","component","MantemServicoPageRoutingModule","imports","forChild","exports","MantemServicoPageModule","declarations","MantemServicoPage","servicoService","modalCtrl","servicos","recuperaDominioServico","result","modal","backdropDismiss","onWillDismiss","resultModal","selector","template","DominioServicoService","dominioServico","ev","recuperaServicoAutoComplete","servico","add","providedIn","DominioServicoRepositoryService","servicoConverter","toFirestore","servicoId","nomeServico","_collectionName","query","Promise","response","resp","endText","db","collection","orderBy","limit","where","get","lst","forEach","doc","push","id"],"mappings":"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","file":"pages-gerenciarIgreja-manterServicos-mantem-servico-mantem-servico-module-es5.js","sourcesContent":["export default \"<ion-header translucent={true}>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"\\\" (click)=\\\"closeModal()\\\" text=\\\"Voltar\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Serviços</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n    <ion-searchbar type=\\\"text\\\" \\n    debounce = 1\\n    placeholder=\\\"Pesquisar\\\"\\n    animated #searchbar\\n    (ionChange)=\\\"recuperaServicos($event)\\\" animated></ion-searchbar>\\n  <ion-list>\\n      <ion-item *ngFor=\\\"let item of servicos\\\" (click)=\\\"selecionarServico(item)\\\" detail>\\n        <ion-label>{{item.nomeServico}}</ion-label>\\n      </ion-item>\\n  </ion-list>\\n  <ion-fab horizontal=\\\"end\\\" vertical=\\\"bottom\\\" slot=\\\"fixed\\\">\\n    <ion-fab-button color=\\\"dark\\\" (click)=\\\"abreModalSelecionaServico()\\\">\\n      <ion-icon name=\\\"add\\\"></ion-icon>\\n    </ion-fab-button>\\n  </ion-fab>\\n\\n</ion-content>\\n\";","import { ToastCustom } from './toastCustom';\nimport { ToastController } from '@ionic/angular/providers/toast-controller';\nexport class HandlerError {\n\n    public static handler(err: any, toastCtrl: ToastController) {\n        var data = err;\n        let message = data.error ? data.error.message : data;\n        \n        console.log(message);\n        ToastCustom.errorToast(message, toastCtrl);\n    }\n}","import { ToastController } from '@ionic/angular/providers/toast-controller';\n\nexport  class  ToastCustom{\n\n    public static errorToast(msg:string,  toastCtrl : ToastController){\n     \n      this.CustomToast(toastCtrl, msg,\"danger\",4000);\n    }\n\n    public static SucessoToast(toastCtrl : ToastController){\n\n      this.CustomToast(toastCtrl, \"Operação realizada com sucesso.\",\"success\",4000);\n    }\n\n    public static CustomToast(toastCtrl : ToastController, message:string, color:string, duration:any){\n      toastCtrl.create({\n        message: message,\n        duration: duration,\n        color:color\n      }).then(x=>{\n\n        x.present();\n      });\n    }\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MantemServicoPage } from './mantem-servico.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MantemServicoPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MantemServicoPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MantemServicoPageRoutingModule } from './mantem-servico-routing.module';\n\nimport { MantemServicoPage } from './mantem-servico.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    MantemServicoPageRoutingModule\n  ],\n  declarations: [MantemServicoPage]\n})\nexport class MantemServicoPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2dlcmVuY2lhcklncmVqYS9tYW50ZXJTZXJ2aWNvcy9tYW50ZW0tc2Vydmljby9tYW50ZW0tc2Vydmljby5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { DominioServicoService } from 'src/app/providers/dominioServico/dominio-servico.service';\nimport { AdicionaServicoPage } from '../adiciona-servico/adiciona-servico.page';\nimport { ModalController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-mantem-servico',\n  templateUrl: './mantem-servico.page.html',\n  styleUrls: ['./mantem-servico.page.scss'],\n})\nexport class MantemServicoPage implements OnInit {\n\n  servicos: any[] = [];\n  constructor(public servicoService: DominioServicoService,\n    public modalCtrl: ModalController) { }\n\n  ngOnInit() {\n\n    this.servicoService.recuperaDominioServico().then(result => {\n      this.servicos = result;\n    });\n  }\n\n  public abreModalSelecionaServico() {\n    const modal = this.modalCtrl.create({\n      component: AdicionaServicoPage,\n      backdropDismiss: false,\n    }).then((modal) => {\n      modal.present();\n\n      modal.onWillDismiss().then(resultModal => {\n\n      });\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { DominioServicoRepositoryService } from 'src/app/repository/dominioServico/dominio-servico-repository.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DominioServicoService {\n  recuperaServicoAutoComplete(ev: string) {\n     return this.dominioServico.recuperaServicoAutoComplete(ev);\n  }\n\n  constructor(public dominioServico: DominioServicoRepositoryService) { }\n\n  public recuperaDominioServico() : Promise<any>{\n    \n    return this.dominioServico.recuperaDominioServico();\n  }\n\n  public adicionaServico(servico:any){\n    return this.dominioServico.add(servico,null);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BaseRepository } from '../repository-interface/Repository-Base';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DominioServicoRepositoryService extends BaseRepository {\n\n    /**\n     *\n     */\n    constructor() {\n        super();\n        this._collectionName = \"dominioServico\";\n    }\n\n    servicoConverter = {\n\n        toFirestore:function(servico){\n            return {servicoId : servico.servicoId,\n            nomeServico:servico.nomeServico}\n        }\n\n    }\n    recuperaServicoAutoComplete(query: string): Promise<any> {\n\n        return new Promise<any>((response, resp) => {\n            const endText = query + '\\uf8ff'; \n            this.db.collection(\"dominioServico\")\n                .orderBy(\"nomeServico\")\n                .limit(10)\n                .where(\"nomeServico\",\">=\",query)\n                .where(\"nomeServico\",\"<=\",endText)\n                // .startAt(query)\n                // .endAt(endText)\n                .get()\n                .then((result) => {\n\n                    let lst = [];\n                    result.forEach(function (doc) {\n\n                        lst.push({ nomeServico: doc.data().nomeServico, servicoId: doc.id });\n                    })\n                    response(lst);\n                })\n                .catch((err) => {\n                    resp(err);\n                });\n        });\n    }\n\n\n    recuperaDominioServico(): Promise<any> {\n        return new Promise<any>((response, resp) => {\n            this.db.collection(\"dominioServico\").get()\n            .then((result) => {\n\n                let lst = [];\n                result.forEach(function (doc) {\n\n                    lst.push({ nomeServico: doc.data().nomeServico, servicoId: doc.id });\n                })\n                response(lst);\n            })\n        });\n    }\n}\n"]}