{"version":3,"sources":["webpack:///src/app/pages/usuario/novo/novo.page.html","webpack:///src/app/helpers/handlerError.ts","webpack:///src/app/helpers/toastCustom.ts","webpack:///src/app/pages/usuario/novo/novo-routing.module.ts","webpack:///src/app/pages/usuario/novo/novo.module.ts","webpack:///src/app/pages/usuario/novo/novo.page.scss","webpack:///src/app/pages/usuario/novo/novo.page.ts"],"names":["HandlerError","err","toastCtrl","data","message","error","console","log","errorToast","ToastCustom","msg","CustomToast","color","duration","create","then","x","present","routes","path","component","NovoPageRoutingModule","imports","forChild","exports","NovoPageModule","declarations","NovoPage","angularFire","router","ngZone","authService","usuarioService","loadCtr","validation_messages","type","signUpForm","email","compose","required","pattern","password","minLength","confirm_password","nome","authRedirectResult","getRedirectResult","subscribe","result","user","redirectLoggedUserToProfilePage","submitError","hideLoader","run","navigate","valid","handler","showLoader","signUpWithEmail","value","usuarioObj","usuarioId","uid","AdicionarUsuario","reset","SucessoToast","signInWithFacebook","additionalUserInfo","setProviderAdditionalInfo","profile","signInWithGoogle","signInWithTwitter","selector","template"],"mappings":"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","file":"pages-usuario-novo-novo-module-es5.js","sourcesContent":["export default \"<ion-content>\\n  <ion-header class=\\\"ion-no-border\\\">\\n    <ion-toolbar>\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-menu-button></ion-menu-button>\\n      </ion-buttons>\\n    </ion-toolbar>\\n  </ion-header>\\n  <ion-card>\\n    <ion-card-header>\\n      <ion-card-title>Cadastre-se</ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <form [formGroup]=\\\"signUpForm\\\" (ngSubmit)=\\\"signUpWithEmail()\\\">\\n\\n        <ion-item>\\n          <ion-label position=\\\"floating\\\">Nome<ion-text color=\\\"danger\\\">*</ion-text>\\n          </ion-label>\\n\\n          <ion-input type=\\\"text\\\" formControlName=\\\"nome\\\" clearInput autocapitalize=\\\"off\\\"></ion-input>\\n        </ion-item>\\n\\n\\n        <ion-item>\\n          <ion-label position=\\\"floating\\\">Email<ion-text color=\\\"danger\\\">*</ion-text>\\n          </ion-label>\\n\\n          <ion-input type=\\\"email\\\" formControlName=\\\"email\\\" clearInput autocapitalize=\\\"off\\\" inputmode=\\\"email\\\">\\n          </ion-input>\\n        </ion-item>\\n\\n\\n        <ion-item>\\n          <ion-label position=\\\"floating\\\">Senha<ion-text color=\\\"danger\\\">*</ion-text>\\n          </ion-label>\\n\\n          <ion-input type=\\\"password\\\" formControlName=\\\"password\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item>\\n          <ion-label position=\\\"floating\\\">Confirmar Senha<ion-text color=\\\"danger\\\">*</ion-text>\\n          </ion-label>\\n          <ion-input type=\\\"password\\\" formControlName=\\\"confirm_password\\\"></ion-input>\\n        </ion-item>\\n        <div class=\\\"ion-text-center\\\" style=\\\"margin-top: 20px;\\\">\\n          <ion-button type=\\\"submit\\\" color=\\\"primary\\\" size=\\\"10\\\">Cadastrar</ion-button>\\n        </div>\\n        <div class=\\\"ion-text-center\\\" style=\\\"margin-top: 20px;\\\">\\n          <ion-label class=\\\"\\\">ou</ion-label>\\n        </div>\\n        <div class=\\\"ion-text-center\\\" style=\\\"margin-top: 20px;\\\">\\n\\n          <ion-button color=\\\"light\\\" [routerLink]=\\\"['/sign-in']\\\" routerDirection=\\\"root\\\">\\n            Já possui login?\\n          </ion-button>\\n        </div>\\n      </form>\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\";","import { ToastCustom } from './toastCustom';\nimport { ToastController } from '@ionic/angular/providers/toast-controller';\nexport class HandlerError {\n\n    public static handler(err: any, toastCtrl: ToastController) {\n        var data = err;\n        let message = data.error ? data.error.message : data;\n        \n        console.log(message);\n        ToastCustom.errorToast(message, toastCtrl);\n    }\n}","import { ToastController } from '@ionic/angular/providers/toast-controller';\n\nexport  class  ToastCustom{\n\n    public static errorToast(msg:string,  toastCtrl : ToastController){\n     \n      this.CustomToast(toastCtrl, msg,\"danger\",4000);\n    }\n\n    public static SucessoToast(toastCtrl : ToastController){\n\n      this.CustomToast(toastCtrl, \"Operação realizada com sucesso.\",\"success\",4000);\n    }\n\n    public static CustomToast(toastCtrl : ToastController, message:string, color:string, duration:any){\n      toastCtrl.create({\n        message: message,\n        duration: duration,\n        color:color\n      }).then(x=>{\n\n        x.present();\n      });\n    }\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { NovoPage } from './novo.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NovoPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class NovoPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { NovoPageRoutingModule } from './novo-routing.module';\n\nimport { NovoPage } from './novo.page';\nimport { ComponentsModule } from 'src/app/components/components.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ComponentsModule,\n    IonicModule,\n    NovoPageRoutingModule\n  ],\n  declarations: [NovoPage]\n})\nexport class NovoPageModule {}\n","export default \"ion-card-content {\\n  padding-left: 0px !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3RyYXZpcy9idWlsZC9hbmRyZWZlcnJlaXJhdHJpbmRhZGUvSWdyZWphQXBwL3NyYy9hcHAvcGFnZXMvdXN1YXJpby9ub3ZvL25vdm8ucGFnZS5zY3NzIiwic3JjL2FwcC9wYWdlcy91c3VhcmlvL25vdm8vbm92by5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSw0QkFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvdXN1YXJpby9ub3ZvL25vdm8ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWNhcmQtY29udGVudHtcbiAgICBwYWRkaW5nLWxlZnQ6IDBweCAhaW1wb3J0YW50O1xuICB9XG4gICIsImlvbi1jYXJkLWNvbnRlbnQge1xuICBwYWRkaW5nLWxlZnQ6IDBweCAhaW1wb3J0YW50O1xufSJdfQ== */\";","import { Component, NgZone } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { FirebaseAuthService } from 'src/app/providers/base-provider/firebase-auth-service.service';\nimport { UsuarioService } from 'src/app/providers/usuario/usuario.service';\nimport { auth } from 'firebase';\nimport { LoadingContr } from 'src/app/helpers/loadingContr';\nimport { ToastCustom } from 'src/app/helpers/toastCustom';\nimport { ToastController } from '@ionic/angular';\nimport { HandlerError } from 'src/app/helpers/handlerError';\n\n@Component({\n  selector: 'app-novo',\n  templateUrl: './novo.page.html',\n  styleUrls: ['./novo.page.scss'],\n})\nexport class NovoPage {\n  signUpForm: FormGroup;\n  submitError: string;\n  authRedirectResult: Subscription;\n\n  validation_messages = {\n    'email': [\n      { type: 'required', message: 'Email é de preenchimento obrigatório.' },\n      { type: 'pattern', message: 'Email inválido.' }\n    ],\n    'password': [\n      { type: 'required', message: 'Senha é de preenchimento obrigatório.' },\n      { type: 'minlength', message: 'Senha deverá conter pelo menos 6 caracteres' }\n    ],\n    'nome': [\n      { type: 'required', message: 'Nome é de preenchimento obrigatório.' },\n    ],\n    'confirm_password': [\n      { type: 'required', message: 'Confirmar Senha é de preenchimento obrigatório.' },\n    ]\n  };\n\n  constructor(\n    public angularFire: AngularFireAuth,\n    public router: Router,\n    private ngZone: NgZone,\n    private authService: FirebaseAuthService,\n    public usuarioService: UsuarioService,\n    public loadCtr: LoadingContr,\n    public toastCtrl: ToastController\n  ) {\n    this.signUpForm = new FormGroup({\n      email: new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\n      ])),\n      password: new FormControl('', Validators.compose([\n        Validators.minLength(6),\n        Validators.required\n      ])),\n      confirm_password: new FormControl('', Validators.compose([\n        Validators.required\n      ])),\n      nome: new FormControl('', Validators.compose([\n        Validators.required\n      ]))\n    });\n\n    // Get firebase authentication redirect result invoken when using signInWithRedirect()\n    // signInWithRedirect() is only used when client is in web but not desktop\n    this.authRedirectResult = this.authService.getRedirectResult()\n      .subscribe(result => {\n        if (result.user) {\n          this.redirectLoggedUserToProfilePage();\n        } else if (result.error) {\n          this.submitError = result.error;\n        }\n      });\n  }\n\n  // Once the auth provider finished the authentication flow, and the auth redirect completes,\n  // redirect the user to the profile page\n  redirectLoggedUserToProfilePage() {\n    // As we are calling the Angular router navigation inside a subscribe method, the navigation will be triggered outside Angular zone.\n    // That's why we need to wrap the router navigation call inside an ngZone wrapper\n    this.loadCtr.hideLoader()\n    this.ngZone.run(() => {\n      this.router.navigate(['profile']);\n    });\n  }\n\n  signUpWithEmail() {\n\n    if (!this.signUpForm.valid) {\n      HandlerError.handler(\"Favor preencher todos os campos devidamente sinalizados antes de continuar.\", this.toastCtrl)\n      return false;\n    }\n\n    this.loadCtr.showLoader();\n    this.authService.signUpWithEmail(this.signUpForm.value['email'], this.signUpForm.value['password'])\n      .then(user => {\n        // navigate to user profile\n        let usuarioObj = {\n          nome: this.signUpForm.value['nome'],\n          usuarioId: user.user.uid,\n          email: this.signUpForm.value['email'],\n        };\n        this.usuarioService.AdicionarUsuario(usuarioObj).then(x => {\n          this.loadCtr.hideLoader();\n          this.signUpForm.reset();\n          ToastCustom.SucessoToast(this.toastCtrl);\n          this.redirectLoggedUserToProfilePage();\n        }).catch(error => {\n          HandlerError.handler(error, this.toastCtrl);\n          this.loadCtr.hideLoader();\n\n        });\n      }).catch(err => {\n        HandlerError.handler(err, this.toastCtrl);\n        this.loadCtr.hideLoader();\n      })\n  }\n\n  facebookSignUp() {\n    this.authService.signInWithFacebook()\n      .then((result: any) => {\n        if (result.additionalUserInfo) {\n          this.authService.setProviderAdditionalInfo(result.additionalUserInfo.profile);\n        }\n        // This gives you a Facebook Access Token. You can use it to access the Facebook API.\n        // const token = result.credential.accessToken;\n        // The signed-in user info is in result.user;\n        this.redirectLoggedUserToProfilePage();\n      }).catch((error) => {\n        // Handle Errors here.\n      });\n  }\n\n  googleSignUp() {\n    this.authService.signInWithGoogle()\n      .then((result: any) => {\n        if (result.additionalUserInfo) {\n          this.authService.setProviderAdditionalInfo(result.additionalUserInfo.profile);\n        }\n        // This gives you a Google Access Token. You can use it to access the Google API.\n        // const token = result.credential.accessToken;\n        // The signed-in user info is in result.user;\n        this.redirectLoggedUserToProfilePage();\n      }).catch((error) => {\n        // Handle Errors here.\n      });\n  }\n\n  twitterSignUp() {\n    this.authService.signInWithTwitter()\n      .then((result: any) => {\n        if (result.additionalUserInfo) {\n          this.authService.setProviderAdditionalInfo(result.additionalUserInfo.profile);\n        }\n        // This gives you a Twitter Access Token. You can use it to access the Twitter API.\n        // const token = result.credential.accessToken;\n        // The signed-in user info is in result.user;\n        this.redirectLoggedUserToProfilePage();\n      }).catch((error) => {\n        // Handle Errors here.\n      });\n  }\n}\n"]}