{"version":3,"sources":["webpack:///src/app/pages/usuario/login/login.page.html","webpack:///src/app/helpers/handlerError.ts","webpack:///src/app/helpers/toastCustom.ts","webpack:///src/app/pages/usuario/login/login-routing.module.ts","webpack:///src/app/pages/usuario/login/login.module.ts","webpack:///src/app/pages/usuario/login/login.page.scss","webpack:///src/app/pages/usuario/login/login.page.ts"],"names":["HandlerError","err","toastCtrl","data","message","error","errorToast","ToastCustom","msg","CustomToast","color","duration","create","then","x","present","routes","path","component","LoginPageRoutingModule","imports","forChild","exports","LoginPageModule","declarations","LoginPage","angularFire","router","route","authService","loadControl","usuarioService","toast","validation_messages","type","signInForm","compose","required","pattern","minLength","returnUrl","snapshot","queryParams","valid","handler","Mensagens","CamposObrigatorios","showLoader","signInWithEmail","value","user","reset","recuperaUsuarioLogado","hideLoader","navigate","skipLocationChange","selector","template"],"mappings":"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","file":"pages-usuario-login-login-module-es5.js","sourcesContent":["export default \"<ion-content>\\n  <ion-header class=\\\"ion-no-border\\\">\\n    <ion-toolbar>\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-menu-button></ion-menu-button>\\n      </ion-buttons>\\n    </ion-toolbar>\\n  </ion-header>\\n  <ion-card>\\n    <ion-card-header>\\n      <ion-card-title>Login</ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <form [formGroup]=\\\"signInForm\\\" (ngSubmit)=\\\"signInWithEmail()\\\">\\n\\n        <ion-item class=\\\"input-item\\\">\\n          <ion-label position=\\\"floating\\\">Email <ion-text color=\\\"danger\\\">*</ion-text>\\n          </ion-label>\\n\\n          <ion-input type=\\\"email\\\" formControlName=\\\"email\\\" clearInput autocapitalize=\\\"off\\\" inputmode=\\\"email\\\"></ion-input>\\n        </ion-item>\\n\\n\\n        <ion-item class=\\\"input-item\\\">\\n          <ion-label position=\\\"floating\\\">Senha <ion-text color=\\\"danger\\\">*</ion-text>\\n          </ion-label>\\n\\n          <ion-input type=\\\"password\\\" formControlName=\\\"password\\\"></ion-input>\\n        </ion-item>\\n        <div class=\\\"ion-text-center\\\" style=\\\"margin-top: 20px;\\\">\\n          <ion-button type=\\\"submit\\\" color=\\\"primary\\\" size=\\\"10\\\">Entrar</ion-button>\\n        </div>\\n        <div class=\\\"ion-text-center\\\" style=\\\"margin-top: 20px;\\\">\\n          <ion-label class=\\\"\\\">ou</ion-label>\\n        </div>\\n        <div class=\\\"ion-text-center\\\" style=\\\"margin-top: 20px;\\\">\\n\\n          <ion-button color=\\\"light\\\" [routerLink]=\\\"['/sign-up']\\\" routerDirection=\\\"root\\\" clear>\\n            Cadastre-se\\n          </ion-button>\\n        </div>\\n      \\n      </form>\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\";","import { ToastCustom } from './toastCustom';\nimport { ToastController } from '@ionic/angular/providers/toast-controller';\nexport class HandlerError {\n\n    public static handler(err: any, toastCtrl: ToastController) {\n        var data = err;\n        let message = data.error ? data.error.message : data;\n        \n        ToastCustom.errorToast(message, toastCtrl);\n    }\n}","import { ToastController } from '@ionic/angular/providers/toast-controller';\n\nexport  class  ToastCustom{\n\n    public static errorToast(msg:string,  toastCtrl : ToastController){\n     \n      this.CustomToast(toastCtrl, msg,\"danger\",4000);\n    }\n\n    public static SucessoToast(toastCtrl : ToastController){\n\n      this.CustomToast(toastCtrl, \"Operação realizada com sucesso.\",\"success\",4000);\n    }\n\n    public static CustomToast(toastCtrl : ToastController, message:string, color:string, duration:any){\n      toastCtrl.create({\n        message: message,\n        duration: duration,\n        color:color\n      }).then(x=>{\n\n        x.present();\n      });\n    }\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\nimport { ComponentsModule } from 'src/app/components/components.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ComponentsModule,\n    IonicModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","export default \"ion-card-content {\\n  padding-left: 0px !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3RyYXZpcy9idWlsZC9hbmRyZWZlcnJlaXJhdHJpbmRhZGUvSWdyZWphQXBwL3NyYy9hcHAvcGFnZXMvdXN1YXJpby9sb2dpbi9sb2dpbi5wYWdlLnNjc3MiLCJzcmMvYXBwL3BhZ2VzL3VzdWFyaW8vbG9naW4vbG9naW4ucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksNEJBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3VzdWFyaW8vbG9naW4vbG9naW4ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWNhcmQtY29udGVudHtcbiAgICBwYWRkaW5nLWxlZnQ6IDBweCAhaW1wb3J0YW50O1xuICB9XG4gICIsImlvbi1jYXJkLWNvbnRlbnQge1xuICBwYWRkaW5nLWxlZnQ6IDBweCAhaW1wb3J0YW50O1xufSJdfQ== */\";","import { Component, NgZone, OnInit, OnDestroy } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { Subscription } from 'rxjs';\nimport { FirebaseAuthService } from 'src/app/providers/base-provider/firebase-auth-service.service';\nimport { LoadingContr } from 'src/app/helpers/loadingContr';\nimport { HandlerError } from 'src/app/helpers/handlerError';\nimport { ToastController, NavController } from '@ionic/angular';\nimport { Config } from 'src/app/config';\nimport { UsuarioService } from 'src/app/providers/usuario/usuario.service';\nimport { Constants } from 'src/app/utils/constants';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  signInForm: FormGroup;\n  submitError: string;\n  authRedirectResult: Subscription;\n  private returnUrl: string;\n  validation_messages = {\n    'email': [\n      { type: 'required', message: 'Campo de preenchimento obrigatório.' },\n      { type: 'pattern', message: 'Favor inserir email válido.' }\n    ],\n    'password': [\n      { type: 'required', message: 'Campo de preenchimento obrigatório.' },\n      { type: 'minlength', message: 'Senha deve ter no minimo 6 caracteres.' }\n    ]\n  };\n\n  constructor(\n    public angularFire: AngularFireAuth,\n    public router: Router,\n    private route: ActivatedRoute,\n    private authService: FirebaseAuthService,\n    public loadControl: LoadingContr,\n    public usuarioService: UsuarioService,\n    public toast: ToastController\n  ) {\n\n  }\n\n  ngOnInit(): void {\n    this.signInForm = new FormGroup({\n      'email': new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\n      ])),\n      'password': new FormControl('', Validators.compose([\n        Validators.minLength(6),\n        Validators.required\n      ]))\n    });\n\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n  }\n\n  signInWithEmail() {\n\n    if (!this.signInForm.valid) {\n      HandlerError.handler(Constants.Mensagens.CamposObrigatorios, this.toast)\n      return false;\n    }\n\n    this.loadControl.showLoader();\n    this.authService.signInWithEmail(this.signInForm.value['email'], this.signInForm.value['password'])\n      .then(user => {\n        this.signInForm.reset();\n        this.usuarioService.recuperaUsuarioLogado();\n        this.loadControl.hideLoader();\n        this.router.navigate([this.returnUrl], { skipLocationChange: true });\n        \n      })\n      .catch(error => {\n        HandlerError.handler(\"Email ou senha incorreto(s)\", this.toast);\n        this.loadControl.hideLoader();\n      });\n  }\n}\n"]}