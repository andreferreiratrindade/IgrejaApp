{"version":3,"sources":["./src/app/pages/gerenciarIgreja/manterPrestadores/consultar-prestador-adm/consultar-prestador-adm.page.html","./src/app/helpers/handlerError.ts","./src/app/pages/gerenciarIgreja/manterPrestadores/consultar-prestador-adm/consultar-prestador-adm-routing.module.ts","./src/app/pages/gerenciarIgreja/manterPrestadores/consultar-prestador-adm/consultar-prestador-adm.module.ts","./src/app/pages/gerenciarIgreja/manterPrestadores/consultar-prestador-adm/consultar-prestador-adm.page.scss","./src/app/pages/gerenciarIgreja/manterPrestadores/consultar-prestador-adm/consultar-prestador-adm.page.ts","./src/app/providers/dominioServico/dominio-servico.service.ts","./src/app/providers/igreja/igreja.service.ts","./src/app/repository/dominioServico/dominio-servico-repository.service.ts","./src/app/repository/igreja/igreja-rep.service.ts"],"names":[],"mappings":"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","file":"pages-gerenciarIgreja-manterPrestadores-consultar-prestador-adm-consultar-prestador-adm-module-es2015.js","sourcesContent":["export default \"<ion-header class=\\\"ion-no-border\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Manter Prestadores\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n\\n  <ion-card>\\n    <ion-card-content>\\n      <form [formGroup]=\\\"formConsultarPrestadorADM\\\" (ngSubmit)=\\\"ConsultarPrestador()\\\">\\n\\n        <ion-item (click)=\\\"abrirModalIgreja()\\\" detail>\\n          <ion-label>Igreja\\n          </ion-label>\\n          <ion-note slot=\\\"end\\\" color=\\\"primary\\\"> {{formConsultarPrestadorADM.value.nomeIgreja}}</ion-note>\\n        </ion-item>\\n        <ion-item (click)=\\\"abrirModalSituacaoPrestador()\\\" detail>\\n          <ion-label>Situação Prestador\\n          </ion-label>\\n          <ion-note slot=\\\"end\\\" color=\\\"primary\\\"> {{formConsultarPrestadorADM.value.nomeSituacaoPrestador}}</ion-note>\\n        </ion-item>\\n        <ion-button class=\\\"primary\\\" type=\\\"submit\\\" expand=\\\"block\\\">Pesquisar</ion-button>\\n      </form>\\n    </ion-card-content>\\n  </ion-card>\\n\\n  <ion-card *ngFor=\\\"let item of prestadores\\\" class=\\\"ion-no-border\\\">\\n    <ion-card-header>\\n\\n      <ion-card-title>\\n        <h3>{{item.nome}} </h3>\\n      </ion-card-title>\\n    </ion-card-header>\\n    <ion-item class=\\\"ion-no-border\\\">\\n      <ion-icon name=\\\"business-outline\\\" slot=\\\"start\\\"></ion-icon>\\n      <ion-label class=\\\"ion-text-wrap on-no-border\\\">\\n        <h2>{{item.nomeIgreja}} </h2>\\n      </ion-label>\\n      <ion-note color=\\\"tertiary\\\" slot=\\\"end\\\" *ngIf=\\\"item.staMembro\\\">\\n        membro\\n      </ion-note>\\n    </ion-item>\\n    <ion-item>\\n      <ion-icon name=\\\"golf-outline\\\" slot=\\\"start\\\"></ion-icon>\\n      <ion-label class=\\\"ion-text-wrap on-no-border\\\">\\n        <h2>{{item.bairro}} - {{item.cidade}} / {{item.uf}}</h2>\\n      </ion-label>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label class=\\\"ion-text-wrap on-no-border\\\">\\n        <h2>{{item.nomeSituacaoPrestador}}</h2>\\n      </ion-label>\\n    </ion-item>\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col size=\\\"4\\\">\\n          <ion-button size=\\\"small\\\" (click)=\\\"configuracoes(item.usuarioId)\\\">Configurações</ion-button>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </ion-card>\\n</ion-content>\";","import { ToastCustom } from './toastCustom';\nimport { ToastController } from '@ionic/angular/providers/toast-controller';\nexport class HandlerError {\n\n    public static handler(err: any, toastCtrl: ToastController) {\n        var data = err;\n        let message = data.error ? data.error.message : data;\n        \n        console.log(message);\n        ToastCustom.errorToast(message, toastCtrl);\n    }\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ConsultarPrestadorAdmPage } from './consultar-prestador-adm.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ConsultarPrestadorAdmPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ConsultarPrestadorAdmPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ConsultarPrestadorAdmPageRoutingModule } from './consultar-prestador-adm-routing.module';\n\nimport { ConsultarPrestadorAdmPage } from './consultar-prestador-adm.page';\nimport { ComponentsModule } from 'src/app/components/components.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ComponentsModule,\n    IonicModule,\n    ConsultarPrestadorAdmPageRoutingModule\n  ],\n  declarations: [ConsultarPrestadorAdmPage]\n})\nexport class ConsultarPrestadorAdmPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2dlcmVuY2lhcklncmVqYS9tYW50ZXJQcmVzdGFkb3Jlcy9jb25zdWx0YXItcHJlc3RhZG9yLWFkbS9jb25zdWx0YXItcHJlc3RhZG9yLWFkbS5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { PrestadorService } from 'src/app/providers/prestador/prestador.service';\nimport { UsuarioService } from 'src/app/providers/usuario/usuario.service';\nimport { IgrejaService } from 'src/app/providers/igreja/igreja.service';\nimport { Config } from 'src/app/config';\nimport { IonContent, ToastController, ModalController } from '@ionic/angular';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { LoadingContr } from 'src/app/helpers/loadingContr';\nimport { DominioServicoService } from 'src/app/providers/dominioServico/dominio-servico.service';\nimport { Router } from '@angular/router';\nimport { CallNumber } from '@ionic-native/call-number/ngx';\nimport { Constants } from 'src/app/utils/constants';\nimport { ModalSituacaoPrestadorPage } from '../modalSituacaoPrestador/modal-situacao-prestador/modal-situacao-prestador.page';\nimport { ModalIgrejaPage } from 'src/app/pages/igreja/modal-igreja/modal-igreja.page';\nimport { ToastCustom } from 'src/app/helpers/toastCustom';\nimport { HandlerError } from 'src/app/helpers/handlerError';\n\n@Component({\n  selector: 'app-consultar-prestador-adm',\n  templateUrl: './consultar-prestador-adm.page.html',\n  styleUrls: ['./consultar-prestador-adm.page.scss'],\n})\nexport class ConsultarPrestadorAdmPage implements OnInit {\n\n  @ViewChild(IonContent) ionContent: IonContent;\n\n  prestadores: any[] = [];\n  formConsultarPrestadorADM: FormGroup;\n  private igrejasDoAdmin: any[];\n  constructor(public prestadorService: PrestadorService,\n    public toastCtrl: ToastController,\n    public igrejaService: IgrejaService,\n    public usuarioService: UsuarioService,\n    public loadingContr: LoadingContr,\n    public dominioServicoService: DominioServicoService,\n    public router: Router,\n    public modalCtrl: ModalController,\n    private callNumber: CallNumber\n  ) {\n\n    this.formConsultarPrestadorADM = new FormGroup({\n      'nomeSituacaoPrestador': new FormControl(),\n      'situacaoPrestador': new FormControl(),\n      'nomeIgreja': new FormControl(),\n      'igrejaId': new FormControl(),\n    });\n    this.prestadores = [];\n\n    this.igrejaService.RecuperaIgrejaPorAdministrador(Config.RecuperaInstancia().recuperaUsuario().usuarioId)\n      .then(result => {\n        this.igrejasDoAdmin = result;\n        loadingContr.hideLoader();\n      }).catch(err => {\n\n        loadingContr.hideLoader();\n        console.log(err);\n      });\n  }\n\n\n\n\n  ngOnInit() {\n    // let usuario = Config.RecuperaInstancia().recuperaUsuario();\n\n    // this.igrejaService.RecuperaIgrejaPorAdministrador(usuario.usuarioId)\n    //   .then(igrejaResult => {\n    //     this.prestadorService.recuperaPrestadoresPorIgreja(igrejaResult.igrejaId)\n    //       .then(prestadoresResult => {\n    //         this.prestadores = prestadoresResult\n    //       })\n    //   })\n  }\n\n  ConsultarPrestador() {\n\n    this.prestadores = [];\n    this.loadingContr.showLoader();\n\n    this.prestadorService\n      .RecuperaPestadoresPesquisarPorAdministrador(\n        this.formConsultarPrestadorADM.value.situacaoPrestador\n        , this.formConsultarPrestadorADM.value.igrejaId\n        , Config.RecuperaInstancia().recuperaUsuario().usuarioId\n        , this.igrejasDoAdmin.map(x => { let obj = { igrejaId: x.id }; return obj; })\n      )\n      .then(prestadoresResult => {\n        \n        if (!prestadoresResult || prestadoresResult.length == 0) {\n          ToastCustom.CustomToast(this.toastCtrl, \"Nenhum prestador encontrado.\", \"danger\", 4000);\n          this.loadingContr.hideLoader();\n          return false;\n        }\n        this.prestadores = prestadoresResult;\n\n        this.prestadores.map(y=>{y.nomeSituacaoPrestador = Constants.ListTipoSituacaoPrestador.RecuperaDescricaoPorValor(y.situacaoPrestador)});\n        let lstusuarioId = [];\n        lstusuarioId = prestadoresResult.map(x => { return x.usuarioId });\n        this.recuperaNomePrestadores(lstusuarioId);\n\n        let lstIgrejaId = [];\n        lstIgrejaId = prestadoresResult.map(x => { return x.igrejaId });\n        this.recuperaNomeIgreja(lstIgrejaId);\n\n      }).catch(x => {\n\n        HandlerError.handler(x, this.toastCtrl);\n        this.loadingContr.hideLoader();\n      });\n  }\n  private recuperaNomePrestadores(lstusuarioId): Promise<any> {\n    return new Promise((result, reject) => {\n      this.usuarioService.RecuperaNomeUsuarios(lstusuarioId)\n        .then(usuariosResult => {\n          this.prestadores.map(x => {\n            x.nome = usuariosResult.find(y => y.data.usuarioId == x.usuarioId).data.nome;\n            x.email = usuariosResult.find(y => y.data.usuarioId == x.usuarioId).data.email;\n          });\n\n          this.ionContent.scrollToPoint(0, 350, 800);\n          this.loadingContr.hideLoader();\n\n        }).catch(x => {\n\n          HandlerError.handler(x, this.toastCtrl);\n          this.loadingContr.hideLoader();\n        });\n    });\n  }\n\n  private recuperaNomeIgreja(lstIgrejaId): Promise<any> {\n    return new Promise((result, reject) => {\n\n      this.igrejaService.RecuperaNomeIgreja(lstIgrejaId)\n        .then(resultIgreja => {\n          this.prestadores.map(x => {\n            x.nomeIgreja = resultIgreja.find(y => y.data.id == x.igrejaId).data.nomeIgreja;\n          });\n          this.loadingContr.hideLoader();\n\n        }).catch(x => {\n          reject(x)\n          HandlerError.handler(x, this.toastCtrl);\n          this.loadingContr.hideLoader();\n        });\n    });\n  }\n  abrirModalSituacaoPrestador() {\n    const modal = this.modalCtrl.create({\n      component: ModalSituacaoPrestadorPage,\n      componentProps: { situacoes: Constants.ListTipoSituacaoPrestador.RecuperaListagem() },\n      backdropDismiss: false,\n    }).then((modal) => {\n      modal.present();\n      modal.onWillDismiss().then(resultModal => {\n\n        if (resultModal) {\n          this.formConsultarPrestadorADM.controls['nomeSituacaoPrestador'].setValue(resultModal.data.descricao);\n          this.formConsultarPrestadorADM.controls['situacaoPrestador'].setValue(resultModal.data.valor);\n        }\n      });\n    });\n  }\n\n  configuracoes(item: any) {\n    this.router.navigate(['/manter-prestador'], { queryParams: { prestadorUsuarioId: item } });\n  }\n\n  abrirModalIgreja() {\n    const modal = this.modalCtrl.create({\n      component: ModalIgrejaPage,\n      componentProps: {\n        igrejas: this.igrejasDoAdmin\n      },\n      backdropDismiss: false,\n    }).then((modal) => {\n      modal.present();\n      modal.onWillDismiss().then(resultModal => {\n        if (resultModal) {\n          this.formConsultarPrestadorADM.controls['nomeIgreja'].setValue(resultModal.data.nomeIgreja);\n          this.formConsultarPrestadorADM.controls['igrejaId'].setValue(resultModal.data.id);\n        }\n      });\n    });\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { DominioServicoRepositoryService } from 'src/app/repository/dominioServico/dominio-servico-repository.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DominioServicoService {\n  recuperaServicoAutoComplete(ev: string) {\n     return this.dominioServico.recuperaServicoAutoComplete(ev);\n  }\n\n  constructor(public dominioServico: DominioServicoRepositoryService) { }\n\n  recuperaDominioServico() : Promise<any>{\n    \n    return this.dominioServico.recuperaDominioServico();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { IgrejaRepService } from 'src/app/repository/igreja/igreja-rep.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IgrejaService {\n\n\n  constructor(public igrejaRepService: IgrejaRepService) { }\n\n\n  RecuperaIgrejaPorAdministrador(usuarioId:any):Promise<any[]>{\n    return  this.igrejaRepService.RecuperaIgrejaPorAdministrador(usuarioId);\n\n  }\n\n  AdicionarNovaIgreja(obj : any) : Promise<any>{\n    return  this.igrejaRepService.add(obj,null);\n  }\n\n  RecuperaIgrejasPorCidade(cidade:string) : Promise<any[]>{\n    return this.igrejaRepService.RecuperaIgrejasPorCidade(cidade);\n  }\n  \n  RecuperaIgrejasPorEndereco(uf:string, cidade:string, bairro:string) : Promise<any[]>{\n    return this.igrejaRepService.RecuperaIgrejasPorEndereco(uf,cidade,bairro);\n  }\n\n  RecuperaNomeIgreja(igrejas: string[]) {\n    return this.igrejaRepService.RecuperaNomeIgreja(igrejas);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BaseRepository } from '../repository-interface/Repository-Base';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DominioServicoRepositoryService extends BaseRepository {\n\n    /**\n     *\n     */\n    constructor() {\n        super();\n        this._collectionName = \"dominioServico\";\n    }\n\n    servicoConverter = {\n\n        toFirestore:function(servico){\n            return {servicoId : servico.servicoId,\n            nomeServico:servico.nomeServico}\n        }\n\n    }\n    recuperaServicoAutoComplete(query: string): Promise<any> {\n\n        return new Promise<any>((response, resp) => {\n            const endText = query + '\\uf8ff'; \n            this.db.collection(\"dominioServico\")\n                .orderBy(\"nomeServico\")\n                .limit(10)\n                .where(\"nomeServico\",\">=\",query)\n                .where(\"nomeServico\",\"<=\",endText)\n                // .startAt(query)\n                // .endAt(endText)\n                .get()\n                .then((result) => {\n\n                    let lst = [];\n                    result.forEach(function (doc) {\n\n                        lst.push({ nomeServico: doc.data().nomeServico, servicoId: doc.id });\n                    })\n                    response(lst);\n                })\n                .catch((err) => {\n                    resp(err);\n                });\n        });\n    }\n\n\n    recuperaDominioServico(): Promise<any> {\n        return new Promise<any>((response, resp) => {\n            this.db.collection(\"dominioServico\").get()\n            .then((result) => {\n\n                let lst = [];\n                result.forEach(function (doc) {\n\n                    lst.push({ nomeServico: doc.data().nomeServico, servicoId: doc.id });\n                })\n                response(lst);\n            })\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BaseRepository } from '../repository-interface/Repository-Base';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IgrejaRepService extends BaseRepository {\n\n  constructor() {\n    super();\n\n    this._collectionName = \"igreja\";\n  }\n\n  RecuperaIgrejasPorEndereco(uf: string, cidade: string, bairro: string): Promise<any[]> {\n    return new Promise<any>((resolve, reject) => {\n      let query = this.db.collection('igreja')\n        .where(\"uf\", \"==\", uf);\n\n      if (cidade) {\n        query = query.where(\"cidade\", \"==\", cidade)\n      }\n\n      if (bairro) {\n        query = query.where(\"bairro\", \"==\", bairro)\n      }\n\n      query.get()\n        .then((result) => {\n\n          let lst = [];\n          result.forEach(function (doc) {\n\n            lst.push(doc.data());\n\n          });\n          resolve(lst)\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n  }\n\n\n\n  RecuperaIgrejaPorAdministrador(usuarioId): Promise<any[]> {\n    return new Promise<any>((resolve, reject) => {\n      this.db.collection('igreja')\n        .where(\"administradores\", \"array-contains\", {usuarioId:usuarioId})\n        .get()\n        .then((result) => {\n          let lst = [];\n          result.forEach(function (doc) {\n\n            lst.push(doc.data());\n\n          });\n          resolve(lst)\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n  }\n\n  RecuperaIgrejasPorCidade(cidade: string): Promise<any[]> {\n\n    return this.find({ elemento: \"cidade\", tipoComparacao: \"==\", comparacao: cidade });\n  }\n\n  RecuperaNomeIgreja(igrejas: string[]) {\n\n    // return this.db.collection(\"igreja\").where(firebase.firestore.FieldPath.documentId(),\"array-contains\",igrejas).get()\n    return this.find({ elemento: \"id\", tipoComparacao: \"in\", comparacao: igrejas });\n  }\n}\n"],"sourceRoot":"webpack:///"}